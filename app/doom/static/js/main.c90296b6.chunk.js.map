{"version":3,"sources":["../../src/util/url.js","../../src/conf/index.js","../../src/util/stringutil.js","../../src/util/md5.js","../../src/util/browser.js","../../src/util/uuid.js","../../src/util/index.js","../../src/app/props.js","../../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../../src/react/components/message/index.js","../../src/log/index.js","../../src/app/remapurl.js","../../src/input/controls.js","../../src/audio/scriptprocessor.js","../../src/storage/storage.js","../../src/input/touch/touchendlistener.js","../../src/display/visibilitymonitor.js","../../src/app/wrapper.js","../../src/input/hidemouse.js","../../src/apps/type/7800.js","../../src/apps/type/lynx.js","../../src/apps/type/nes.js","../../src/apps/applist.js","../../src/apps/type/genesis.js","../../src/images/index.js","../../src/apps/appregistry.js","../../src/display/debug.js","../../src/feed/feedbase.js","../../src/storage/index.js","../../src/feed/feeds.js","../../src/input/gamepadenum.js","../../src/input/gamepadnotifier.js","../../src/input/focusgrid.js","../../src/resources/index.js","../../src/zip/3rdparty/zip.js","../../src/react/context/webrcadecontext.js","../../src/react/components/image-button/index.js","../../src/react/components/screen/index.js","../../src/react/screens/alert/index.js","../../src/react/screens/error/index.js","../../src/react/screens/overlay/index.js","../../src/react/screens/pause/index.js","../../src/react/screens/yesno/index.js","../../src/react/components/app/index.js","../../src/react/components/file-button/index.js","../../src/react/components/switch/index.js","../../src/react/components/text-field/index.js","../../src/react/screens/editor/index.js","../../src/react/screens/app/index.js","../../src/react/screens/editor/tabs/fields.js","boom/index.js","App.js","index.js"],"names":["UrlUtil","addParam","sep","url","encodeURIComponent","getParam","val","RegExp","reg","decodeURIComponent","getBoolParam","this","getFileName","slash","ques","config","Config","isEmptyDefault","getLocalIp","CONFIG","getLocalPort","getLocalUrl","getCorsProxy","getCorsProxyDev","isPublicServer","getDefaultFeedContentRoot","getDefaultFeedImagesRoot","isEmptyDefaultFeed","setEmptyDefaultFeed","blobToStr","blob","Promise","reader","reject","resolve","isEmptyString","str","isValidString","md5cycle","x","k","a","b","c","d","ff","gg","hh","ii","add32","cmn","q","s","t","md5blk","md5blks","i","hex_chr","split","rhex","n","j","md5","hex","state","tail","md51","isXbox","navigator","userAgent","xboxIntervalId","uuidv4","crypto","Uint8Array","resolvePath","path","window","RP_DEBUG","debug","isDebug","AppProps","btoa","JSON","atob","RP_CONTEXT","RP_PROPS","RP_ROM","RP_TYPE","RP_EDITOR_TEST","RV_CONTEXT_EDITOR","RV_EDITOR_TEST_ENABLED","Symbol","iterator","asyncIterator","_catch","body","recover","result","e","then","hideMessage","el","document","styles","error","message","console","info","DB_PREFIX","GDRIVE_PREFIX","IMG_PREFIX","CONTENT_PREFIX","remapUrl","urlLower","newUrl","LOG","remapOldDefaultImage","remapOldContentUrl","remapDropbox","remapGdrive","CIDS","KCODES","StandardPadMapping","getAxisIndex","stick","isX","Object","id","num","getButtonNum","bid","idToButtonNum","getHotKeyIds","getAxisValue","pad","idx","KeyCodeToControlMapping","keyCodeToControlId","handleKeyEvent","cid","upLast","leftLast","isControlDown","down","controlIdState","downHeld","upHeld","leftHeld","rightHeld","DefaultKeyCodeToControlMapping","Controller","keyCodeToControlMapping","setPad","isPadButtonDown","analogToDigital","padMapping","bdown","isAxisLeft","isAxisRight","isAxisUp","isAxisDown","Controllers","setEnabled","docElement","enable","controllers","waitUntilControlReleased","setTimeout","f","poll","clen","gamepads","padIdx","controllerIdx","registerAudioResume","obj","cb","interval","audioCtx","isProcessor","audioSucceeded","resumeFunc","fSuccess","ScriptAudioProcessor","channelCount","frequency","bufferSize","scriptBufferSize","Array","adjustVolume","adjust","setDebug","isPlaying","setCallback","getFrequency","pause","p","start","sampleRate","createScriptProcessor","done","len","storeSound","channels","mixhead","storeSoundCombinedInput","offset","divisor","adjustVol","mixtail","Storage","init","checkLocalStorageAvailable","TEST","localStorage","openIndexedDb","DB_NAME","DB_STORE","Error","request","db","ex","put","name","value","idxDb","localStorageAvailable","OBJECT_MARKER","UINT8_ARRAY_MARKER","txn","binary","String","get","bytes","remove","TouchEndListener","VisibilityChangeMonitor","AppWrapper","getProps","app","getApp","getTitle","getStorage","storage","title","time","Date","getTime","createControllers","createStorage","createTouchListener","createVisibilityMonitor","createAudioProcessor","addAudioProcessorCallback","processor","onPause","showPauseMenu","audioProcessor","displayLoop","element","timeout","timeoutId","fTimeout","clearTimeout","hideInactiveMouse","testMagic","testInesMagic","ret","roundUpPow2","v","n64Str","locGenesis","locSms","locGba","locNeo","locMednafen","checkRom","APP_TYPE_KEYS","FBNEO_ARCADE","FBNEO_CAPCOM","FBNEO_KONAMI","FBNEO_NEOGEO","FCEUX","GENPLUSGX_GG","GENPLUSGX_MD","GENPLUSGX_SG","GENPLUSGX_SMS","JAVATARI","JS7800","MEDNAFEN_LNX","MEDNAFEN_NGC","MEDNAFEN_NGP","MEDNAFEN_PCE","MEDNAFEN_SGX","MEDNAFEN_VB","MEDNAFEN_WSC","MEDNAFEN_WS","PRBOOM","SNES9X","VBA_M_GBA","VBA_M_GB","VBA_M_GBC","A2600","A7800","ARCADE","ARCADE_KONAMI","ARCADE_CAPCOM","DOOM","GBA","GB","GBC","GENESIS","GG","LNX","NEOGEO","NES","NGC","NGP","PCE","SG1000","SGX","SMS","SNES","VB","WSC","WS","PCE_DEFAULTS","rom","pad6button","WS_DEFAULTS","rotated","language","NGP_DEFAULTS","ARCADE_DEFAULTS","additionalRoms","volAdjust","samples","playerOrder","types","key","PARALLEL_N64","N64","shortName","coreName","location","background","thumbnail","validate","extensions","addProps","bios","feedProps","outProps","defaults","forceAesMode","pal","port2","swap","getMd5","Response","pad3button","testUnifMagic","bufArray","romSize","vromSize","length","hwType","ym2413","rotation","rtc","mirroring","saveType","flashSize","colors","palette","border","boot","addAlias","alias","typeKey","props","absoluteKey","isDelayedExit","addParams","N64_SKIP_RP","n64skip","N64_VBO_RP","n64vbo","game","APP_TYPES","Util","ArrowBackWhiteImage","PlayArrowWhiteImage","VolumeOffBlackImage","AppRegistry","appType","getDefaultBackground","getDefaultThumbnail","getBackground","getThumbnail","getDescription","getName","getLocation","type","getLongTitle","loc","getNameForType","getGeneralNameForType","getCoreNameForType","getShortNameForType","getGeneralShortNameForType","getShortCoreNameForType","getThumbnailForType","getDefaultThumbnailForType","resolveImagePath","getBackgroundForType","getDefaultBackgroundForType","getDefaultsForType","getAppTypes","getTypeForExtension","ext","retType","getAllExtensions","dotted","nonUnique","getExtensions","instance","debugDiv","addDebugDiv","FeedBase","_logInvalidObject","msg","_expandItems","minLength","items","itemsOut","item","FEEDS_PROP","LOCAL_FEEDS_PREFIX","Feeds","outFeeds","feeds","isDeleteEnabled","feed","getUrl","isExistingLocalFeed","_getFeedIndexForTitle","addLocalFeed","newFeed","feedId","oldFeedId","localId","oldLocalId","addedFeed","index","oldFeed","getLocalFeed","addRemoteFeed","inFeed","exists","updated","removeFeed","getFeedForUrl","_getFeedIndexForUrl","getFeedWithId","remapUrls","getDistinctFeeds","getFeeds","_validate","_updateFeed","changed","_addFeed","findIndex","isLocal","_expand","expandedFeeds","longTitle","description","DEFAULT_ID","ADD_ID","NONE_URL","GamepadEnum","GamepadNotifier","pressed","running","FIRST_POLL_DELAY","mapping","buttons","NULL_BUTTON","pCount","firstPoll","hit","padDown","axes","fireAnalog","valx","valy","requestAnimationFrame","fireEvent","callbacks","globalCallbacks","defaultCallback","fireAnalogEvent","analogCallbacks","stop","addCallback","removeCallback","filter","addGlobalCallback","removeGlobalCallback","addAnalogCallback","removeAnalogCallback","setDefaultCallback","FocusGrid","comps","setComponents","setDefaultComponent","getComponentLocation","y","xarr","checkComp","moveFocus","that","checkRowForComp","row","comp","focus","defaultComp","TEXT_IDS","Resources","getText","zipExport","ERR_BAD_FORMAT","ERR_READ","ERR_READ_DATA","CHUNK_SIZE","TEXT_PLAIN","appendABViewSupported","Blob","DataView","ArrayBuffer","dataBuffer","dataArray","buffer","array","view","blobReader","BlobReader","callback","dataEnd","dataURI","dataStart","Math","data","getDataHelper","end","delta","RangeError","blobSlice","onerror","pending","contentType","dataString","chunkIndex","sn","initialMessage","worker","onend","outputSize","event","err","onreaderror","writer","step","crc","onflush","onprogress","size","crcInput","crcType","crcOutput","inputData","outputData","process","loaded","launchWorkerProcess","codecClass","launchProcess","out","extendedASCII","charCode","escape","entry","date","timeRaw","getDate","centralDirectory","inflateSN","Entry","checkCrc32","dataCrc32","testCrc32","readCommonHeader","dataOffset","copy","computeCrc32","inflate","zipReader","getEntries","doSeek","EOCDR_MIN","eocdrCallback","eocdrNotFoundCallback","seekEOCDR","dataView","datalength","fileslength","entries","filename","getString","decodeUTF8","decodeASCII","comment","close","_worker","createWorker","unescape","files","filenames","deflateSN","zipWriter","add","footer","compressedLength","crc32","header","options","getBytes","encodeUTF8","headerArray","directory","dontDeflate","writeHeader","level","deflate","writeFooter","writeFile","indexFilename","file","Crc32","table","NOOP","TextReader","Data64URIReader","Writer","TextWriter","Data64URIWriter","BlobWriter","DEFAULT_WORKER_SCRIPTS","deflater","inflater","scripts","urls","resolveURLs","Worker","ev","Reader","createReader","createZipReader","createWriter","createZipWriter","useWebWorkers","workerScriptsPath","workerScripts","global","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","inflate_mask","fixed_tl","fixed_td","cplens","cplext","cpdist","cpdext","BMAX","bindex","m","l","g","xp","h","w","u","z","hn","r","hp","mask","Int32Array","initWorkArea","huft_build","tb","bb","nl","tl","bl","nd","td","bd","InfTree","tree_index","need","lit","dist","lbits","dbits","ltree_index","dtree_index","ml","md","tp","tp_index_t_3","tp_index","tl_index","td_index","mode","ltree","dtree","tree","inflate_fast","tindex","left","codes","last","hufts","MANY","inftree","blens","bl_","bd_","tl_","td_","BAD","mark","InfBlocks","inflateReset","dictionary","dictLength","ZStream","inflateInit","bits","inflateEnd","inflateSync","inflateSetDictionary","read_byte","read_buf","env","buf","nomoreinput","buffers","lastIndex","bufferIndex","chunk","LITERALS","END_BLOCK","_dist_code","res","code","stree","elems","max_code","node","extra","base","max_length","overflow","xbits","gen_bitlen","next_code","bl_count","bi_reverse","gen_codes","Tree","StaticTree","func","config_table","z_errmsg","BUSY_STATE","FINISH_STATE","MAX_MATCH","MIN_LOOKAHEAD","tn2","tm2","depth","l_desc","d_desc","bl_desc","dyn_ltree","dyn_dtree","bl_tree","last_lit","matches","prevlen","nextlen","count","max_count","min_count","curlen","REP_3_6","REPZ_3_10","REPZ_11_138","put_byte","bi_valid","put_short","bi_buf","c2","send_bits","send_code","d_buf","l_buf","lc","out_length","in_length","strstart","dcode","lit_bufsize","lx","last_eob_len","eof","bi_windup","copy_block","stored_len","max_blindex","scan_tree","BL_CODES","build_bl_tree","opt_lenb","static_lenb","_tr_stored_block","compress_block","lcodes","dcodes","blcodes","rank","send_tree","send_all_trees","init_block","_tr_flush_block","block_start","strm","more","window_size","lookahead","w_size","match_start","head","prev","ins_h","chain_length","scan","best_len","limit","_nice_match","wmask","strend","scan_end1","scan_end","prev_length","match","cur_match","status","last_flush","hash_size","max_lazy_match","good_match","nice_match","max_chain_length","match_length","MIN_MATCH","match_available","lm_init","heap","smaller","_level","_method","memLevel","_strategy","w_mask","w_bits","hash_mask","hash_bits","hash_shift","pending_buf_size","strategy","deflateReset","_strm","flush","Z_NEED_DICT","old_flush","level_flags","bstate","max_block_size","fill_window","max_start","flush_block_only","deflate_stored","hash_head","longest_match","bflush","_tr_tally","deflate_fast","prev_match","max_insert","deflate_slow","STATIC_TREES","bi_flush","deflateInit","deflateEnd","deflateParams","deflateSetDictionary","flush_pending","bufsize","WebrcadeContext","React","ImageButton","disabled","onPad","focused","onClick","componentDidMount","gamepadNotifier","componentWillUnmount","componentDidUpdate","isFocusable","button","render","className","hoverImgSrc","imgSrc","label","disabledBtn","ref","onFocus","onBlur","alt","src","Screen","focusGrid","closeCallback","AlertScreen","okButtonRef","screenContext","screenStyles","buttonStyle","display","screen","style","ErrorScreen","formatMessage","OverlayScreen","hideUnmuteText","unmuteTextTimeoutId","buttonPrefix","tapText","matchMedia","tabIndex","PauseScreenButton","buttonRef","onHandlePad","other","PauseScreen","getFocusGridComponents","resumeButtonRef","padCount","getAdditionalButtons","exitButtonRef","appProps","exitCallback","isEditor","YesNoScreen","noButtonRef","yesButtonRef","prompt","onYes","onNo","WebrcadeApp","LOADING","LOADED","ERROR","YESNO","PAUSE","preloadImages","images","img","loadingPercent","errorMessage","yesNoInfo","showOverlay","showXboxViewMessage","show","setInterval","clearInterval","propsEncoded","context","getAppType","getStoragePath","renderLoading","renderErrorScreen","errorCloseCallback","renderYesNoScreen","renderPauseScreen","renderXboxViewScreen","textAlign","href","showButtons","renderOverlayScreen","ModeEnum","yesNoPrompt","resumeCallback","resume","isPauseScreen","setShowOverlay","isShowOverlay","navigateBack","fileInputRef","onFileSelect","onChange","FileButton","field","checked","Switch","width","TextField","APP_DIV_ID","APP_FRAME_ID","Boom","SAVE_COUNT","FS_PREFIX","CFG_FILE","SAV_PREFIX","SAV_EXT","FS","mkdir","fileName","storagePath","analyzePath","readFile","canvas","loadingCb","Module","elementPointerLock","prSyncFs","storeFiles","onAbort","exit","onExit","catch","setWindowTitle","locateFile","prefix","onRuntimeInitialized","SDL","audioContext","setStatus","loading","progress","preRun","addRunDependency","populateFiles","removeRunDependency","script","createElement","appendChild","App","boom","GAMES","toLowerCase","found","loadBoom","percent","setState","renderCanvas","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c90296b6.chunk.js","sourcesContent":["class UrlUtil {\n  static addParam(url, name, value) {\n    const sep = url.indexOf('?') >= 0 ? '&' : '?';\n    return `${url}${sep}${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n  }\n\n  static getParam(url, name) {\n    const reg = new RegExp('[?&]' + encodeURIComponent(name) + '=([^&#]*)');\n    const val = reg.exec(url);\n    return val ? decodeURIComponent(val[1]) : null;\n  }\n\n  static getBoolParam(url, name) {\n    const val = this.getParam(url, name);\n    return (!!val && (val.toLowerCase() === 'true' || val === '1'));\n  }\n\n  static getFileName(url) {\n    url = decodeURIComponent(url);\n    const slash = url.lastIndexOf(\"/\");\n    if (slash >= 0 && (url.length > (slash + 1))) {\n      url = url.substring(slash + 1);\n    }\n    const ques = url.lastIndexOf(\"?\");\n    if (ques >= 0) {\n      url = url.substring(0, ques);\n    }\n    return decodeURIComponent(url);\n  }\n}\n\nexport { UrlUtil };\n","import CONFIG from './config.json'\n\nclass Config {\n  isEmptyDefault = true;\n\n  getLocalIp() { return CONFIG.localIp; }\n  getLocalPort() { return CONFIG.localPort; }\n  getLocalUrl() { return `http://${this.getLocalIp()}:${this.getLocalPort()}`; }\n  getCorsProxy() { return CONFIG.corsProxy ? CONFIG.corsProxy : null;  }\n  getCorsProxyDev() { return CONFIG.corsProxyDev ? CONFIG.corsProxyDev : null;  }\n  isPublicServer() { return CONFIG.isPublicServer === true; }\n  getDefaultFeedContentRoot() { return CONFIG.defaultFeedContentRoot ? CONFIG.defaultFeedContentRoot : null; }\n  getDefaultFeedImagesRoot() { return CONFIG.defaultFeedImagesRoot ? CONFIG.defaultFeedImagesRoot : null; }\n  isEmptyDefaultFeed() { return this.isEmptyDefault; }\n  setEmptyDefaultFeed(empty) { this.isEmptyDefault = empty; }\n}\n\nconst config = new Config();\n\nexport { config }\n","const blobToStr = (blob) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reader.abort();\n      reject(reader.error);\n    };\n\n    reader.onload = () => {\n      const result = reader.result;\n      resolve(reader.result);\n    };\n    reader.readAsBinaryString(blob);\n  });\n}\n\nfunction u8ArrayToStr(u8Array) {\n\tvar i, len = u8Array.length, b_str = \"\";\n\tfor (i=0; i<len; i++) {\n\t\tb_str += String.fromCharCode(u8Array[i]);\n\t}\n\treturn b_str;\n}\n\nconst isEmptyString = (str) => {\n  return str === undefined || !str || str.length === 0;\n}\n\nconst isValidString = (str) => {\n  return str !== undefined && str && str.length > 0;\n}\n\nconst limitString = (str, limit) => {\n  const len = str.length;\n  if (str <= limit) {\n    return str;\n  } else {\n    return str.substring(0, limit) + \"...\";\n  }\n}\n\nconst strReplaceAll = (str, find, replace) => {\n  return str.split(find).join(replace);\n}\n\nexport {\n  blobToStr,\n  isEmptyString,\n  isValidString,\n  limitString,\n  strReplaceAll,\n  u8ArrayToStr\n}\n","// http://www.myersdaily.org/joseph/javascript/md5-text.html\n// TODO: Determine the license for this code (GPL?)\n\nfunction md5cycle(x, k) {\n  var a = x[0], b = x[1], c = x[2], d = x[3];\n\n  a = ff(a, b, c, d, k[0], 7, -680876936);\n  d = ff(d, a, b, c, k[1], 12, -389564586);\n  c = ff(c, d, a, b, k[2], 17, 606105819);\n  b = ff(b, c, d, a, k[3], 22, -1044525330);\n  a = ff(a, b, c, d, k[4], 7, -176418897);\n  d = ff(d, a, b, c, k[5], 12, 1200080426);\n  c = ff(c, d, a, b, k[6], 17, -1473231341);\n  b = ff(b, c, d, a, k[7], 22, -45705983);\n  a = ff(a, b, c, d, k[8], 7, 1770035416);\n  d = ff(d, a, b, c, k[9], 12, -1958414417);\n  c = ff(c, d, a, b, k[10], 17, -42063);\n  b = ff(b, c, d, a, k[11], 22, -1990404162);\n  a = ff(a, b, c, d, k[12], 7, 1804603682);\n  d = ff(d, a, b, c, k[13], 12, -40341101);\n  c = ff(c, d, a, b, k[14], 17, -1502002290);\n  b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n  a = gg(a, b, c, d, k[1], 5, -165796510);\n  d = gg(d, a, b, c, k[6], 9, -1069501632);\n  c = gg(c, d, a, b, k[11], 14, 643717713);\n  b = gg(b, c, d, a, k[0], 20, -373897302);\n  a = gg(a, b, c, d, k[5], 5, -701558691);\n  d = gg(d, a, b, c, k[10], 9, 38016083);\n  c = gg(c, d, a, b, k[15], 14, -660478335);\n  b = gg(b, c, d, a, k[4], 20, -405537848);\n  a = gg(a, b, c, d, k[9], 5, 568446438);\n  d = gg(d, a, b, c, k[14], 9, -1019803690);\n  c = gg(c, d, a, b, k[3], 14, -187363961);\n  b = gg(b, c, d, a, k[8], 20, 1163531501);\n  a = gg(a, b, c, d, k[13], 5, -1444681467);\n  d = gg(d, a, b, c, k[2], 9, -51403784);\n  c = gg(c, d, a, b, k[7], 14, 1735328473);\n  b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n  a = hh(a, b, c, d, k[5], 4, -378558);\n  d = hh(d, a, b, c, k[8], 11, -2022574463);\n  c = hh(c, d, a, b, k[11], 16, 1839030562);\n  b = hh(b, c, d, a, k[14], 23, -35309556);\n  a = hh(a, b, c, d, k[1], 4, -1530992060);\n  d = hh(d, a, b, c, k[4], 11, 1272893353);\n  c = hh(c, d, a, b, k[7], 16, -155497632);\n  b = hh(b, c, d, a, k[10], 23, -1094730640);\n  a = hh(a, b, c, d, k[13], 4, 681279174);\n  d = hh(d, a, b, c, k[0], 11, -358537222);\n  c = hh(c, d, a, b, k[3], 16, -722521979);\n  b = hh(b, c, d, a, k[6], 23, 76029189);\n  a = hh(a, b, c, d, k[9], 4, -640364487);\n  d = hh(d, a, b, c, k[12], 11, -421815835);\n  c = hh(c, d, a, b, k[15], 16, 530742520);\n  b = hh(b, c, d, a, k[2], 23, -995338651);\n\n  a = ii(a, b, c, d, k[0], 6, -198630844);\n  d = ii(d, a, b, c, k[7], 10, 1126891415);\n  c = ii(c, d, a, b, k[14], 15, -1416354905);\n  b = ii(b, c, d, a, k[5], 21, -57434055);\n  a = ii(a, b, c, d, k[12], 6, 1700485571);\n  d = ii(d, a, b, c, k[3], 10, -1894986606);\n  c = ii(c, d, a, b, k[10], 15, -1051523);\n  b = ii(b, c, d, a, k[1], 21, -2054922799);\n  a = ii(a, b, c, d, k[8], 6, 1873313359);\n  d = ii(d, a, b, c, k[15], 10, -30611744);\n  c = ii(c, d, a, b, k[6], 15, -1560198380);\n  b = ii(b, c, d, a, k[13], 21, 1309151649);\n  a = ii(a, b, c, d, k[4], 6, -145523070);\n  d = ii(d, a, b, c, k[11], 10, -1120210379);\n  c = ii(c, d, a, b, k[2], 15, 718787259);\n  b = ii(b, c, d, a, k[9], 21, -343485551);\n\n  x[0] = add32(a, x[0]);\n  x[1] = add32(b, x[1]);\n  x[2] = add32(c, x[2]);\n  x[3] = add32(d, x[3]);\n\n}\n\nfunction cmn(q, a, b, x, s, t) {\n  a = add32(add32(a, q), add32(x, t));\n  return add32((a << s) | (a >>> (32 - s)), b);\n}\n\nfunction ff(a, b, c, d, x, s, t) {\n  return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\n\nfunction gg(a, b, c, d, x, s, t) {\n  return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\n\nfunction hh(a, b, c, d, x, s, t) {\n  return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction ii(a, b, c, d, x, s, t) {\n  return cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\nfunction md51(s) {\n  var n = s.length,\n      state = [1732584193, -271733879, -1732584194, 271733878], i;\n  for (i = 64; i <= s.length; i += 64) {\n      md5cycle(state, md5blk(s.substring(i - 64, i)));\n  }\n  s = s.substring(i - 64);\n  var tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (i = 0; i < s.length; i++)\n      tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n  tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n  if (i > 55) {\n      md5cycle(state, tail);\n      for (i = 0; i < 16; i++) tail[i] = 0;\n  }\n  tail[14] = n * 8;\n  md5cycle(state, tail);\n  return state;\n}\n\n/* there needs to be support for Unicode here,\n  * unless we pretend that we can redefine the MD-5\n  * algorithm for multi-byte characters (perhaps\n  * by adding every four 16-bit characters and\n  * shortening the sum to 32 bits). Otherwise\n  * I suggest performing MD-5 as if every character\n  * was two bytes--e.g., 0040 0025 = @%--but then\n  * how will an ordinary MD-5 sum be matched?\n  * There is no way to standardize text to something\n  * like UTF-8 before transformation; speed cost is\n  * utterly prohibitive. The JavaScript standard\n  * itself needs to look at this: it should start\n  * providing access to strings as preformed UTF-8\n  * 8-bit unsigned value arrays.\n  */\nfunction md5blk(s) { /* I figured global was faster.   */\n  var md5blks = [], i; /* Andy King said do it this way. */\n  for (i = 0; i < 64; i += 4) {\n      md5blks[i >> 2] = s.charCodeAt(i)\n          + (s.charCodeAt(i + 1) << 8)\n          + (s.charCodeAt(i + 2) << 16)\n          + (s.charCodeAt(i + 3) << 24);\n  }\n  return md5blks;\n}\n\nvar hex_chr = '0123456789abcdef'.split('');\n\nfunction rhex(n) {\n  var s = '', j = 0;\n  for (; j < 4; j++)\n      s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\n          + hex_chr[(n >> (j * 8)) & 0x0F];\n  return s;\n}\n\nfunction hex(x) {\n  for (var i = 0; i < x.length; i++)\n      x[i] = rhex(x[i]);\n  return x.join('');\n}\n\nfunction md5(s) {\n  return hex(md51(s));\n}\n\n/* this function is much faster,\nso if possible we use it. Some IEs\nare the only ones I know of that\nneed the idiotic second function,\ngenerated by an if clause.  */\n\nfunction add32(a, b) {\n  return (a + b) & 0xFFFFFFFF;\n}\n\nif (md5('hello') != '5d41402abc4b2a76b9719d911017c592') {\n  function add32(x, y) {\n      var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n          msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n      return (msw << 16) | (lsw & 0xFFFF);\n  }\n}\n\nexport { md5 }\n","import React from \"react\";\n\nconst isXbox = () => {\n  const userAgent = navigator.userAgent.toLowerCase();\n  return userAgent.includes(\"xbox\");\n}\n\nconst isIos = () => {\n  const userAgent = navigator.userAgent.toLowerCase();\n  return /ipad|iphone|ipod/.test(userAgent);\n}\n\nconst isMacOs = () => {\n  const userAgent = navigator.userAgent.toLowerCase();\n  return /mac os/.test(userAgent);\n}\n\nconst isMobileSafari = () => {\n  const userAgent = navigator.userAgent.toLowerCase();\n  return userAgent.includes('safari/') &&\n    userAgent.includes('mobile/') &&\n    userAgent.includes('version/');\n}\n\nconst iosNavBarHackListener = () => {\n  document.body.style.overflow = 'scroll';\n  window.scrollTo(0, 0);\n  setTimeout(() => {\n    document.body.style.overflow = 'hidden';\n    window.scrollTo(0, 1);\n    setTimeout(() => window.scrollTo(0, 0), 50);\n  }, 500);\n}\n\nconst applyIosNavBarHack = () => {\n  if (isMobileSafari()) {\n    window.addEventListener('orientationchange', iosNavBarHackListener);\n  }\n}\n\nconst removeIosNavBarHack = () => {\n  if (isMobileSafari()) {\n    window.removeEventListener('orientationchange', iosNavBarHackListener);\n  }\n}\n\nlet xboxIntervalId = null;\n\nconst addXboxFullscreenCallback = (cb) => {\n  document.addEventListener('keydown', (e) => {\n    if (e.keyCode === 208) {\n      setTimeout(() => {\n        if (!document.hasFocus()) {\n          if (!xboxIntervalId) {\n            // Callback\n            cb(true);\n            // Watch until focus is restored\n            xboxIntervalId = setInterval(() => {\n              if (document.hasFocus()) {\n                cb(false);\n                clearInterval(xboxIntervalId);\n                xboxIntervalId = null;\n              }\n            }, 100);\n          }\n        }\n      }, 500);\n    }\n  });\n}\n\nconst getXboxViewMessage = () => {\n  return (\n      <div style={{ textAlign: 'center' }}>\n        Due to an apparent bug in the Xbox Edge browser, focus is lost when the <b>View</b> button is pressed.<br /><br />\n        To restore focus, open and close the <b>Guide menu</b> by pressing the controller's <b>Xbox</b> button twice.<br /><br />\n        Please use the alternate buttons for <b>Select</b>, <b>Start</b>, and <b>Show Pause Dialog</b> actions. <br />\n        See the \"Xbox Series X|S Platform\" section in the webRcade documentation.<br />\n        <a href=\"https://docs.webrcade.com/platforms/xbox\">docs.webrcade.com/platforms/xbox</a>\n      </div>\n  );\n}\n\n\nconst isTouchSupported = () => {\n  return matchMedia('(hover: none)').matches;\n}\n\nexport {\n  isMacOs,\n  isXbox,\n  isIos,\n  isMobileSafari,\n  applyIosNavBarHack,\n  removeIosNavBarHack,\n  isTouchSupported,\n  addXboxFullscreenCallback,\n  getXboxViewMessage\n}\n","export function uuidv4() {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  );\n}\n","//import { AppProps } from '../app';\nimport { UrlUtil } from './url';\nimport { config } from '../conf';\nimport { strReplaceAll } from './stringutil.js';\n\nexport * from './url.js'\nexport * from './md5.js'\nexport * from './stringutil.js'\nexport * from './browser.js'\nexport * from './uuid.js'\n\nconst cloneObject = (obj) => {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nconst preloadImages = (images) => {\n  images.forEach((image) => {\n    const img = new Image();\n    img.src = image;\n  });\n};\n\nfunction isDev() {\n  return process.env.NODE_ENV !== 'production';\n}\n\nfunction isApp() {\n  return (window.location.href.toLowerCase().indexOf('/app/') != -1) ||\n    (window.self !== window.top);\n}\n\nfunction resolvePath(path) {\n  return isDev() ? `${config.getLocalUrl()}/${path}` :\n    isApp() ? `../../${path}` : path;\n}\n\nfunction normalizeFileName(name) {\n  name = strReplaceAll(name, '?', '_');\n  name = strReplaceAll(name, '*', '_');\n  name = strReplaceAll(name, '/', '_');\n  name = strReplaceAll(name, ':', '_');\n  return name;\n}\n\nconst RP_DEBUG = \"debug\";\nlet debug = ((typeof window !== \"undefined\") ? UrlUtil.getBoolParam(window.location.search, RP_DEBUG) : null);\n\nfunction isDebug() {\n  return debug;\n}\n\nexport {\n  RP_DEBUG,\n  cloneObject,\n  normalizeFileName,\n  resolvePath,\n  isApp,\n  isDebug,\n  isDev,\n  preloadImages\n};\n","import { RP_DEBUG } from '../util'\n\nexport class AppProps {\n  static RP_CONTEXT = \"ctx\";\n  static RP_DEBUG = RP_DEBUG;\n  static RP_PROPS = \"props\";\n  static RP_ROM = \"rom\";\n  static RP_TYPE = \"type\";\n  static RP_EDITOR_TEST = \"editTest\"\n\n  static RV_CONTEXT_EDITOR = \"editor\";\n  static RV_EDITOR_TEST_ENABLED = \"1\";\n\n  static encode(props) {\n    return btoa(encodeURIComponent(JSON.stringify(props)));\n  }\n\n  static decode(encodedProps) {\n    return JSON.parse(decodeURIComponent(atob(encodedProps)));\n  }\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React, { Component } from \"react\";\n\nimport styles from './style.scss'\n\nexport class Message extends Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    return (\n      <div className={styles['message-container']}>\n        <div\n          id={styles['snackbar']}\n          className={styles['message']}\n          onClick={() => hideMessage()}\n        />\n      </div>\n    );\n  }\n};\n\nlet timeoutId = -1;\n\nexport function showMessage(message, addConsoleMessage = true) {\n  const el = document.getElementById(styles['snackbar']);\n  if (el) {\n    el.innerHTML = message + ( addConsoleMessage ? \"<br/><br/>See console log for details.\" : \"\");\n    el.classList.add(styles['show']);\n    el.classList.remove(styles['hide']);\n    if (timeoutId > 0) {\n      window.clearTimeout(timeoutId);\n    }\n    timeoutId = window.setTimeout(() => hideMessage(), 5000);\n  }\n}\n\nexport function hideMessage() {\n  const el = document.getElementById(styles['snackbar']);\n  if (el) {\n    window.setTimeout(() => {\n      el.classList.add(styles['hide']);\n      el.classList.remove(styles['show']);\n    }, 0);\n  }\n}\n\n","import { showMessage } from '../react/components/message';\n\nconst error = (message) => {\n  console.error(message);\n}\n\nconst info = (message) => {\n  console.info(message);\n}\n\nexport { error, info };\n","import * as LOG from '../log'\nimport { isDebug } from '../util'\n\nconst DB_PREFIX = \"https://www.dropbox.com/\";\nconst DB_REMAP_PREFIX = \"https://dl.dropboxusercontent.com/\";\nconst GDRIVE_PREFIX =\"https://drive.google.com/file/d/\";\nconst GDRIVE_REMAP_PREFIX = \"https://drive.google.com/uc?export=download&id=\";\n\nconst IMG_PREFIX = \"https://play.webrcade.com/default-feed/images/\";\nconst IMG_REMAP_PREFIX = \"https://webrcade.github.io/webrcade-default-feed/images/\";\nconst CONTENT_PREFIX = \"https://raw.githubusercontent.com/webrcade/webrcade/master/public/default-feed/content/\";\nconst CONTENT_REMAP_PREFIX = \"https://raw.githubusercontent.com/webrcade/webrcade-default-feed/main/content/\";\n\nconst remapDropbox = (urlLower, url) => {\n  // Check for Dropbox\n  if (urlLower.substring(0, DB_PREFIX.length) === DB_PREFIX) {\n    url = DB_REMAP_PREFIX + url.substring(DB_PREFIX.length);\n    url = url.split('?')[0];\n    if (isDebug()) {\n      LOG.info(\"Remapped dropbox url: '\" + url + \"'\");\n    }\n    return url;\n  }\n  return null;\n}\n\nconst remapGdrive = (urlLower, url) => {\n  // Check for Gdrive\n  if (urlLower.substring(0, GDRIVE_PREFIX.length) === GDRIVE_PREFIX) {\n    url = GDRIVE_REMAP_PREFIX + url.substring(GDRIVE_PREFIX.length);\n    url = url.split('/view')[0];\n    if (isDebug()) {\n      LOG.info(\"Remapped Gdrive url: '\" + url + \"'\");\n    }\n    return url;\n  }\n  return null;\n}\n\nconst remapOldDefaultImage = (urlLower, url) => {\n  if (urlLower.substring(0, IMG_PREFIX.length) === IMG_PREFIX) {\n    url = IMG_REMAP_PREFIX + url.substring(IMG_PREFIX.length);\n    if (isDebug()) {\n      LOG.info(\"Remapped old image url: '\" + url + \"'\");\n    }\n    return url;\n  }\n  return null;\n}\n\nconst remapOldContentUrl = (urlLower, url) => {\n  if (urlLower.substring(0, CONTENT_PREFIX.length) === CONTENT_PREFIX) {\n    url = CONTENT_REMAP_PREFIX + url.substring(CONTENT_PREFIX.length);\n    if (isDebug()) {\n      LOG.info(\"Remapped old content url: '\" + url + \"'\");\n    }\n    return url;\n  }\n  return null;\n}\n\nconst remapUrl = (url) => {\n  if (!url) return url;\n  const urlLower = url.toLowerCase();\n\n  let newUrl = remapOldDefaultImage(urlLower, url);\n  if (newUrl) return newUrl;\n\n  newUrl = remapOldContentUrl(urlLower, url);\n  if (newUrl) return newUrl;\n\n  newUrl = remapDropbox(urlLower, url);\n  if (newUrl) return newUrl;\n\n  newUrl = remapGdrive(urlLower, url);\n  if (newUrl) return newUrl;\n\n  return url;\n}\n\nexport { remapUrl };\n","import { isXbox } from '../util/browser.js'\n\nexport const CIDS = {\n  UP: 0,\n  DOWN: 1,\n  LEFT: 2,\n  RIGHT: 3,\n  A: 4,\n  B: 5,\n  X: 6,\n  Y: 7,\n  LBUMP: 8,\n  RBUMP: 9,\n  LTRIG: 10,\n  RTRIG: 11,\n  SELECT: 12,\n  START: 13,\n  LANALOG: 14,\n  RANALOG: 15,\n  ESCAPE: 16\n}\n\nexport const KCODES = {\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  A: 'KeyA',\n  C: 'KeyC',\n  D: 'KeyD',\n  Q: 'KeyQ',\n  S: 'KeyS',\n  V: 'KeyV',\n  W: 'KeyW',\n  X: 'KeyX',\n  Z: 'KeyZ',\n  SHIFT_RIGHT: 'ShiftRight',\n  ENTER: 'Enter',\n  ESCAPE: 'Escape'\n}\n\nexport class PadMapping {\n  constructor(idToButtonNum, axisMappings = []) {\n    this.idToButtonNum = idToButtonNum;\n    this.buttonNumToId = {};\n\n    for (const [id, num] of Object.entries(idToButtonNum)) {\n      this.buttonNumToId[num] = id;\n    }\n  }\n\n  getButtonNum(cid) {\n    const bid = this.idToButtonNum[cid];\n    return (bid === undefined ? -1 : bid);\n  }\n\n  getAxisIndex(stick, isX) { return -1 };\n\n  getHotKeyIds() { return null; }\n\n  getAxisValue(pad, stick, isX) {\n    if (pad && pad.axes) {\n      const idx = this.getAxisIndex(stick, isX);\n      if (idx >= 0 && idx < pad.axes.length) {\n        return pad.axes[idx];\n      }\n    }\n    return 0;\n  }\n}\n\nexport class StandardPadMapping extends PadMapping {\n  constructor() {\n    super({\n      [CIDS.UP]: 12,\n      [CIDS.DOWN]: 13,\n      [CIDS.LEFT]: 14,\n      [CIDS.RIGHT]: 15,\n      [CIDS.A]: 0,\n      [CIDS.B]: 1,\n      [CIDS.X]: 2,\n      [CIDS.Y]: 3,\n      [CIDS.LBUMP]: 4,\n      [CIDS.RBUMP]: 5,\n      [CIDS.LTRIG]: 6,\n      [CIDS.RTRIG]: 7,\n      [CIDS.SELECT]: 8,\n      [CIDS.START]: 9,\n      [CIDS.LANALOG]: 10,\n      [CIDS.RANALOG]: 11,\n    });\n  }\n\n  getAxisIndex(stick, isX) {\n    if (stick === 0)\n      return isX ? 0 : 1;\n    else if (stick === 1) {\n      return isX ? 2 : 3;\n    } else {\n      return -1;\n    }\n  }\n}\n\nexport class KeyCodeToControlMapping {\n  constructor(keyCodeToControlId = {}) {\n    this.keyCodeToControlId = keyCodeToControlId;\n    this.controlIdState = {};\n\n    for (const [code, id] of Object.entries(keyCodeToControlId)) {\n      this.controlIdState[id] = false;\n\n      this.leftLast = false;\n      this.upLast = false;\n      this.upHeld = false;\n      this.downHeld = false;\n      this.rightHeld = false;\n      this.leftHeld = false;\n    }\n  }\n\n  handleKeyEvent(e, down) {\n    const cid = this.keyCodeToControlId[e.code];\n    if (cid !== undefined) {\n      e.preventDefault();\n      this.controlIdState[cid] = down;\n\n      switch (cid) {\n        case CIDS.UP:\n          this.upHeld = down;\n          if (down) this.upLast = true;\n          break;\n        case CIDS.DOWN:\n          this.downHeld = down;\n          if (down) this.upLast = false;\n          break;\n        case CIDS.RIGHT:\n          this.rightHeld = down;\n          if (down) this.leftLast = false;\n          break;\n        case CIDS.LEFT:\n          this.leftHeld = down;\n          if (down) this.leftLast = true;\n          break;\n      }\n    }\n  }\n\n  isControlDown(cid) {\n    let down = this.controlIdState[cid];\n\n    if (down !== undefined && down) {\n      switch (cid) {\n        case CIDS.UP:\n          down = !(this.downHeld && !this.upLast);\n          break;\n        case CIDS.DOWN:\n          down = !(this.upHeld && this.upLast);\n          break;\n        case CIDS.RIGHT:\n          down = !(this.leftHeld && this.leftLast);\n          break;\n        case CIDS.LEFT:\n          down = !(this.rightHeld && !this.leftLast);\n          break;\n      }\n    } else {\n      down = false;\n    }\n\n    return down;\n  }\n}\n\nexport class DefaultKeyCodeToControlMapping extends KeyCodeToControlMapping {\n  constructor() {\n    super({\n      [KCODES.ARROW_UP]: CIDS.UP,\n      [KCODES.ARROW_DOWN]: CIDS.DOWN,\n      [KCODES.ARROW_RIGHT]: CIDS.RIGHT,\n      [KCODES.ARROW_LEFT]: CIDS.LEFT,\n      [KCODES.Z]: CIDS.A,\n      [KCODES.A]: CIDS.X,\n      [KCODES.X]: CIDS.B,\n      [KCODES.S]: CIDS.Y,\n      [KCODES.Q]: CIDS.LBUMP,\n      [KCODES.W]: CIDS.RBUMP,\n      [KCODES.SHIFT_RIGHT]: CIDS.SELECT,\n      [KCODES.ENTER]: CIDS.START,\n      [KCODES.ESCAPE]: CIDS.ESCAPE\n    });\n  }\n}\n\nexport class Controller {\n  constructor(keyCodeToControlMapping = new KeyCodeToControlMapping()) {\n    this.keyCodeToControlMapping = keyCodeToControlMapping;\n    this.padMapping = new StandardPadMapping();\n    this.pad = null;\n    this.isXbox = isXbox();\n  }\n\n  setPad(pad) {\n    this.pad = pad;\n  }\n\n  handleKeyEvent(e, down) {\n    this.keyCodeToControlMapping.handleKeyEvent(e, down);\n  }\n\n  isPadButtonDown(cid, analogToDigital = true) {\n    const { padMapping } = this;\n    const { pad } = this;\n    const bid = padMapping.getButtonNum(cid);\n    let bdown = false;\n    if (bid >= 0 && pad && pad.buttons.length > bid) {\n      bdown = pad.buttons[bid].pressed;\n    }\n\n    if (!bdown && analogToDigital) {\n      switch (cid) {\n        case CIDS.LEFT:\n          bdown = this.isAxisLeft(0);\n          break;\n        case CIDS.RIGHT:\n          bdown = this.isAxisRight(0);\n          break;\n        case CIDS.UP:\n          bdown = this.isAxisUp(0);\n          break;\n        case CIDS.DOWN:\n          bdown = this.isAxisDown(0);\n          break;\n      }\n    }\n\n    return bdown;\n  }\n\n  getAxisValue(stick, isX) {\n    const { padMapping } = this;\n    return padMapping.getAxisValue(this.pad, stick, isX);\n  }\n\n  isAxisLeft(stick) {\n    const { padMapping } = this;\n    return padMapping.getAxisValue(this.pad, stick, true) < -0.5;\n  }\n\n  isAxisRight(stick) {\n    const { padMapping } = this;\n    return padMapping.getAxisValue(this.pad, stick, true) > 0.5;\n  }\n\n  isAxisUp(stick) {\n    const { padMapping } = this;\n    return padMapping.getAxisValue(this.pad, stick, false) < -0.5;\n  }\n\n  isAxisDown(stick) {\n    const { padMapping } = this;\n    return padMapping.getAxisValue(this.pad, stick, false) > 0.5;\n  }\n\n  isControlDown(cid, analogToDigital = true) {\n    const { isXbox } = this;\n    if (this.keyCodeToControlMapping.isControlDown(cid)) {\n      return true;\n    }\n\n    if (cid === CIDS.ESCAPE || cid === CIDS.START || cid == CIDS.SELECT) {\n      // left trigger + (right analog/left analog)\n      // left trigger + (start/select) (not on xbox)\n      if (cid === CIDS.ESCAPE) {\n        return (\n          this.isPadButtonDown(CIDS.LTRIG) && (this.isPadButtonDown(CIDS.RANALOG) || this.isPadButtonDown(CIDS.LANALOG))) ||\n          (!isXbox && (\n            (this.isPadButtonDown(CIDS.LTRIG) && (this.isPadButtonDown(CIDS.START) || this.isPadButtonDown(CIDS.SELECT))) ||\n            (this.isPadButtonDown(CIDS.SELECT) && this.isPadButtonDown(CIDS.X))\n          )\n        );\n      // right trigger + right analog\n      // start (not available for xbox)\n      } else if (cid == CIDS.START) {\n        return (this.isPadButtonDown(CIDS.RTRIG) && this.isPadButtonDown(CIDS.RANALOG)) ||\n          (!isXbox && this.isPadButtonDown(CIDS.START));\n      // right trigger + left analog\n      // select (not available for xbox)\n      } else if (cid == CIDS.SELECT) {\n        return (this.isPadButtonDown(CIDS.RTRIG) && this.isPadButtonDown(CIDS.LANALOG)) ||\n        (!isXbox && this.isPadButtonDown(CIDS.SELECT));\n      }\n      return false;\n    }\n\n    return this.isPadButtonDown(cid, analogToDigital);\n  }\n}\n\nexport class Controllers {\n  constructor(controllerArray) {\n    this.controllers = controllerArray;\n\n    this.enabled = false;\n    this.setEnabled(true);\n  }\n\n  keyDownListener = e => {\n    this.handleKeyEvent(e, true);\n  }\n\n  keyUpListener = e => {\n    this.handleKeyEvent(e, false);\n  }\n\n  setEnabled(enable) {\n    const docElement = document.documentElement;\n\n    if (enable && !this.enabled) {\n      this.enabled = true;\n      docElement.addEventListener(\"keydown\", this.keyDownListener);\n      docElement.addEventListener(\"keyup\", this.keyUpListener);\n    } else if (!enable && this.enabled) {\n      this.enabled = false;\n      docElement.removeEventListener(\"keydown\", this.keyDownListener);\n      docElement.removeEventListener(\"keyup\", this.keyUpListener);\n    }\n  }\n\n  handleKeyEvent(e, down) {\n    for (let i = 0; i < this.controllers.length; i++) {\n      this.controllers[i].handleKeyEvent(e, down);\n    }\n  }\n\n  waitUntilControlReleased(controllerIdx, cid) {\n    const INTERVAL = 50;\n    return new Promise((resolve, reject) => {\n      const f = () => {\n        this.poll();\n        if (!this.isControlDown(controllerIdx, cid)) {\n          resolve();\n        } else {\n          setTimeout(f, INTERVAL);\n        }\n      }\n      setTimeout(f, INTERVAL);\n    });\n  }\n\n  poll() {\n    const clen = this.controllers.length;\n    const gamepads = navigator.getGamepads ? navigator.getGamepads() :\n      (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\n\n    let padIdx = 0;\n    for (let idx = 0; padIdx < clen && idx < gamepads.length; idx++) {\n      let pad = gamepads[idx];\n      if (pad) {\n        this.controllers[padIdx].setPad(pad);\n        // TODO: Set custom mappings (if necessary)\n        padIdx++;\n      }\n    }\n\n    for (; padIdx < clen; padIdx++) {\n      this.controllers[padIdx].setPad(null);\n    }\n  }\n\n  isControlDown(controllerIdx, cid, analogToDigital = true)  {\n    return this.controllers[controllerIdx].isControlDown(cid, analogToDigital);\n  }\n\n  isAxisDown(controllerIdx, stick) {\n    return this.controllers[controllerIdx].isAxisDown(stick);\n  }\n\n  isAxisUp(controllerIdx, stick) {\n    return this.controllers[controllerIdx].isAxisUp(stick);\n  }\n\n  isAxisLeft(controllerIdx, stick) {\n    return this.controllers[controllerIdx].isAxisLeft(stick);\n  }\n\n  isAxisRight(controllerIdx, stick) {\n    return this.controllers[controllerIdx].isAxisRight(stick);\n  }\n\n  getAxisValue(controllerIdx, stick, isX) {\n    return this.controllers[controllerIdx].getAxisValue(stick, isX);\n  }\n}\n","import * as LOG from '../log'\n\nconst registerAudioResume = (obj, cb, interval) => {\n  // Audio resume\n  let audioCtx = obj;\n  let isProcessor = false;\n\n  if (obj.audioCtx) {\n    audioCtx = obj.audioCtx;\n    isProcessor = true;\n  }\n\n  const docElement = document.documentElement;\n\n  let audioSucceeded = false;\n\n  const resumeFunc = () => {\n    if (isProcessor && obj.paused) {\n      return;\n    }\n\n    console.log('### resume func.');\n    const fSuccess = () => {\n      if (audioSucceeded) return;\n      audioSucceeded = true;\n\n      console.log('### success.');\n      if (cb) cb(true);\n\n      docElement.removeEventListener(\"keydown\", resumeFunc);\n      docElement.removeEventListener(\"click\", resumeFunc);\n      docElement.removeEventListener(\"drop\", resumeFunc);\n      docElement.removeEventListener(\"dragdrop\", resumeFunc);\n      docElement.removeEventListener(\"touchend\", resumeFunc);\n    };\n\n    if (audioCtx.state !== 'running') {\n      audioCtx.resume()\n        .then(() => {\n          if (audioCtx.state === 'running') {\n            fSuccess();\n          } else {\n            if (interval !== undefined) {\n              setTimeout(resumeFunc, interval);\n            }\n          }\n        });\n    } else {\n      fSuccess();\n    }\n  }\n\n  if (interval !== undefined) {\n    setTimeout(resumeFunc, interval);\n  }\n\n  docElement.addEventListener(\"keydown\", resumeFunc);\n  docElement.addEventListener(\"click\", resumeFunc);\n  docElement.addEventListener(\"drop\", resumeFunc);\n  docElement.addEventListener(\"dragdrop\", resumeFunc);\n  docElement.addEventListener(\"touchend\", resumeFunc);\n}\n\nclass ScriptAudioProcessor {\n  constructor(\n    channelCount = 2,\n    frequency = 48000,\n    bufferSize = 16384,\n    scriptBufferSize = 2048) {\n    this.frequency = frequency;\n    this.bufferSize = bufferSize;\n    this.scriptBufferSize = scriptBufferSize;\n// this.bufferSize = 16384;\n// this.scriptBufferSize = 4096;\n    this.channelCount = channelCount;\n    this.paused = true;\n\n    this.audioCtx = null;\n    this.audioNode = null;\n    this.mixhead = 0;\n    this.mixtail = 0;\n    this.callback = null;\n    this.debug = false;\n    this.adjustVol = 0;\n\n    this.tmpBuffers = new Array(channelCount);\n    this.mixbuffer = new Array(channelCount);\n    for (let i = 0; i < channelCount; i++) {\n      this.mixbuffer[i] = new Array(bufferSize);\n    }\n  }\n\n  adjustVolume(adjust) {\n    if (adjust === 0) {\n      return;\n    }\n    if (adjust > 99) {\n      adjust = 99;\n    }\n    if (adjust < -99) {\n      adjust = -99\n    }\n    if (adjust < 0) {\n      this.adjustVol = (100 + adjust) / 99;\n    } else {\n      this.adjustVol = 1 + (adjust / 5);\n    }\n    LOG.info(\"## adjustVolume: \" + this.adjustVol);\n  }\n\n  setDebug(debug) {\n    this.debug = debug;\n    return this;\n  }\n\n  isPlaying() {\n    const { audioCtx } = this;\n    return audioCtx && audioCtx.state === 'running';\n  }\n\n  setCallback(cb) {\n    this.callback = cb;\n  }\n\n  getFrequency() { return this.frequency; }\n\n  pause(p) {\n    if (p == this.paused)\n      return;\n    if (this.audioCtx) {\n      if (!p) {\n        this.audioCtx.resume();\n      } else {\n        this.audioCtx.suspend();\n      }\n    }\n    this.paused = p;\n  }\n\n  start() {\n    if (!this.audioCtx && (window.AudioContext || window.webkitAudioContext)) {\n      this.audioCtx = window.AudioContext ?\n        new window.AudioContext({ sampleRate: this.frequency }) :\n        new window.webkitAudioContext();\n      if (this.audioCtx.sampleRate) {\n        this.frequency = this.audioCtx.sampleRate;\n      }\n      this.audioNode = this.audioCtx.createScriptProcessor(\n        this.scriptBufferSize, 0, this.channelCount);\n      this.audioNode.onaudioprocess = (e) => {\n        for (let i = 0; i < this.channelCount; i++) {\n          this.tmpBuffers[i] = e.outputBuffer.getChannelData(i);\n        }\n        let done = 0;\n        let len = this.tmpBuffers[0].length;\n        while ((this.mixtail != this.mixhead) && (done < len)) {\n          for (let i = 0; i < this.channelCount; i++) {\n            this.tmpBuffers[i][done] = this.mixbuffer[i][this.mixtail];\n          }\n          done++;\n          this.mixtail++;\n          if (this.mixtail == this.bufferSize) {\n            this.mixtail = 0;\n          }\n        }\n\n        if (this.debug) {\n          if ((this.mixtail === this.mixhead) && (done < len)) {\n            LOG.info(\"Not enough samples available: \" + (len-done));\n          }\n        }\n\n        while (done < len) {\n          for (let i = 0; i < this.channelCount; i++) {\n            this.tmpBuffers[i] = 0;\n          }\n          done++;\n        }\n      }\n      this.audioNode.connect(this.audioCtx.destination);\n      this.paused = false;\n\n     // Add audio resume\n     setTimeout(() => {\n      if (!this.isPlaying()) {\n        registerAudioResume(this, this.callback);\n        if (this.callback) this.callback(false);\n      }}, 100);\n    }\n  }\n\n  storeSound(channels, length) {\n    // TODO: Add adjust volume?\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < channels.length; j++) {\n        this.mixbuffer[j][this.mixhead] = channels[j][i];\n      }\n      this.mixhead++;\n      if (this.mixhead == this.bufferSize)\n        this.mixhead = 0;\n    }\n  }\n\n  //max = 0;\n\n  storeSoundCombinedInput(channels, channelCount, length, offset = 0, divisor = 1) {\n    const adjust = this.adjustVol == 0 ? 1 : this.adjustVol;\n    for (let i = 0; i < length;) {\n      for (let j = 0; j < channelCount; j++) {\n        const val = ((channels[offset + i++]) / divisor) * adjust;\n        // if (val > this.max) {\n        //   this.max = val;\n        //   console.log(\"## new max = \" + this.max);\n        // }\n        this.mixbuffer[j][this.mixhead] = val;\n      }\n      this.mixhead++;\n      if (this.mixhead == this.bufferSize)\n        this.mixhead = 0;\n      if (this.debug) {\n        if (this.mixtail === (this.mixhead + 1)) {\n          LOG.info('head hit tail!');\n        }\n      }\n    }\n  }\n}\n\nexport { ScriptAudioProcessor, registerAudioResume }\n","import * as LOG from '../log'\n\nclass Storage {\n  constructor() {\n    this.initialized = false;\n    this.localStorageAvailable = false;\n    this.idxDb = null;\n  }\n\n  DB_NAME = \"webrcade\";\n  DB_STORE = \"STORAGE\";\n  UINT8_ARRAY_MARKER = \"_u8a_:\";\n  OBJECT_MARKER = \"_obj_:\";\n\n  async init() {\n    if (this.initialized) return;\n    this.initialized = true;\n\n    this.localStorageAvailable = this.checkLocalStorageAvailable();\n    try {\n      this.idxDb = await this.openIndexedDb();\n    } catch (ex) {\n      LOG.error(\"IndexDB error: \" + ex);\n    }\n  }\n\n  checkLocalStorageAvailable() {\n    const TEST = '__test__';\n    try {\n      localStorage.setItem(TEST, TEST);\n      localStorage.removeItem(TEST);\n      LOG.info(\"Local storage is available.\");\n      return true;\n    } catch (e) {\n      LOG.info(\"Local storage is not available.\");\n    }\n    return false;\n  }\n\n  async openIndexedDb() {\n    const { DB_NAME, DB_STORE } = this;\n\n    if (!window.indexedDB) {\n      window.indexedDB = window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n    }\n    if (!window.IDBTransaction) {\n      window.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\n    }\n    if (!window.IDBKeyRange) {\n      window.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\n    }\n    if (!window.indexedDB) {\n      throw new Error(\"indexedDB is unavailable.\")\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open(DB_NAME, 1);\n      request.onerror = (e) => {\n        LOG.info('Indexed DB error.');\n        reject(e);\n      };\n      request.onsuccess = (e) => {\n        LOG.info('Indexed DB success.');\n        resolve(request.result);\n      };\n      request.onupgradeneeded = (e) => {\n        try {\n          LOG.info('Indexed DB upgrade.');\n          var db = e.target.result;\n          db.createObjectStore(DB_STORE);\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n    });\n  }\n\n  async put(name, value) {\n    await this.init();\n\n    const { idxDb, localStorageAvailable, DB_STORE, OBJECT_MARKER,\n      UINT8_ARRAY_MARKER } = this;\n\n    if (idxDb) {\n      return new Promise((resolve, reject) => {\n        const txn = idxDb.transaction([DB_STORE], \"readwrite\");\n        txn.oncomplete = (e) => { resolve(true); };\n        txn.onerror = (e) => { reject(e); };\n        txn.objectStore(DB_STORE).put(value, name);\n      });\n    } else if (localStorageAvailable) {\n      // Uint8Array conversion to base64\n      if (value instanceof Uint8Array) {\n        let binary = \"\";\n        let len = value.byteLength;\n        for (let j = 0; j < len; j++) {\n          binary += String.fromCharCode(value[j]);\n        }\n        value = UINT8_ARRAY_MARKER + btoa(binary);\n      } else if (typeof value === 'object') {\n        value = OBJECT_MARKER + JSON.stringify(value);\n      }\n\n      localStorage.setItem(name, value);\n      return true;\n    }\n\n    LOG.info(\"Unable to perform put, storage not available.\")\n    return false;\n  }\n\n  async get(name) {\n    await this.init();\n\n    const { idxDb, localStorageAvailable, DB_STORE, OBJECT_MARKER,\n      UINT8_ARRAY_MARKER } = this;\n\n    if (idxDb) {\n      return new Promise((resolve, reject) => {\n        const txn = idxDb.transaction([DB_STORE], \"readonly\");\n        txn.onerror = (e) => { reject(e); }\n        const request = txn.objectStore(DB_STORE).get(name);\n        request.onsuccess = (e) => {\n          resolve(request.result ? request.result : null);\n        };\n      });\n    } else if (localStorageAvailable) {\n      let value = localStorage.getItem(name);\n      if (typeof value === 'string') {\n        // base64 to Uint8Array conversion\n        if (value.startsWith(UINT8_ARRAY_MARKER)) {\n          const binary = atob(value.substring(UINT8_ARRAY_MARKER.length));\n          const len = binary.length;\n          let bytes = new Uint8Array(len);\n          for (let j = 0; j < len; j++) {\n              bytes[j] = binary.charCodeAt(j);\n          }\n          value = bytes;\n        } else if (value.startsWith(OBJECT_MARKER)) {\n          value = JSON.parse(value.substring(OBJECT_MARKER.length));\n        }\n      }\n      return value;\n    }\n\n    LOG.info(\"Unable to perform get, storage not available.\")\n    return null;\n  }\n\n  async remove(name) {\n    await this.init();\n\n    const { idxDb, localStorageAvailable, DB_STORE, OBJECT_MARKER,\n      UINT8_ARRAY_MARKER } = this;\n\n    if (idxDb) {\n      return new Promise((resolve, reject) => {\n        const txn = idxDb.transaction([DB_STORE], \"readwrite\");\n        txn.onerror = (e) => { reject(e); }\n        const request = txn.objectStore(DB_STORE).delete(name);\n        request.onsuccess = (e) => {\n          resolve(true);\n        };\n      });\n    } else if (localStorageAvailable) {\n      localStorage.removeItem(name);\n      return true;\n    }\n\n    LOG.info(\"Unable to perform remove, storage not available.\")\n    return false;\n  }\n}\n\nexport { Storage }\n","export class TouchEndListener {\n  constructor(cb) {\n    window.document.addEventListener('touchend', e => cb(e));\n  }\n}\n","export class VisibilityChangeMonitor {\n  constructor(cb) {\n    this.cb = cb;\n    this.hidden = null;\n    this.visibilityChange = null;\n\n    const handleVisibilityChange = () => {\n      this.cb(document[this.hidden]);\n    }\n    if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n      this.hidden = \"hidden\";\n      this.visibilityChange = \"visibilitychange\";\n    } else if (typeof document.msHidden !== \"undefined\") {\n      this.hidden = \"msHidden\";\n      this.visibilityChange = \"msvisibilitychange\";\n    } else if (typeof document.webkitHidden !== \"undefined\") {\n      this.hidden = \"webkitHidden\";\n      this.visibilityChange = \"webkitvisibilitychange\";\n    }\n    document.addEventListener(this.visibilityChange, handleVisibilityChange, false);\n  }\n}\n","import * as LOG from '../log'\nimport { hideInactiveMouse } from '../input/hidemouse.js'\nimport { Controller, Controllers, DefaultKeyCodeToControlMapping } from '../input/controls.js'\nimport { ScriptAudioProcessor } from '../audio/scriptprocessor.js'\nimport { Storage } from '../storage/storage.js'\nimport { TouchEndListener } from '../input/touch/touchendlistener.js'\nimport { VisibilityChangeMonitor } from '../display/visibilitymonitor.js'\n\nexport class AppWrapper {\n  constructor(app, debug = false) {\n    this.app = app;\n    this.started = false;\n    this.debug = debug;\n    this.paused = false;\n\n    this.canvas = null;\n    this.touchListener = null;\n    this.displayLoop = null;\n\n    this.controllers = this.createControllers();\n    this.storage = this.createStorage();\n    this.visibilityMonitor = this.createVisibilityMonitor();\n    this.audioProcessor = this.createAudioProcessor();\n    if (this.audioProcessor) {\n      this.addAudioProcessorCallback(this.audioProcessor);\n    }\n  }\n\n  getProps() {\n    return this.app.appProps;\n  }\n\n  getApp() {\n    return this.app;\n  }\n\n  getTitle() {\n    return this.getProps().title;\n  }\n\n  getStorage() {\n    return this.storage;\n  }\n\n  async saveStateToStorage(path, buffer, info = true) {\n    const { storage } = this;\n\n    if (buffer) {\n      await storage.put(path, buffer);\n    }\n    if (info) {\n      await storage.put(`${path}/info`, {\n        title: this.getTitle(),\n        time: new Date().getTime()\n      });\n    }\n  }\n\n  createControllers() {\n    return new Controllers([\n      new Controller(new DefaultKeyCodeToControlMapping()),\n      new Controller()\n    ]);\n  }\n\n  createStorage() {\n    return new Storage();\n  }\n\n  createTouchListener() {\n    const { app } = this;\n\n    return new TouchEndListener(() => {\n      if (!app.isShowOverlay() && this.pause(true)) {\n        setTimeout(() => this.showPauseMenu(), 50);\n      }\n    });\n  }\n\n  createVisibilityMonitor() {\n    const { app } = this;\n\n    return new VisibilityChangeMonitor((p) => {\n      if (!app.isPauseScreen()) {\n        this.pause(p);\n      }\n    });\n  }\n\n  createAudioProcessor() {\n    return new ScriptAudioProcessor().setDebug(this.debug);\n  }\n\n  addAudioProcessorCallback(processor) {\n    if (!processor) return;\n\n    const { app } = this;\n\n    processor.setCallback((running) => {\n      setTimeout(() => app.setShowOverlay(!running), 50);\n    });\n  }\n\n  onPause(p) {}\n\n  async onShowPauseMenu() {}\n\n  async onStart(canvas) {}\n\n  showPauseMenu() {\n    const { app, controllers } = this;\n\n    if (controllers) {\n      controllers.setEnabled(false);\n    }\n\n    this.onShowPauseMenu()\n      .then(app.pause(() => {\n        if (controllers) {\n          controllers.setEnabled(true);\n        }\n        this.pause(false);\n      }))\n      .catch(e => LOG.error(e));\n  }\n\n  pause(p) {\n    const { audioProcessor, displayLoop } = this;\n\n    if ((p && !this.paused) || (!p && this.paused)) {\n      this.paused = p;\n      if (displayLoop) displayLoop.pause(p);\n      if (audioProcessor) audioProcessor.pause(p);\n      this.onPause(p);\n      return true;\n    }\n    return false;\n  }\n\n  async start(canvas) {\n    if (this.started) return;\n    this.started = true;\n\n    this.canvas = canvas;\n\n    if (canvas) {\n      hideInactiveMouse(canvas);\n    }\n\n    await this.onStart(canvas);\n\n    setTimeout(() => {\n      this.touchListener = this.createTouchListener();\n    }, 100);\n  }\n}\n","const hideInactiveMouse = (element, timeout = 2500) => {\n  let timeoutId = null;\n\n  const fTimeout = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = null;\n    element.style.cursor = 'none';\n  }\n\n  const f = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(fTimeout, timeout);\n    element.style.cursor = 'auto';\n  }\n\n  element.addEventListener('mousemove', f);\n  element.addEventListener('mousedown', f);\n  element.addEventListener('mouseup', f);\n  element.addEventListener('wheel', f);\n\n  element.style.cursor = 'auto';\n  timeoutId = setTimeout(fTimeout, timeout);\n}\n\nexport { hideInactiveMouse };\n","import {\n  blobToStr,\n  md5,\n} from '../../util';\n\nconst testMagic = (bytes) => {\n  if (bytes.length < 0x10) return false;\n\n  let str = \"\";\n  for (let i = 0x1; i < 0x10; i++)\n    str += String.fromCharCode(bytes[i]);\n  return str.startsWith(\"ATARI7800\");\n}\n\nconst getMd5 = async (blob) => {\n  const abuffer = await new Response(blob).arrayBuffer();\n  if (testMagic(new Uint8Array(abuffer)) && blob.size > 0x80) {\n    blob = blob.slice(0x80);\n    return md5(await blobToStr(blob));\n  }\n  return null;\n}\n\nexport { testMagic, getMd5 }\n","import {\n  blobToStr,\n  md5,\n} from '../../util';\n\nconst testMagic = (bytes) => {\n  if (bytes.length < 4) return false;\n\n  let str = \"\";\n  for (let i = 0; i < 4; i++)\n    str += String.fromCharCode(bytes[i]);\n  return str.startsWith(\"LYNX\");\n}\n\nconst getMd5 = async (blob) => {\n  const abuffer = await new Response(blob).arrayBuffer();\n  if (testMagic(new Uint8Array(abuffer)) && blob.size > 0x40) {\n    blob = blob.slice(0x40);\n    return md5(await blobToStr(blob));\n  }\n  return null;\n}\n\nexport { getMd5, testMagic }\n","import {\n  blobToStr,\n  md5,\n} from '../../util';\nimport * as LOG from '../../log';\n\nconst testInesMagic = (bytes) => {\n  if (bytes.length < 4) return false;\n\n  let str = \"\";\n  for (let i = 0; i < 4; i++)\n    str += String.fromCharCode(bytes[i]);\n\n  let ret = false;\n  if(str.startsWith(\"NES\\x1a\")) {\n    ret = true;\n  }\n  return ret;\n}\n\nconst testUnifMagic = (bytes) => {\n  if (bytes.length < 4) return false;\n\n  let str = \"\";\n  for (let i = 0; i < 4; i++)\n    str += String.fromCharCode(bytes[i]);\n\n  let ret = false;\n  if(str.startsWith(\"UNIF\")) {\n    ret = true;\n  }\n  return ret;\n}\n\nconst roundUpPow2 = (v) => {\n  v--;\n  v |= v >> 1;\n  v |= v >> 2;\n  v |= v >> 4;\n  v |= v >> 8;\n  v |= v >> 16;\n  v++;\n  v += (v == 0);\n  return v;\n}\n\nconst getMd5 = async (blob) => {\n  let offset = 16;\n  if (blob.size < offset) {\n    return null;\n  }\n\n  const abuffer = await new Response(blob).arrayBuffer();\n  const bufArray = new Uint8Array(abuffer);\n\n  if (!testInesMagic(bufArray)) {\n    // TODO: Support UNIF?\n    return null;\n  }\n\n  const romSize = roundUpPow2(bufArray[4]);\n  const vromSize = roundUpPow2(bufArray[5]);\n  const romType = bufArray[6];\n\n  if (romType & 4) {\n    LOG.info('offset for trainer.');\n    offset += 512;\n  }\n\n  const length = (romSize*0x4000) + (vromSize*0x2000);\n  blob = blob.slice(offset, length + offset);\n\n  return md5(await blobToStr(blob));\n}\n\nconst testMagic = (bytes) => {\n  return testInesMagic(bytes) || testUnifMagic(bytes);\n}\n\nexport { testMagic, getMd5 }\n","import { UrlUtil, isDev, isEmptyString } from '../util';\nimport { config } from '../conf';\nimport * as Genesis from './type/genesis';\nimport * as Atari7800 from './type/7800';\nimport * as Lynx from './type/lynx';\nimport * as Nes from './type/nes';\n\nlet n64Str = ((typeof window !== \"undefined\") ? UrlUtil.getParam(window.location.search, \"n64\") : null);\nif (n64Str) {\n  n64Str = n64Str.toLowerCase();\n}\nconst n64enabled = true; // n64Str && (n64Str === \"1\" || n64Str === \"true\");\n\nconst localIp = config.getLocalIp();\nconst locGenesis = isDev() ? `http://${localIp}:3010` : 'app/genesis/';\nconst locSms = locGenesis;\n\nconst loc7800 = isDev() ? `http://${localIp}:3020` : 'app/7800/';\nconst locNes = isDev() ? `http://${localIp}:3030` : 'app/nes/';\nconst locDoom = isDev() ? `http://${localIp}:3040` : 'app/doom/';\nconst loc2600 = isDev() ? `http://${localIp}:3050` : 'app/2600/';\nconst locSnes = isDev() ? `http://${localIp}:3060` : 'app/snes/';\nconst locN64 = isDev() ? `http://${localIp}:3065` : 'app/n64/';\nconst locGba = isDev() ? `http://${localIp}:3070` : 'app/gba/';\nconst locNeo = isDev() ? `http://${localIp}:3077` : 'app/neo/';\nconst locMednafen = isDev() ? `http://${localIp}:3075` : 'app/mednafen/';\n\nconst checkRom = app => {\n  if (app.props === undefined || isEmptyString(app.props.rom)) {\n    throw new Error(\"Missing 'rom' property\");\n  }\n}\n\nlet APP_TYPE_KEYS = Object.freeze({\n  // Types\n  FBNEO_ARCADE: \"fbneo-arcade\",\n  FBNEO_CAPCOM: \"fbneo-capcom\",\n  FBNEO_KONAMI: \"fbneo-konami\",\n  FBNEO_NEOGEO: \"fbneo-neogeo\",\n  FCEUX: \"fceux\",\n  GENPLUSGX_GG: \"genplusgx-gg\",\n  GENPLUSGX_MD: \"genplusgx-md\",\n  GENPLUSGX_SG: \"genplusgx-sg\",\n  GENPLUSGX_SMS: \"genplusgx-sms\",\n  JAVATARI: \"javatari\",\n  JS7800: \"js7800\",\n  MEDNAFEN_LNX: \"mednafen-lnx\",\n  MEDNAFEN_NGC: \"mednafen-ngc\",\n  MEDNAFEN_NGP: \"mednafen-ngp\",\n  MEDNAFEN_PCE: \"mednafen-pce\",\n  MEDNAFEN_SGX: \"mednafen-sgx\",\n  MEDNAFEN_VB: \"mednafen-vb\",\n  MEDNAFEN_WSC: \"mednafen-wsc\",\n  MEDNAFEN_WS: \"mednafen-ws\",\n  PRBOOM: \"prboom\",\n  SNES9X: \"snes9x\",\n  VBA_M_GBA: \"vba-m-gba\",\n  VBA_M_GB: \"vba-m-gb\",\n  VBA_M_GBC: \"vba-m-gbc\",\n  // Aliases\n  A2600: \"2600\",\n  A7800: \"7800\",\n  ARCADE: \"arcade\",\n  ARCADE_KONAMI: \"arcade-konami\",\n  ARCADE_CAPCOM: \"arcade-capcom\",\n  DOOM: \"doom\",\n  GBA: \"gba\",\n  GB: \"gb\",\n  GBC: \"gbc\",\n  GENESIS: \"genesis\",\n  GG: \"gg\",\n  LNX: \"lnx\",\n  NEOGEO: \"neogeo\",\n  NES: \"nes\",\n  NGC: \"ngc\",\n  NGP: \"ngp\",\n  PCE: \"pce\",\n  SG1000: 'sg1000',\n  SGX: 'sgx',\n  SMS: \"sms\",\n  SNES: \"snes\",\n  VB: \"vb\",\n  WSC: \"wsc\",\n  WS: \"ws\"\n});\n\nif (n64enabled) {\n  APP_TYPE_KEYS = Object.freeze({\n    ...{\n      PARALLEL_N64: \"parallel-n64\",\n      N64: \"n64\",\n    },\n    ...APP_TYPE_KEYS\n  })\n}\n\nconst PCE_DEFAULTS = {\n  rom: \"\",\n  pad6button: false\n};\n\nconst WS_DEFAULTS = {\n  rom: \"\",\n  rotated: false,\n  language: 0\n}\n\nconst NGP_DEFAULTS = {\n  rom: \"\",\n  language: 0\n}\n\nconst ARCADE_DEFAULTS = {\n  rom: \"\",\n  additionalRoms: [],\n  volAdjust: 0,\n  samples: \"\",\n  playerOrder: \"0:1:2:3\"\n}\n\nlet types = [\n  {\n    key: APP_TYPE_KEYS.FBNEO_NEOGEO,\n    name: 'SNK Neo Geo',\n    shortName: 'SNK Neo Geo',\n    coreName: 'Final Burn Neo',\n    location: locNeo,\n    background: 'images/app/neogeo-background.png',\n    thumbnail: 'images/app/neogeo-thumb.png',\n    validate: checkRom,\n    extensions: [],\n    addProps: (feedProps, outProps) => {\n      const bios = feedProps.neogeo_bios;\n      if (bios) {\n        outProps.neogeo_bios = bios;\n      }\n    },\n    defaults: {\n      rom: \"\",\n      additionalRoms: [],\n      volAdjust: 0,\n      bios: 0,\n      forceAesMode: false,\n    }\n  }, {\n    key: APP_TYPE_KEYS.FBNEO_ARCADE,\n    name: 'Arcade',\n    shortName: 'Arcade',\n    coreName: 'Final Burn Neo',\n    location: locNeo,\n    background: 'images/app/arcade-background.png',\n    thumbnail: 'images/app/arcade-thumb.png',\n    validate: checkRom,\n    extensions: [],\n    defaults: ARCADE_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.FBNEO_KONAMI,\n    name: 'Arcade: Konami',\n    shortName: 'Arcade: Konami',\n    coreName: 'Final Burn Neo',\n    location: locNeo,\n    background: 'images/app/konami-background.png',\n    thumbnail: 'images/app/konami-thumb.png',\n    validate: checkRom,\n    extensions: [],\n    defaults: ARCADE_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.FBNEO_CAPCOM,\n    name: 'Arcade: Capcom',\n    shortName: 'Arcade: Capcom',\n    coreName: 'Final Burn Neo',\n    location: locNeo,\n    background: 'images/app/capcom-background.png',\n    thumbnail: 'images/app/capcom-thumb.png',\n    validate: checkRom,\n    extensions: [],\n    defaults: ARCADE_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.SNES9X,\n    name: 'Super Nintendo',\n    shortName: 'Nintendo SNES',\n    coreName: 'SNES9X',\n    location: locSnes,\n    thumbnail: \"images/app/snes-thumb.png\",\n    background: \"images/app/snes-background.png\",\n    validate: checkRom,\n    extensions: ['smc', 'sfc', 'swc'],\n    defaults: {\n      rom: \"\",\n      pal: false,\n      port2: 0\n    }\n  },\n  {\n    key: APP_TYPE_KEYS.JAVATARI,\n    name: 'Atari 2600',\n    coreName: 'Javatari',\n    location: loc2600,\n    thumbnail: \"images/app/2600-thumb.png\",\n    background: \"images/app/2600-background.png\",\n    validate: checkRom,\n    extensions: ['a26'],\n    defaults: {\n      rom: \"\",\n      swap: false\n    }\n  }, {\n    key: APP_TYPE_KEYS.JS7800,\n    name: 'Atari 7800',\n    coreName: 'JS7800',\n    location: loc7800,\n    background: 'images/app/7800-background.png',\n    thumbnail: 'images/app/7800-thumb.png',\n    validate: checkRom,\n    extensions: ['a78'],\n    testMagic: Atari7800.testMagic,\n    getMd5: Atari7800.getMd5,\n    defaults: {\n      rom: \"\"\n    }\n  }, {\n    key: APP_TYPE_KEYS.GENPLUSGX_MD,\n    name: 'Sega Genesis',\n    coreName: 'Genesis Plus GX',\n    location: locGenesis,\n    background: 'images/app/genesis-background.png',\n    thumbnail: 'images/app/genesis-thumb.png',\n    validate: checkRom,\n    extensions: ['smd', 'md', 'gen'],\n    testMagic: Genesis.testMagic,\n    defaults: {\n      rom: \"\",\n      pal: false,\n      pad3button: false\n    }\n  }, {\n    key: APP_TYPE_KEYS.FCEUX,\n    name: 'Nintendo Entertainment System',\n    shortName: 'Nintendo NES',\n    coreName: 'FCEUX',\n    location: locNes,\n    background: 'images/app/nes-background.png',\n    thumbnail: 'images/app/nes-thumb.png',\n    validate: checkRom,\n    extensions: ['nes'],\n    testMagic: Nes.testMagic,\n    getMd5: Nes.getMd5,\n    defaults: {\n      rom: \"\",\n      pal: false\n    }\n  }, {\n    key: APP_TYPE_KEYS.GENPLUSGX_SMS,\n    name: 'Sega Master System',\n    coreName: 'Genesis Plus GX',\n    location: locSms,\n    background: 'images/app/mastersystem-background.png',\n    thumbnail: 'images/app/mastersystem-thumb.png',\n    validate: checkRom,\n    extensions: ['sms'],\n    defaults: {\n      rom: \"\",\n      hwType: 0,\n      pal: false,\n      ym2413: false\n    }\n  }, {\n    key: APP_TYPE_KEYS.GENPLUSGX_SG,\n    name: 'Sega SG-1000',\n    coreName: 'Genesis Plus GX',\n    location: locSms,\n    background: 'images/app/sg1000-background.png',\n    thumbnail: 'images/app/sg1000-thumb.png',\n    validate: checkRom,\n    extensions: ['sg'],\n    defaults: {\n      rom: \"\",\n      pal: false\n    }\n  }, {\n    key: APP_TYPE_KEYS.GENPLUSGX_GG,\n    name: 'Sega Game Gear',\n    coreName: 'Genesis Plus GX',\n    location: locSms,\n    background: 'images/app/gamegear-background.png',\n    thumbnail: 'images/app/gamegear-thumb.png',\n    validate: checkRom,\n    extensions: ['gg'],\n    defaults: {\n      rom: \"\"\n    }\n  }, {\n    key: APP_TYPE_KEYS.VBA_M_GBA,\n    name: 'Nintendo Game Boy Advance',\n    shortName: 'Nintendo GBA',\n    coreName: 'VBA-M',\n    location: locGba,\n    background: 'images/app/gba-background.png',\n    thumbnail: 'images/app/gba-thumb.png',\n    validate: checkRom,\n    extensions: ['gba'],\n    defaults: {\n      rom: \"\",\n      rotation: 0,\n      rtc: false,\n      mirroring: false,\n      saveType: 0,\n      flashSize: 65536\n    }\n  }, {\n    key: APP_TYPE_KEYS.VBA_M_GB,\n    name: 'Nintendo Game Boy',\n    shortName: 'Nintendo Game Boy',\n    coreName: 'VBA-M',\n    location: locGba,\n    background: 'images/app/gb-background.png',\n    thumbnail: 'images/app/gb-thumb.png',\n    validate: checkRom,\n    extensions: ['gb'],\n    defaults: {\n      rom: \"\",\n      hwType: 0,\n      colors: 0,\n      palette: 0,\n      border: 0\n    }\n  }, {\n    key: APP_TYPE_KEYS.VBA_M_GBC,\n    name: 'Nintendo Game Boy Color',\n    shortName: 'Nintendo Game Boy Color',\n    coreName: 'VBA-M',\n    location: locGba,\n    background: 'images/app/gbc-background.png',\n    thumbnail: 'images/app/gbc-thumb.png',\n    validate: checkRom,\n    extensions: ['gbc'],\n    defaults: {\n      rom: \"\"\n    }\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_PCE,\n    name: 'NEC PC Engine',\n    shortName: 'NEC PC Engine',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/pce-background.png',\n    thumbnail: 'images/app/pce-thumb.png',\n    validate: checkRom,\n    extensions: ['pce'],\n    defaults: PCE_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_SGX,\n    name: 'NEC SuperGrafx',\n    shortName: 'NEC SuperGrafx',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/sgx-background.png',\n    thumbnail: 'images/app/sgx-thumb.png',\n    validate: checkRom,\n    extensions: ['sgx'],\n    defaults: PCE_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_VB,\n    name: 'Nintendo Virtual Boy',\n    shortName: 'Nintendo Virtual Boy',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/vb-background.png',\n    thumbnail: 'images/app/vb-thumb.png',\n    validate: checkRom,\n    extensions: ['vb'], // TODO: More?\n    defaults: {\n      rom: \"\",\n      pad6button: false\n    }\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_NGC,\n    name: 'SNK Neo Geo Pocket Color',\n    shortName: 'SNK Neo Geo Pocket Color',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/ngc-background.png',\n    thumbnail: 'images/app/ngc-thumb.png',\n    validate: checkRom,\n    extensions: ['ngc'],\n    defaults: NGP_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_NGP,\n    name: 'SNK Neo Geo Pocket',\n    shortName: 'SNK Neo Geo Pocket',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/ngp-background.png',\n    thumbnail: 'images/app/ngp-thumb.png',\n    validate: checkRom,\n    extensions: ['ngp'],\n    defaults: NGP_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_WSC,\n    name: 'Bandai WonderSwan Color',\n    shortName: 'Bandai WonderSwan Color',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/wsc-background.png',\n    thumbnail: 'images/app/wsc-thumb.png',\n    validate: checkRom,\n    extensions: ['wsc'],\n    defaults: WS_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_WS,\n    name: 'Bandai WonderSwan',\n    shortName: 'Bandai WonderSwan',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/ws-background.png',\n    thumbnail: 'images/app/ws-thumb.png',\n    validate: checkRom,\n    extensions: ['ws'],\n    defaults: WS_DEFAULTS\n  }, {\n    key: APP_TYPE_KEYS.MEDNAFEN_LNX,\n    name: 'Atari Lynx',\n    shortName: 'Atari Lynx',\n    coreName: 'Mednafen',\n    location: locMednafen,\n    background: 'images/app/lynx-background.png',\n    thumbnail: 'images/app/lynx-thumb.png',\n    validate: checkRom,\n    extensions: ['lnx'],\n    testMagic: Lynx.testMagic,\n    getMd5: Lynx.getMd5,\n    addProps: (feedProps, outProps) => {\n      const boot = feedProps.lnx_boot;\n      if (boot) {\n        outProps.lnx_boot = boot;\n      }\n    },\n    defaults: {\n      rom: \"\",\n      rotation: 0\n    }\n  }\n];\n\nconst addAlias = (types, alias, typeKey) => {\n  const { key, ...props } = types.filter(t => t.key === typeKey)[0];\n  types.push({ key: alias, absoluteKey: typeKey, ...props });\n}\n\n// N64\nif (n64enabled) {\n  types.push({\n    key: APP_TYPE_KEYS.PARALLEL_N64,\n    name: 'Nintendo 64',\n    coreName: 'paraLLEl N64',\n    location: locN64,\n    background: 'images/app/n64-background.png',\n    thumbnail: 'images/app/n64-thumb.png',\n    validate: checkRom,\n    extensions: ['n64', 'v64', 'z64'],\n    isDelayedExit: true,\n    addParams: (url) => {\n      url = UrlUtil.addParam(url, \"n64\", \"1\");\n      const N64_SKIP_RP = \"n64.skip\";\n      const n64skip = UrlUtil.getParam(\n        window.location.search, N64_SKIP_RP);\n      if (n64skip) {\n        url = UrlUtil.addParam(url, N64_SKIP_RP, n64skip);\n      }\n      const N64_VBO_RP = \"n64.vbo\";\n      const n64vbo = UrlUtil.getParam(\n        window.location.search, N64_VBO_RP);\n      if (n64vbo) {\n        url = UrlUtil.addParam(url, N64_VBO_RP, n64vbo);\n      }\n      return url;\n    },\n    defaults: {\n      rom: \"\"\n    }\n  });\n  addAlias(types, APP_TYPE_KEYS.N64, APP_TYPE_KEYS.PARALLEL_N64);\n}\n\n// Only add PRBoom on public server\nif (config.isPublicServer()) {\n  types.push({\n    key: APP_TYPE_KEYS.PRBOOM,\n    name: 'Doom Classic',\n    coreName: 'PrBoom',\n    location: locDoom,\n    background: 'images/app/doom-background.png',\n    thumbnail: 'images/app/doom-thumb.png',\n    isDelayedExit: true,\n    validate: app => {\n      if (app.props === undefined || isEmptyString(app.props.game)) {\n        throw new Error(\"Missing 'game' property\");\n      }\n    },\n    defaults: {\n      game: \"\"\n    }\n  });\n  addAlias(types, APP_TYPE_KEYS.DOOM, APP_TYPE_KEYS.PRBOOM);\n}\n\n// Aliases\naddAlias(types, APP_TYPE_KEYS.A2600, APP_TYPE_KEYS.JAVATARI);\naddAlias(types, APP_TYPE_KEYS.A7800, APP_TYPE_KEYS.JS7800);\naddAlias(types, APP_TYPE_KEYS.ARCADE, APP_TYPE_KEYS.FBNEO_ARCADE);\naddAlias(types, APP_TYPE_KEYS.ARCADE_CAPCOM, APP_TYPE_KEYS.FBNEO_CAPCOM);\naddAlias(types, APP_TYPE_KEYS.ARCADE_KONAMI, APP_TYPE_KEYS.FBNEO_KONAMI);\naddAlias(types, APP_TYPE_KEYS.GBA, APP_TYPE_KEYS.VBA_M_GBA);\naddAlias(types, APP_TYPE_KEYS.GB, APP_TYPE_KEYS.VBA_M_GB);\naddAlias(types, APP_TYPE_KEYS.GBC, APP_TYPE_KEYS.VBA_M_GBC);\naddAlias(types, APP_TYPE_KEYS.GENESIS, APP_TYPE_KEYS.GENPLUSGX_MD);\naddAlias(types, APP_TYPE_KEYS.GG, APP_TYPE_KEYS.GENPLUSGX_GG);\naddAlias(types, APP_TYPE_KEYS.LNX, APP_TYPE_KEYS.MEDNAFEN_LNX);\naddAlias(types, APP_TYPE_KEYS.NEOGEO, APP_TYPE_KEYS.FBNEO_NEOGEO);\naddAlias(types, APP_TYPE_KEYS.NES, APP_TYPE_KEYS.FCEUX);\naddAlias(types, APP_TYPE_KEYS.NGC, APP_TYPE_KEYS.MEDNAFEN_NGC);\naddAlias(types, APP_TYPE_KEYS.NGP, APP_TYPE_KEYS.MEDNAFEN_NGP);\naddAlias(types, APP_TYPE_KEYS.PCE, APP_TYPE_KEYS.MEDNAFEN_PCE);\naddAlias(types, APP_TYPE_KEYS.SG1000, APP_TYPE_KEYS.GENPLUSGX_SG);\naddAlias(types, APP_TYPE_KEYS.SGX, APP_TYPE_KEYS.MEDNAFEN_SGX);\naddAlias(types, APP_TYPE_KEYS.SMS, APP_TYPE_KEYS.GENPLUSGX_SMS);\naddAlias(types, APP_TYPE_KEYS.SNES, APP_TYPE_KEYS.SNES9X);\naddAlias(types, APP_TYPE_KEYS.VB, APP_TYPE_KEYS.MEDNAFEN_VB);\naddAlias(types, APP_TYPE_KEYS.WSC, APP_TYPE_KEYS.MEDNAFEN_WSC);\naddAlias(types, APP_TYPE_KEYS.WS, APP_TYPE_KEYS.MEDNAFEN_WS);\n\nconst APP_TYPES = types;\n\nexport { APP_TYPE_KEYS, APP_TYPES };\n","const testMagic = (bytes) => {\n  if (bytes.length < 0x100 + 15) return false;\n\n  let str = \"\";\n  for (let i = 0x100; i < 0x100 + 15; i++)\n    str += String.fromCharCode(bytes[i]);\n\n  if (str.startsWith(\"SEGA MEGA DRIVE\") ||\n    str.startsWith(\"SEGA GENESIS\") ||\n    str.startsWith(\"SEGA 32X\") ||\n    str.startsWith(\"SEGA\") ||\n    str.startsWith(\" SEGA\")) {\n    return true;\n  }\n  return false;\n}\n\nexport { testMagic }\n","import * as Util from '../util'\n\nconst resolvePath = (path) => {\n  return Util.resolvePath(path);\n};\n\nconst ArrowBackWhiteImage = resolvePath(\"images/common/arrow_back_white_24dp.svg\");\nconst ChevronLeftWhiteImage = resolvePath(\"images/common/chevron_left_white_24dp.svg\");\nconst ChevronRightWhiteImage = resolvePath(\"images/common/chevron_right_white_24dp.svg\");\nconst CloudBlackImage = resolvePath(\"images/common/cloud_black_24dp.svg\");\nconst CloudWhiteImage = resolvePath(\"images/common/cloud_white_24dp.svg\");\nconst CloudDownloadBlackImage = resolvePath(\"images/common/cloud_download_black_24dp.svg\");\nconst CloudDownloadWhiteImage = resolvePath(\"images/common/cloud_download_white_24dp.svg\");\nconst DeleteForeverBlackImage = resolvePath(\"images/common/delete_forever_black_24dp.svg\");\nconst DeleteForeverWhiteImage = resolvePath(\"images/common/delete_forever_white_24dp.svg\");\nconst DescriptionBlackImage = resolvePath(\"images/common/description_black_24dp.svg\");\nconst DescriptionWhiteImage = resolvePath(\"images/common/description_white_24dp.svg\");\nconst GamepadWhiteImage = resolvePath(\"images/common/gamepad_white_24dp.svg\");\nconst KeyboardWhiteImage = resolvePath(\"images/common/keyboard_white_24dp.svg\");\nconst AddCircleBlackImage = resolvePath(\"images/common/add_circle_outline_black_24dp.svg\");\nconst AddCircleWhiteImage = resolvePath(\"images/common/add_circle_outline_white_24dp.svg\");\nconst PlayArrowBlackImage = resolvePath(\"images/common/play_arrow_black_24dp.svg\");\nconst PlayArrowWhiteImage = resolvePath(\"images/common/play_arrow_white_24dp.svg\");\nconst VolumeOffBlackImage = resolvePath(\"images/common/volume_off_black_24dp.svg\");\nconst WebrcadeLogoDarkImage = resolvePath(\"images/common/webrcade-logo-dark.svg\");\nconst WebrcadeLogoLargeImage = resolvePath(\"images/common/webrcade-logo-large.svg\");\nconst CategoryThumbImage = resolvePath(\"images/folder.png\");\nconst CategoryBackgroundImage = resolvePath(\"images/folder-background.png\");\nconst FeedThumbImage = resolvePath(\"images/feed.png\");\nconst FeedBackgroundImage = resolvePath(\"images/feed-background.png\");\nconst SettingsRedImage = resolvePath(\"images/common/settings_red_24dp.svg\")\nconst SettingsWhiteImage = resolvePath(\"images/common/settings_white_24dp.svg\")\nconst XboxOneDpad = resolvePath(\"images/common/controller/Xbox One/XboxOne_Dpad.png\");\nconst XboxOneAButton = resolvePath(\"images/common/controller/Xbox One/XboxOne_A.png\");\nconst XboxOneBButton = resolvePath(\"images/common/controller/Xbox One/XboxOne_B.png\");\nconst XboxOneXButton = resolvePath(\"images/common/controller/Xbox One/XboxOne_X.png\");\nconst XboxOneYButton = resolvePath(\"images/common/controller/Xbox One/XboxOne_Y.png\");\nconst XboxOneLeftStick = resolvePath(\"images/common/controller/Xbox One/XboxOne_Left_Stick.png\");\nconst XboxOneRightStick = resolvePath(\"images/common/controller/Xbox One/XboxOne_Right_Stick.png\");\nconst XboxOneMenuButton = resolvePath(\"images/common/controller/Xbox One/XboxOne_Menu.png\");\nconst XboxOneWindowsButton = resolvePath(\"images/common/controller/Xbox One/XboxOne_Windows.png\");\nconst XboxOneRightBumper = resolvePath(\"images/common/controller/Xbox One/XboxOne_RB.png\");\nconst XboxOneLeftBumper = resolvePath(\"images/common/controller/Xbox One/XboxOne_LB.png\");\nconst XboxOneRightTrigger = resolvePath(\"images/common/controller/Xbox One/XboxOne_RT.png\");\nconst XboxOneLeftTrigger = resolvePath(\"images/common/controller/Xbox One/XboxOne_LT.png\");\nconst ArrowLeftKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/Arrow_Left_Key_Dark.png\");\nconst ArrowRightKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/Arrow_Right_Key_Dark.png\");\nconst ArrowUpKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/Arrow_Up_Key_Dark.png\");\nconst ArrowDownKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/Arrow_Down_Key_Dark.png\");\nconst EnterKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/Enter_Key_Dark.png\");\nconst ShiftKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/Shift_Key_Dark.png\");\nconst AKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/A_Key_Dark.png\");\nconst CKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/C_Key_Dark.png\");\nconst DKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/D_Key_Dark.png\");\nconst SKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/S_Key_Dark.png\");\nconst VKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/V_Key_Dark.png\");\nconst XKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/X_Key_Dark.png\");\nconst ZKey = resolvePath(\"images/common/controller/Keyboard & Mouse/Dark/Z_Key_Dark.png\");\n\nexport {\n  AddCircleBlackImage,\n  AddCircleWhiteImage,\n  ArrowBackWhiteImage,\n  CategoryThumbImage,\n  CategoryBackgroundImage,\n  ChevronLeftWhiteImage,\n  ChevronRightWhiteImage,\n  CloudBlackImage,\n  CloudWhiteImage,\n  CloudDownloadBlackImage,\n  CloudDownloadWhiteImage,\n  DeleteForeverBlackImage,\n  DeleteForeverWhiteImage,\n  DescriptionBlackImage,\n  DescriptionWhiteImage,\n  FeedThumbImage,\n  FeedBackgroundImage,\n  GamepadWhiteImage,\n  KeyboardWhiteImage,\n  PlayArrowBlackImage,\n  PlayArrowWhiteImage,\n  SettingsRedImage,\n  SettingsWhiteImage,\n  WebrcadeLogoDarkImage,\n  WebrcadeLogoLargeImage,\n  VolumeOffBlackImage,\n  XboxOneAButton,\n  XboxOneBButton,\n  XboxOneXButton,\n  XboxOneYButton,\n  XboxOneDpad,\n  XboxOneLeftStick,\n  XboxOneRightStick,\n  XboxOneMenuButton,\n  XboxOneWindowsButton,\n  XboxOneRightBumper,\n  XboxOneLeftBumper,\n  XboxOneRightTrigger,\n  XboxOneLeftTrigger,\n  ArrowUpKey,\n  ArrowDownKey,\n  ArrowLeftKey,\n  ArrowRightKey,\n  EnterKey,\n  ShiftKey,\n  AKey,\n  CKey,\n  DKey,\n  SKey,\n  VKey,\n  XKey,\n  ZKey,\n  resolvePath as resolveImagePath\n}\n","import { APP_TYPES } from './applist.js';\nimport { AppProps } from '../app/props.js';\nimport {\n  blobToStr,\n  md5,\n  UrlUtil,\n  isEmptyString,\n  isValidString\n} from '../util';\nimport { resolveImagePath } from '../images'\n\nclass AppRegistry {\n  static instance = AppRegistry.instance || new AppRegistry();\n\n  constructor() {\n    APP_TYPES.forEach((appType) => {\n      this.APP_TYPES[appType.key] = appType;\n      appType.type = appType.absoluteKey === undefined ?\n        appType.key : appType.absoluteKey;\n    });\n  }\n\n  APP_TYPES = {}\n\n  validate(app) {\n    const APP_TYPES = this.APP_TYPES;\n    if (isEmptyString(app.title)) {\n      throw new Error(\"Missing 'title' property\");\n    }\n    if (isEmptyString(app.type)) {\n      throw new Error(\"Missing 'type' property\");\n    }\n    if (APP_TYPES[app.type] === undefined) {\n      throw new Error(\"'type' is invalid.\");\n    }\n    APP_TYPES[app.type].validate(app);\n  }\n\n  getDefaultBackground(app) {\n    const APP_TYPES = this.APP_TYPES;\n    return APP_TYPES[app.type].background;\n  }\n\n  getDefaultThumbnail(app) {\n    const APP_TYPES = this.APP_TYPES;\n    return APP_TYPES[app.type].thumbnail;\n  }\n\n  getBackground(app) {\n    return isValidString(app.background) ?\n      app.background : this.getDefaultBackground(app);\n  }\n\n  getThumbnail(app) {\n    return isValidString(app.thumbnail) ?\n      app.thumbnail : this.getDefaultThumbnail(app);\n  }\n\n  getDescription(app) {\n    const APP_TYPES = this.APP_TYPES;\n    return isValidString(app.description) ?\n      app.description : APP_TYPES[app.type].description;\n  }\n\n  getName(app) {\n    const APP_TYPES = this.APP_TYPES;\n    return APP_TYPES[app.type].name;\n  }\n\n  isDelayedExit(app) {\n    const { APP_TYPES } = this;\n    const appType = APP_TYPES[app.type];\n    return true; // Testing delayed exit on all apps\n    // return appType.isDelayedExit !== undefined &&\n    //   appType.isDelayedExit === true;\n  }\n\n  getLocation(app, context, feedProps) {\n    const { RP_CONTEXT, RP_DEBUG, RP_PROPS } = AppProps;\n    const { props } = app;\n    const { APP_TYPES } = this;\n\n    const appType = APP_TYPES[app.type];\n    const outProps = {\n      type: appType.type,\n      title: this.getLongTitle(app),\n      app: this.getName(app)\n    };\n\n    if (props !== undefined) {\n      Object.assign(outProps, props);\n    }\n\n    if (appType.addProps && feedProps) {\n      appType.addProps(feedProps, outProps);\n    }\n\n    let loc = UrlUtil.addParam(\n      appType.location, RP_PROPS, AppProps.encode(outProps));\n\n    const debug = UrlUtil.getBoolParam(\n      window.location.search, RP_DEBUG);\n    if (debug) {\n      loc = UrlUtil.addParam(loc, RP_DEBUG, 'true');\n    }\n    if (context) {\n      loc = UrlUtil.addParam(loc, RP_CONTEXT, context);\n    }\n    if (appType.addParams) {\n      loc = appType.addParams(loc);\n    }\n\n    return loc;\n  }\n\n  getTitle(app) {\n    return app.title;\n  }\n\n  getLongTitle(app) {\n    return isValidString(app.longTitle) ?\n      app.longTitle : this.getTitle(app);\n  }\n\n  getNameForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    const t = APP_TYPES[type];\n\n    return (t.absoluteKey ?\n      this.getGeneralNameForType(type) :\n      this.getCoreNameForType(type));\n  }\n\n  getShortNameForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    const t = APP_TYPES[type];\n\n    return (t.absoluteKey ?\n      this.getGeneralShortNameForType(type) :\n      this.getShortCoreNameForType(type));\n  }\n\n  getGeneralNameForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    return APP_TYPES[type].name;\n  }\n\n  getGeneralShortNameForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    const t = APP_TYPES[type];\n    return t.shortName ? t.shortName : t.name;\n  }\n\n  getCoreNameForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    const t = APP_TYPES[type];\n    return `${this.getNameForType(type)} (${t.coreName})`;\n  }\n\n  getShortCoreNameForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    const t = APP_TYPES[type];\n    return `${this.getGeneralShortNameForType(type)} (${t.coreName})`;\n  }\n\n  getThumbnailForType(type, imgSrc) {\n    return isValidString(imgSrc) ?\n      imgSrc : this.getDefaultThumbnailForType(type);\n  }\n\n  getDefaultThumbnailForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    return resolveImagePath(APP_TYPES[type].thumbnail);\n  }\n\n  getBackgroundForType(type, imgSrc) {\n    return isValidString(imgSrc) ?\n      imgSrc : this.getDefaultBackgroundForType(type);\n  }\n\n  getDefaultBackgroundForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    return resolveImagePath(APP_TYPES[type].background);\n  }\n\n  getDefaultsForType(type) {\n    const APP_TYPES = this.APP_TYPES;\n    return APP_TYPES[type].defaults;\n  }\n\n  getAppTypes() {\n    return this.APP_TYPES;\n  }\n\n  getTypeForExtension(ext) {\n    const APP_TYPES = this.APP_TYPES;\n    ext = ext.toLowerCase();\n\n    let retType = null;\n    for (const name in APP_TYPES) {\n      const type = APP_TYPES[name];\n      if (type.extensions) {\n        for (let j = 0; j < type.extensions.length; j++) {\n          if (ext === type.extensions[j] &&\n            (retType === null || type.absoluteKey)) {\n            retType = type;\n          }\n        }\n      }\n    }\n    return retType;\n  }\n\n  getAllExtensions(dotted = true, nonUnique = false) {\n    const extensions = []\n    if (nonUnique) {\n      extensions.push((dotted ? \".\" : \"\") + \"bin\");\n    }\n    const APP_TYPES = this.APP_TYPES;\n    for (const name in APP_TYPES) {\n      const type = APP_TYPES[name];\n      if (type.extensions && !type.absoluteKey) {\n        for (let j = 0; j < type.extensions.length; j++) {\n          extensions.push((dotted ? \".\" : \"\") + type.extensions[j]);\n        }\n      }\n    }\n    return extensions;\n  }\n\n  getExtensions(name, dotted = true, nonUnique = false) {\n    const extensions = []\n    if (nonUnique) {\n      extensions.push((dotted ? \".\" : \"\") + \"bin\");\n    }\n    const APP_TYPES = this.APP_TYPES;\n    let type = APP_TYPES[name];\n    if (type.absoluteKey) {\n      type = APP_TYPES[type.absoluteKey];\n    }\n    if (type.extensions) {\n      for (let j = 0; j < type.extensions.length; j++) {\n        extensions.push((dotted ? \".\" : \"\") + type.extensions[j]);\n      }\n    }\n    return extensions;\n  }\n\n  testMagic(bytes) {\n    const APP_TYPES = this.APP_TYPES;\n    for (const name in APP_TYPES) {\n      const type = APP_TYPES[name];\n      if (type.absoluteKey && type.testMagic && type.testMagic(bytes)) {\n        return type;\n      }\n    }\n    return null;\n  }\n\n  async getMd5(blob, type = null) {\n    const APP_TYPES = this.APP_TYPES;\n    let result = null;\n\n    if (type && (typeof type === 'string')) {\n      type = APP_TYPES[type];\n    }\n    if (type && type.getMd5) {\n      result = await type.getMd5(blob);\n    }\n\n    return result != null ? result : md5(await blobToStr(blob));\n  }\n}\n\nexport { AppRegistry };\n","import styles from './style.scss'\n\nlet debugDiv = null;\n\nconst addDebugDiv = () => {\n  if (debugDiv === null) {\n    const el = document.createElement('div');\n    el.className = styles.debugText;\n    document.body.appendChild(el);\n    debugDiv = el;\n  }\n  return debugDiv;\n}\n\nexport { addDebugDiv }\n","import * as LOG from '../log';\nimport { uuidv4 } from '../util/uuid';\n\nclass FeedBase {\n  constructor(minLength) {\n    this.minLength = minLength;\n  }\n\n  TITLE_SORT = (a, b) => a.title.localeCompare(b.title);\n\n  _logInvalidObject(msg, object) {\n    LOG.info(msg + \" : \" + JSON.stringify(object));\n  }\n\n  _expandItems(items) {\n    const { minLength } = this;\n\n    if (items.length === 0 || minLength === 0) return items;\n\n    let itemsOut = [];\n    while (itemsOut.length < minLength) {\n      items.forEach(i => {\n        const {...item} = i;\n        item.id = uuidv4();\n        itemsOut.push(item);\n        if (itemsOut.length > items.length) {\n          item.duplicate = true;\n        }\n      });\n    }\n    return itemsOut;\n  }\n}\n\nexport { FeedBase }\n","import { Storage } from './storage.js';\n\nconst storage = new Storage();\n\nexport * from './storage.js'\nexport { storage };\n","import { storage } from '../storage'\nimport { FeedBase } from './feedbase.js'\nimport { uuidv4 } from '../util/uuid';\nimport { isEmptyString } from '../util/stringutil';\nimport * as LOG from '../log'\nimport { config } from '../conf';\nimport { remapUrl } from '../app';\n\nconst FEEDS_PROP = \"feeds\";\nconst LOCAL_FEEDS_PREFIX = \"localFeeds.\";\n\nclass Feeds extends FeedBase {\n  constructor(feeds, minLength) {\n    super(minLength);\n    this.parsedFeeds = [];\n    this.feeds = [];\n    feeds.forEach(f => this._addFeed(f));\n    this._expand();\n  }\n\n  static DEFAULT_ID = -1;\n  static ADD_ID = -2;\n  static NONE_URL = \"none\";\n\n  static isDeleteEnabled(feed) {\n    return feed.feedId !== Feeds.DEFAULT_ID &&\n      feed.feedId !== Feeds.ADD_ID;\n  }\n\n  static getUrl(feed) {\n    return feed.url ?\n      feed.url === Feeds.NONE_URL ? null : feed.url :\n      null;\n  }\n\n  isExistingLocalFeed(title) {\n    return this._getFeedIndexForTitle(title, true) !== -1;\n  }\n\n  async addLocalFeed(feed) {\n    if (!feed.title) {\n      return;\n    }\n\n    const index = this._getFeedIndexForTitle(feed.title);\n    let oldFeedId = null;\n    let oldLocalId = null;\n    if (index >= 0) {\n      const oldFeed = this.feeds[index];\n      oldFeedId = oldFeed.feedId;\n      oldLocalId = oldFeed.localId;\n      await this.removeFeed(oldFeedId);\n    }\n\n    const newFeed = {\n      feedId: oldFeedId ? oldFeedId : uuidv4(),\n      localId: oldLocalId ? oldLocalId : uuidv4(),\n      title: feed.title,\n    }\n    if (feed.longTitle) newFeed.longTitle = feed.longTitle;\n    if (feed.description) newFeed.description = feed.description;\n    if (feed.thumbnail) newFeed.thumbnail = feed.thumbnail;\n    if (feed.background) newFeed.background = feed.background;\n\n    const addedFeed = this._addFeed(newFeed);\n    if (addedFeed) {\n      // Store the feed contents\n      await storage.put(\n        LOCAL_FEEDS_PREFIX + addedFeed.localId, feed);\n      // Store the feeds\n      await this._storeFeeds();\n      this._expand();\n      return addedFeed;\n    }\n\n    return null;\n  }\n\n  async getLocalFeed(localId) {\n    return await storage.get(LOCAL_FEEDS_PREFIX + localId);\n  }\n\n  async addRemoteFeed(url, inFeed) {\n    const index = this._getFeedIndexForUrl(url);\n    const exists = index >= 0;\n    const feed = exists ? this.feeds[index] :\n      this._addFeed({title: \"New feed\", url: url});\n    if (feed) {\n      const updated = this._updateFeed(url, inFeed);\n      if (!exists || updated) {\n        await this._storeFeeds();\n      }\n      this._expand();\n      return feed;\n    }\n    return null;\n  }\n\n  async removeFeed(feedId) {\n    const index = this.feeds.findIndex(f => {\n      return f.feedId === feedId;\n    });\n    if (index >= 0) {\n      const feed = this.feeds[index];\n      if (feed.localId) {\n        await storage.remove(LOCAL_FEEDS_PREFIX + feed.localId);\n      }\n      this.feeds.splice(index, 1);\n      await this._storeFeeds();\n\n      this._expand();\n    }\n  }\n\n  getFeedForUrl(url) {\n    const index = this._getFeedIndexForUrl(url);\n    return index !== -1 ? this.feeds[index] : null;\n  }\n\n  getFeedWithId(id) {\n    for(let i = 0; i < this.feeds.length; i++) {\n      const feed = this.feeds[i];\n      if (feed.feedId === id) {\n        return feed;\n      }\n    }\n    return null;\n  }\n\n  remapUrls(feeds) {\n    for (let i = 0; i < feeds.length; i++) {\n      const feed = feeds[i];\n      if (feed.background) feed.background = remapUrl(feed.background);\n      if (feed.thumbnail) feed.thumbnail = remapUrl(feed.thumbnail);\n    }\n    return feeds;\n  }\n\n  getDistinctFeeds() {\n    return this.remapUrls(this.feeds);\n  }\n\n  getFeeds() {\n    return this.remapUrls(this.expandedFeeds);\n  }\n\n  _validate(f) {\n    if (isEmptyString(f.title)) {\n      this._logInvalidObject('Feed missing title', f);\n      return false;\n    } else if (isEmptyString(f.url) && isEmptyString(f.localId)) {\n      this._logInvalidObject('Feed missing url or local identifier', f);\n      return false;\n    }\n    return true;\n  }\n\n  _updateFeed(url, feed) {\n    const index = this._getFeedIndexForUrl(url);\n    let changed = false;\n    if (index >= 0) {\n      const f = this.feeds[index];\n      const props = [\n        'title', 'longTitle', 'description', 'thumbnail', 'background'\n      ]\n      props.forEach(p => {\n        if (f[p] !== feed[p]) {\n          changed = true;\n          if (feed[p]) {\n            f[p] = feed[p];\n          } else {\n            delete f[p];\n          }\n        }\n      });\n    }\n    if (changed) {\n      this._expand();\n    }\n    return changed;\n  }\n\n  _addFeed(f) {\n    let feed = {...f};\n    if (this._validate(feed)) {\n      if (!feed.feedId) {\n        feed.feedId = uuidv4();\n      }\n      this.feeds.push(feed);\n      return feed;\n    }\n    return null;\n  }\n\n  _getFeedIndexForUrl(url) {\n    const index = this.feeds.findIndex(\n      feed => feed.url && (feed.url.toUpperCase() === url.toUpperCase()));\n    return index;\n  }\n\n  _getFeedIndexForTitle(title, isLocal = true) {\n    const index = this.feeds.findIndex(\n      feed => (feed.title === title) && (!isLocal || feed.localId));\n    return index;\n  }\n\n  _expand() {\n    let expandedFeeds = [...this.feeds];\n\n    // Sort\n    expandedFeeds.sort(this.TITLE_SORT);\n\n    // Default\n    if (!config.isEmptyDefaultFeed()) {\n      expandedFeeds.unshift({\n        feedId: Feeds.DEFAULT_ID,\n        title: \"Default\",\n        longTitle: \"Default Feed\",\n        description: \"The default feed contains a collection of high-quality publicly available games and demos across the various applications (emulators, engines, etc.) that are supported by webЯcade.\",\n        url: Feeds.NONE_URL,\n        thumbnail: \"default-feed/images/default-thumb.png\",\n        background: \"default-feed/images/default-background.png\"\n      })\n    }\n\n    // Add\n    expandedFeeds.unshift({\n      feedId: Feeds.ADD_ID,\n      title: \"Add Feed\",\n      longTitle: \"Add Feed\",\n      description: \"Register a new feed with webЯcade by selecting one of the buttons below. Use the \\\"URL\\\" button to register a cloud-based feed or the \\\"FILE\\\" button for a locally stored feed file.\",\n      url: Feeds.NONE_URL,\n      thumbnail: \"images/add-thumb.png\",\n      background: \"images/add-background.png\"\n    })\n\n    expandedFeeds = this._expandItems(expandedFeeds);\n    this.expandedFeeds = expandedFeeds;\n  }\n\n  _storeFeeds = async () => {\n    const outFeeds = [];\n    this.getDistinctFeeds().forEach(e => {\n      const f = {...e};\n      outFeeds.push(f);\n    });\n    try {\n      await storage.put(FEEDS_PROP, outFeeds);\n    } catch (e) {\n      LOG.error(\"Error storing feeds: \" + e);\n    }\n  }\n}\n\nconst loadFeeds = async (minSlidesLength) => {\n  try {\n    const feedsProp = await storage.get(FEEDS_PROP);\n    return new Feeds(feedsProp ? feedsProp : [], minSlidesLength);\n  } catch(e) {\n    LOG.error(\"Error reading feeds: \" + e);\n    return new Feeds([], minSlidesLength);\n  }\n}\n\nexport { Feeds, loadFeeds }\n","const GamepadEnum = {\n  UP: 'up',\n  DOWN: 'down',\n  LEFT: 'left',\n  RIGHT: 'right',\n  LBUMP: 'lbump',\n  RBUMP: 'rbump',\n  A: 'a',\n  ESC: 'esc',\n  R_UP: 'r_up',\n  R_DOWN: 'r_down',\n  R_LEFT: 'r_left',\n  R_RIGHT: 'r_right',\n  R_ANALOG_X: 'r_analog_x',\n  R_ANALOG_Y: 'r_analog_y',\n  L_ANALOG_X: 'l_analog_x',\n  L_ANALOG_Y: 'l_analog_y',\n}\n\nexport { GamepadEnum };\n","import { GamepadEnum } from './gamepadenum.js'\nimport { isXbox } from '../util/browser.js'\nimport { StandardPadMapping, CIDS } from './controls.js'\n\n\nclass GamepadNotifier {\n  constructor() {\n    this.isXbox = isXbox();\n    this.running = false;\n    this.callbacks = [];\n    this.analogCallbacks = [];\n    this.globalCallbacks = [];\n    this.padDown = false;\n    this.firstPollDelayEnd = -1;\n    this.defaultCallback = null;\n    this.escapePressed = null;\n    this.aPressed = null;\n    this.mapping = new StandardPadMapping();\n    this.buttons = new Array(16);\n    this.padCount = 0;\n    this.nextAnalog = 0;\n    this.analogStep = 1000 / 60.0;\n  }\n\n  FIRST_POLL_DELAY = 100;\n  NULL_BUTTON = { pressed: false };\n\n  fireEvent(type) {\n    const { callbacks, globalCallbacks, defaultCallback } = this;\n    const e = { \"type\": type }\n    for (let i = 0; i < globalCallbacks.length; i++) {\n      globalCallbacks[i](e);\n    }\n    for (let i = 0; i < callbacks.length; i++) {\n      if (callbacks[i](e)) return;\n    }\n    if (defaultCallback) defaultCallback(e);\n  }\n\n  fireAnalogEvent(type, value) {\n    const { analogCallbacks } = this;\n\n    if (value > -.20 && value < .20) {\n      return;\n    }\n\n    value = (value > 0 ? (value - .20) : (value + .20)) * (1.0 / .80);\n\n    const e = { \"type\": type, \"value\": value }\n    for (let i = 0; i < analogCallbacks.length; i++) {\n      analogCallbacks[i](e);\n    }\n  }\n\n  pollGamepads = () => {\n    const { running, FIRST_POLL_DELAY, mapping, buttons, NULL_BUTTON } = this;\n    let gamepads = navigator.getGamepads ?\n      navigator.getGamepads() : (navigator.webkitGetGamepads ?\n        navigator.webkitGetGamepads : []);\n\n    let pCount = 0;\n    for (let i = 0; i < gamepads.length; i++) {\n      if (gamepads[i]) pCount++;\n    }\n    this.padCount = pCount;\n    if (pCount === 0) {\n      gamepads = [{ buttons: [] }]; // Fake gamepad to allow loop to process\n    }\n\n    // This is a bit of a hack to avoid having a button press accepted\n    // when the page is initally displayed. There is a pause before\n    // accepting any button presses\n    let firstPoll = false;\n    if (this.firstPollDelayEnd !== 0) {\n      if (this.firstPollDelayEnd === -1) {\n        firstPoll = true;\n        this.firstPollDelayEnd = Date.now() + FIRST_POLL_DELAY;\n      } else if (Date.now() < this.firstPollDelayEnd) {\n        firstPoll = true;\n      } else {\n        this.firstPollDelayEnd = 0;\n      }\n    }\n\n    let hit = false;\n    for (let i = 0; i < gamepads.length && !hit; i++) {\n      if (gamepads[i]) {\n\n        let padDown = this.padDown;\n        let pad = gamepads[i];\n\n        if (pad.buttons) {\n          hit = true;\n\n          for (let i = 0; i < buttons.length; i++) {\n            if (i < pad.buttons.length) {\n              buttons[i] = pad.buttons[i];\n            } else {\n              buttons[i] = NULL_BUTTON;\n            }\n          }\n\n          // Left trigger + (start/right analog/select/left analog) = escape\n          if ((buttons[mapping.getButtonNum(CIDS.LTRIG)].pressed && (\n            buttons[mapping.getButtonNum(CIDS.START)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.SELECT)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.RANALOG)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.LANALOG)].pressed)) ||\n            (buttons[mapping.getButtonNum(CIDS.SELECT)].pressed &&\n              buttons[mapping.getButtonNum(CIDS.X)].pressed)) {\n            if (!padDown && !firstPoll && this.escapePressed === false) {\n              this.escapePressed = true;\n            }\n          } else if ((this.escapePressed == true) && (\n            buttons[mapping.getButtonNum(CIDS.LTRIG)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.RANALOG)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.LANALOG)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.X)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.SELECT)].pressed ||\n            buttons[mapping.getButtonNum(CIDS.START)].pressed)) {\n            // Nothing... just make sure buttons are released prior to escape handling\n          } else if (buttons[mapping.getButtonNum(CIDS.UP)].pressed) {\n            if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.UP);\n          } else if (buttons[mapping.getButtonNum(CIDS.DOWN)].pressed) {\n            if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.DOWN);\n          } else if (buttons[mapping.getButtonNum(CIDS.LEFT)].pressed) {\n            if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.LEFT);\n          } else if (buttons[mapping.getButtonNum(CIDS.RIGHT)].pressed) {\n            if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.RIGHT);\n          } else if (buttons[mapping.getButtonNum(CIDS.LBUMP)].pressed) {\n            if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.LBUMP);\n          } else if (buttons[mapping.getButtonNum(CIDS.RBUMP)].pressed) {\n            if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.RBUMP);\n          } else if (buttons[mapping.getButtonNum(CIDS.A)].pressed) {\n            if (!padDown && !firstPoll && this.aPressed === false) {\n              this.aPressed = true;\n            }\n          } else {\n            hit = false;\n\n            if (this.escapePressed !== false) {\n              if (this.escapePressed === true) {\n                this.fireEvent(GamepadEnum.ESC);\n              }\n              this.escapePressed = false;\n            }\n\n            if (this.aPressed !== false) {\n              if (this.aPressed === true) {\n                this.fireEvent(GamepadEnum.A);\n              }\n              this.aPressed = false;\n            }\n          }\n        }\n\n        let axes = pad.axes;\n        if (axes) {\n\n          // if (!this.startTime) {\n          //   this.startTime = Date.now();\n          //   this.count = 0;\n          // }\n\n          const time = Date.now();\n          const fireAnalog = (time >= this.nextAnalog);\n          if (fireAnalog) {\n            // this.count++;\n            // if ((this.count % 240) === 0) {\n            //   console.log((this.count / (time - this.startTime)) * 1000);\n            //   this.startTime = Date.now();\n            //   this.count = 0;\n            // }\n            this.nextAnalog += this.analogStep;\n            if (time >= this.nextAnalog) {\n              this.nextAnalog = (time + this.analogStep);\n            }\n          }\n\n          if (axes.length >= 2) {\n            let valx = axes[0], valy = axes[1];\n\n            if (fireAnalog) {\n              this.fireAnalogEvent(GamepadEnum.L_ANALOG_X, valx);\n              this.fireAnalogEvent(GamepadEnum.L_ANALOG_Y, valy);\n            }\n\n            if (!hit) {\n              hit = true;\n              if (valy < -0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.UP);\n              } else if (valy > 0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.DOWN);\n              } else if (valx < -0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.LEFT);\n              } else if (valx > 0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.RIGHT);\n              } else {\n                hit = false;\n              }\n            }\n          }\n\n          if (axes.length >= 4) {\n            let valx = axes[2], valy = axes[3];\n\n            if (fireAnalog) {\n              this.fireAnalogEvent(GamepadEnum.R_ANALOG_X, valx);\n              this.fireAnalogEvent(GamepadEnum.R_ANALOG_Y, valy);\n            }\n\n            if (!hit) {\n              hit = true;\n              if (valy < -0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.R_UP);\n              } else if (valy > 0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.R_DOWN);\n              } else if (valx < -0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.R_LEFT);\n              } else if (valx > 0.5) {\n                if (!padDown && !firstPoll) this.fireEvent(GamepadEnum.R_RIGHT);\n              } else {\n                hit = false;\n              }\n            }\n          }\n        }\n\n      }\n    }\n    this.padDown = hit;\n\n    if (running) {\n      requestAnimationFrame(this.pollGamepads);\n    }\n  };\n\n  start() {\n    if (this.running) return;\n    this.running = true;\n    requestAnimationFrame(this.pollGamepads);\n  }\n\n  stop() {\n    if (!this.running) return;\n    this.running = false;\n  }\n\n  addCallback(cb) {\n    this.callbacks.push(cb);\n  }\n\n  removeCallback(cb) {\n    this.callbacks = this.callbacks.filter(value => value !== cb);\n  }\n\n  addGlobalCallback(cb) {\n    this.globalCallbacks.push(cb);\n  }\n\n  removeGlobalCallback(cb) {\n    this.globalCallbacks = this.globalCallbacks.filter(value => value !== cb);\n  }\n\n  addAnalogCallback(cb) {\n    this.analogCallbacks.push(cb);\n  }\n\n  removeAnalogCallback(cb) {\n    this.analogCallbacks = this.analogCallbacks.filter(value => value !== cb);\n  }\n\n  setDefaultCallback(cb) {\n    this.defaultCallback = cb;\n  }\n};\n\nexport { GamepadNotifier };\n","import { GamepadEnum } from './gamepadenum.js'\n\nclass FocusGrid {\n  comps = [];\n\n  setComponents(comps) {\n    this.comps = comps;\n  }\n\n  setDefaultComponent(comp) {\n    this.defaultComp = comp;\n  }\n\n  getComponentLocation(comp) {\n    const { comps } = this;\n\n    for (let y = 0; y < comps.length; y++) {\n      let xarr = comps[y];\n      for (let x = 0; x < xarr.length; x++) {\n        if (comps[y][x] === comp) {\n          return [y, x];\n        }\n      }\n    }\n    return null;\n  }\n\n  checkComp(c) {\n    if (c && c.current && c.current.focus &&\n      (c.current.isFocusable === undefined ||\n        c.current.isFocusable())) {\n      return c;\n    }\n    return null;\n  }\n\n  moveFocus(dir, comp) {\n    const that = this;\n    const { comps } = this;\n    const loc = this.getComponentLocation(comp);\n\n    const checkRowForComp = row => {\n      let comp = null;\n      for (let x = 0; x < row.length && !comp; x++) {\n        comp = that.checkComp(row[x]);\n      }\n      return comp;\n    }\n\n    if (loc) {\n      let y = loc[0], x = loc[1];\n      let row = comps[y];\n\n      let comp = null;\n      switch (dir) {\n        case GamepadEnum.LEFT:\n          x--;\n          while (x >= 0 && !comp) {\n            comp = this.checkComp(row[x]);\n            x--;\n          }\n          break;\n        case GamepadEnum.RIGHT:\n          x++;\n          while (x < row.length && !comp) {\n            comp = this.checkComp(row[x]);\n            x++;\n          }\n          break;\n        case GamepadEnum.UP:\n          y--;\n          while (y >= 0 && !comp) {\n            comp = checkRowForComp(comps[y]);\n            y--;\n          }\n          break;\n        case GamepadEnum.DOWN:\n          y++;\n          while (y < comps.length && !comp) {\n            comp = checkRowForComp(comps[y]);\n            y++;\n          }\n          break;\n        default:\n          break;\n      }\n      if (comp) return comp.current.focus();\n    }\n    return false;\n  }\n\n  focus() {\n    const { comps, defaultComp } = this;\n\n    if (defaultComp && this.checkComp(defaultComp)) {\n      return defaultComp.current.focus();\n    }\n\n    for (let y = 0; y < comps.length; y++) {\n      let xarr = comps[y];\n      for (let x = 0; x < xarr.length; x++) {\n        let comp = comps[y][x];\n        if (this.checkComp(comp)) {\n          return comp.current.focus();\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nexport { FocusGrid };\n","const TEXT_IDS = {\n  ADD: \"Add\",\n  ADD_UC: \"ADD\",\n  CANCEL: \"Cancel\",\n  CATEGORIES: \"Categories\",\n  CLICK_TO_UNMUTE: \"Click Screen to Unmute\",\n  CONFIRM_DELETE_FEED: \"Are you sure you want to delete the selected feed?\",\n  DELETE_UC: \"DELETE\",\n  ERROR_DELETING_FEED: \"An error has occurred attempting to delete the selected feed.\",\n  ERROR_LOADING_GAME: \"An error occurred attempting to load the selected game.\",\n  ERROR_LOADING_FEED: \"An error occurred attempting to load the selected feed.\",\n  ERROR_RETRIEVING_GAME: \"An error has occurred attempting to retrieve the selected game.\",\n  ERROR_UNKNOWN: \"An unknown error has occurred.\",\n  FEEDS: \"Feeds\",\n  FILE_UC: \"FILE\",\n  GAMEPAD_CONTROLS: \"Gamepad Controls\",\n  KEYBOARD_CONTROLS: \"Keyboard Controls\",\n  LOAD_UC: \"LOAD\",\n  LOADING: \"Loading\",\n  LOADING_DOTS: \"Loading...\",\n  LOADING_FEED: \"Loading feed...\",\n  LOCAL_PARENS: \"(Local)\",\n  NO: \"No\",\n  OK: \"OK\",\n  PLAY_UC: \"PLAY\",\n  RESUME: \"Resume\",\n  RETURN_TO_BROWSE: \"Return to Browse\",\n  RETURN_TO_EDITOR: \"Return to Editor\",\n  SEE_CONSOLE_LOG: \"See console log for details.\",\n  SELECT_UC: \"SELECT\",\n  SHOW_CATEGORIES: \"Show Categories\",\n  SHOW_FEEDS: \"Show Feeds\",\n  SOMETHING_WENT_WRONG: \"Whoops, something went wrong...\",\n  SPECIFY_LOCATION_OF_FEED: \"Specify the location of the feed to add (URL)\",\n  TAP_TO_UNMUTE: \"Tap Screen to Unmute\",\n  URL: \"URL\",\n  VIEW_CONTROLS: \"View Controls\",\n  YES: \"Yes\"\n};\n\nclass Resources {\n  static getText(id) {\n    return id; // For now the id is the message, in the future it may not be\n  }\n};\n\nexport {TEXT_IDS, Resources}\n","/*\n Copyright (c) 2013 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in\n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar zipExport = {};\n\n(function (obj) {\n  \"use strict\";\n\n  var ERR_BAD_FORMAT = \"File format is not recognized.\";\n  var ERR_CRC = \"CRC failed.\";\n  var ERR_ENCRYPTED = \"File contains encrypted entry.\";\n  var ERR_ZIP64 = \"File is using Zip64 (4gb+ file size).\";\n  var ERR_READ = \"Error while reading zip file.\";\n  var ERR_WRITE = \"Error while writing zip file.\";\n  var ERR_WRITE_DATA = \"Error while writing file data.\";\n  var ERR_READ_DATA = \"Error while reading file data.\";\n  var ERR_DUPLICATED_NAME = \"File already exists.\";\n  var CHUNK_SIZE = 512 * 1024;\n\n  var TEXT_PLAIN = \"text/plain\";\n\n  var appendABViewSupported;\n  try {\n    appendABViewSupported = new Blob([new DataView(new ArrayBuffer(0))]).size === 0;\n  } catch (e) {\n  }\n\n  function Crc32() {\n    this.crc = -1;\n  }\n  Crc32.prototype.append = function append(data) {\n    var crc = this.crc | 0, table = this.table;\n    for (var offset = 0, len = data.length | 0; offset < len; offset++)\n      crc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\n    this.crc = crc;\n  };\n  Crc32.prototype.get = function get() {\n    return ~this.crc;\n  };\n  Crc32.prototype.table = (function () {\n    var i, j, t, table = []; // Uint32Array is actually slower than []\n    for (i = 0; i < 256; i++) {\n      t = i;\n      for (j = 0; j < 8; j++)\n        if (t & 1)\n          t = (t >>> 1) ^ 0xEDB88320;\n        else\n          t = t >>> 1;\n      table[i] = t;\n    }\n    return table;\n  })();\n\n  // \"no-op\" codec\n  function NOOP() { }\n  NOOP.prototype.append = function append(bytes, onprogress) {\n    return bytes;\n  };\n  NOOP.prototype.flush = function flush() { };\n\n  function blobSlice(blob, index, length) {\n    if (index < 0 || length < 0 || index + length > blob.size)\n      throw new RangeError('offset:' + index + ', length:' + length + ', size:' + blob.size);\n    if (blob.slice)\n      return blob.slice(index, index + length);\n    else if (blob.webkitSlice)\n      return blob.webkitSlice(index, index + length);\n    else if (blob.mozSlice)\n      return blob.mozSlice(index, index + length);\n    else if (blob.msSlice)\n      return blob.msSlice(index, index + length);\n  }\n\n  function getDataHelper(byteLength, bytes) {\n    var dataBuffer, dataArray;\n    dataBuffer = new ArrayBuffer(byteLength);\n    dataArray = new Uint8Array(dataBuffer);\n    if (bytes)\n      dataArray.set(bytes, 0);\n    return {\n      buffer: dataBuffer,\n      array: dataArray,\n      view: new DataView(dataBuffer)\n    };\n  }\n\n  // Readers\n  function Reader() {\n  }\n\n  function TextReader(text) {\n    var that = this, blobReader;\n\n    function init(callback, onerror) {\n      var blob = new Blob([text], {\n        type: TEXT_PLAIN\n      });\n      blobReader = new BlobReader(blob);\n      blobReader.init(function () {\n        that.size = blobReader.size;\n        callback();\n      }, onerror);\n    }\n\n    function readUint8Array(index, length, callback, onerror) {\n      blobReader.readUint8Array(index, length, callback, onerror);\n    }\n\n    that.size = 0;\n    that.init = init;\n    that.readUint8Array = readUint8Array;\n  }\n  TextReader.prototype = new Reader();\n  TextReader.prototype.constructor = TextReader;\n\n  function Data64URIReader(dataURI) {\n    var that = this, dataStart;\n\n    function init(callback) {\n      var dataEnd = dataURI.length;\n      while (dataURI.charAt(dataEnd - 1) == \"=\")\n        dataEnd--;\n      dataStart = dataURI.indexOf(\",\") + 1;\n      that.size = Math.floor((dataEnd - dataStart) * 0.75);\n      callback();\n    }\n\n    function readUint8Array(index, length, callback) {\n      var i, data = getDataHelper(length);\n      var start = Math.floor(index / 3) * 4;\n      var end = Math.ceil((index + length) / 3) * 4;\n      var bytes = obj.atob(dataURI.substring(start + dataStart, end + dataStart));\n      var delta = index - Math.floor(start / 4) * 3;\n      for (i = delta; i < delta + length; i++)\n        data.array[i - delta] = bytes.charCodeAt(i);\n      callback(data.array);\n    }\n\n    that.size = 0;\n    that.init = init;\n    that.readUint8Array = readUint8Array;\n  }\n  Data64URIReader.prototype = new Reader();\n  Data64URIReader.prototype.constructor = Data64URIReader;\n\n  function BlobReader(blob) {\n    var that = this;\n\n    function init(callback) {\n      that.size = blob.size;\n      callback();\n    }\n\n    function readUint8Array(index, length, callback, onerror) {\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        callback(new Uint8Array(e.target.result));\n      };\n      reader.onerror = onerror;\n      try {\n        reader.readAsArrayBuffer(blobSlice(blob, index, length));\n      } catch (e) {\n        onerror(e);\n      }\n    }\n\n    that.size = 0;\n    that.init = init;\n    that.readUint8Array = readUint8Array;\n  }\n  BlobReader.prototype = new Reader();\n  BlobReader.prototype.constructor = BlobReader;\n\n  // Writers\n\n  function Writer() {\n  }\n  Writer.prototype.getData = function (callback) {\n    callback(this.data);\n  };\n\n  function TextWriter(encoding) {\n    var that = this, blob;\n\n    function init(callback) {\n      blob = new Blob([], {\n        type: TEXT_PLAIN\n      });\n      callback();\n    }\n\n    function writeUint8Array(array, callback) {\n      blob = new Blob([blob, appendABViewSupported ? array : array.buffer], {\n        type: TEXT_PLAIN\n      });\n      callback();\n    }\n\n    function getData(callback, onerror) {\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        callback(e.target.result);\n      };\n      reader.onerror = onerror;\n      reader.readAsText(blob, encoding);\n    }\n\n    that.init = init;\n    that.writeUint8Array = writeUint8Array;\n    that.getData = getData;\n  }\n  TextWriter.prototype = new Writer();\n  TextWriter.prototype.constructor = TextWriter;\n\n  function Data64URIWriter(contentType) {\n    var that = this, data = \"\", pending = \"\";\n\n    function init(callback) {\n      data += \"data:\" + (contentType || \"\") + \";base64,\";\n      callback();\n    }\n\n    function writeUint8Array(array, callback) {\n      var i, delta = pending.length, dataString = pending;\n      pending = \"\";\n      for (i = 0; i < (Math.floor((delta + array.length) / 3) * 3) - delta; i++)\n        dataString += String.fromCharCode(array[i]);\n      for (; i < array.length; i++)\n        pending += String.fromCharCode(array[i]);\n      if (dataString.length > 2)\n        data += obj.btoa(dataString);\n      else\n        pending = dataString;\n      callback();\n    }\n\n    function getData(callback) {\n      callback(data + obj.btoa(pending));\n    }\n\n    that.init = init;\n    that.writeUint8Array = writeUint8Array;\n    that.getData = getData;\n  }\n  Data64URIWriter.prototype = new Writer();\n  Data64URIWriter.prototype.constructor = Data64URIWriter;\n\n  function BlobWriter(contentType) {\n    var blob, that = this;\n\n    function init(callback) {\n      blob = new Blob([], {\n        type: contentType\n      });\n      callback();\n    }\n\n    function writeUint8Array(array, callback) {\n      blob = new Blob([blob, appendABViewSupported ? array : array.buffer], {\n        type: contentType\n      });\n      callback();\n    }\n\n    function getData(callback) {\n      callback(blob);\n    }\n\n    that.init = init;\n    that.writeUint8Array = writeUint8Array;\n    that.getData = getData;\n  }\n  BlobWriter.prototype = new Writer();\n  BlobWriter.prototype.constructor = BlobWriter;\n\n  /**\n   * inflate/deflate core functions\n   * @param worker {Worker} web worker for the task.\n   * @param initialMessage {Object} initial message to be sent to the worker. should contain\n   *   sn(serial number for distinguishing multiple tasks sent to the worker), and codecClass.\n   *   This function may add more properties before sending.\n   */\n  function launchWorkerProcess(worker, initialMessage, reader, writer, offset, size, onprogress, onend, onreaderror, onwriteerror) {\n    var chunkIndex = 0, index, outputSize, sn = initialMessage.sn, crc;\n\n    function onflush() {\n      worker.removeEventListener('message', onmessage, false);\n      onend(outputSize, crc);\n    }\n\n    function onmessage(event) {\n      var message = event.data, data = message.data, err = message.error;\n      if (err) {\n        err.toString = function () { return 'Error: ' + this.message; };\n        onreaderror(err);\n        return;\n      }\n      if (message.sn !== sn)\n        return;\n      if (typeof message.codecTime === 'number')\n        worker.codecTime += message.codecTime; // should be before onflush()\n      if (typeof message.crcTime === 'number')\n        worker.crcTime += message.crcTime;\n\n      switch (message.type) {\n        case 'append':\n          if (data) {\n            outputSize += data.length;\n            writer.writeUint8Array(data, function () {\n              step();\n            }, onwriteerror);\n          } else\n            step();\n          break;\n        case 'flush':\n          crc = message.crc;\n          if (data) {\n            outputSize += data.length;\n            writer.writeUint8Array(data, function () {\n              onflush();\n            }, onwriteerror);\n          } else\n            onflush();\n          break;\n        case 'progress':\n          if (onprogress)\n            onprogress(index + message.loaded, size);\n          break;\n        case 'importScripts': //no need to handle here\n        case 'newTask':\n        case 'echo':\n          break;\n        default:\n          console.warn('zip.js:launchWorkerProcess: unknown message: ', message);\n      }\n    }\n\n    function step() {\n      index = chunkIndex * CHUNK_SIZE;\n      // use `<=` instead of `<`, because `size` may be 0.\n      if (index <= size) {\n        reader.readUint8Array(offset + index, Math.min(CHUNK_SIZE, size - index), function (array) {\n          if (onprogress)\n            onprogress(index, size);\n          var msg = index === 0 ? initialMessage : { sn: sn };\n          msg.type = 'append';\n          msg.data = array;\n\n          // posting a message with transferables will fail on IE10\n          try {\n            worker.postMessage(msg, [array.buffer]);\n          } catch (ex) {\n            worker.postMessage(msg); // retry without transferables\n          }\n          chunkIndex++;\n        }, onreaderror);\n      } else {\n        worker.postMessage({\n          sn: sn,\n          type: 'flush'\n        });\n      }\n    }\n\n    outputSize = 0;\n    worker.addEventListener('message', onmessage, false);\n    step();\n  }\n\n  function launchProcess(process, reader, writer, offset, size, crcType, onprogress, onend, onreaderror, onwriteerror) {\n    var chunkIndex = 0, index, outputSize = 0,\n      crcInput = crcType === 'input',\n      crcOutput = crcType === 'output',\n      crc = new Crc32();\n    function step() {\n      var outputData;\n      index = chunkIndex * CHUNK_SIZE;\n      if (index < size)\n        reader.readUint8Array(offset + index, Math.min(CHUNK_SIZE, size - index), function (inputData) {\n          var outputData;\n          try {\n            outputData = process.append(inputData, function (loaded) {\n              if (onprogress)\n                onprogress(index + loaded, size);\n            });\n          } catch (e) {\n            onreaderror(e);\n            return;\n          }\n          if (outputData) {\n            outputSize += outputData.length;\n            writer.writeUint8Array(outputData, function () {\n              chunkIndex++;\n              setTimeout(step, 1);\n            }, onwriteerror);\n            if (crcOutput)\n              crc.append(outputData);\n          } else {\n            chunkIndex++;\n            setTimeout(step, 1);\n          }\n          if (crcInput)\n            crc.append(inputData);\n          if (onprogress)\n            onprogress(index, size);\n        }, onreaderror);\n      else {\n        try {\n          outputData = process.flush();\n        } catch (e) {\n          onreaderror(e);\n          return;\n        }\n        if (outputData) {\n          if (crcOutput)\n            crc.append(outputData);\n          outputSize += outputData.length;\n          writer.writeUint8Array(outputData, function () {\n            onend(outputSize, crc.get());\n          }, onwriteerror);\n        } else\n          onend(outputSize, crc.get());\n      }\n    }\n\n    step();\n  }\n\n  function inflate(worker, sn, reader, writer, offset, size, computeCrc32, onend, onprogress, onreaderror, onwriteerror) {\n    var crcType = computeCrc32 ? 'output' : 'none';\n    if (obj.zip.useWebWorkers) {\n      var initialMessage = {\n        sn: sn,\n        codecClass: 'Inflater',\n        crcType: crcType,\n      };\n      launchWorkerProcess(worker, initialMessage, reader, writer, offset, size, onprogress, onend, onreaderror, onwriteerror);\n    } else\n      launchProcess(new obj.zip.Inflater(), reader, writer, offset, size, crcType, onprogress, onend, onreaderror, onwriteerror);\n  }\n\n  function deflate(worker, sn, reader, writer, level, onend, onprogress, onreaderror, onwriteerror) {\n    var crcType = 'input';\n    if (obj.zip.useWebWorkers) {\n      var initialMessage = {\n        sn: sn,\n        options: { level: level },\n        codecClass: 'Deflater',\n        crcType: crcType,\n      };\n      launchWorkerProcess(worker, initialMessage, reader, writer, 0, reader.size, onprogress, onend, onreaderror, onwriteerror);\n    } else\n      launchProcess(new obj.zip.Deflater(), reader, writer, 0, reader.size, crcType, onprogress, onend, onreaderror, onwriteerror);\n  }\n\n  function copy(worker, sn, reader, writer, offset, size, computeCrc32, onend, onprogress, onreaderror, onwriteerror) {\n    var crcType = 'input';\n    if (obj.zip.useWebWorkers && computeCrc32) {\n      var initialMessage = {\n        sn: sn,\n        codecClass: 'NOOP',\n        crcType: crcType,\n      };\n      launchWorkerProcess(worker, initialMessage, reader, writer, offset, size, onprogress, onend, onreaderror, onwriteerror);\n    } else\n      launchProcess(new NOOP(), reader, writer, offset, size, crcType, onprogress, onend, onreaderror, onwriteerror);\n  }\n\n  // ZipReader\n\n  function decodeASCII(str) {\n    var i, out = \"\", charCode, extendedASCII = ['\\u00C7', '\\u00FC', '\\u00E9', '\\u00E2', '\\u00E4', '\\u00E0', '\\u00E5', '\\u00E7', '\\u00EA', '\\u00EB',\n      '\\u00E8', '\\u00EF', '\\u00EE', '\\u00EC', '\\u00C4', '\\u00C5', '\\u00C9', '\\u00E6', '\\u00C6', '\\u00F4', '\\u00F6', '\\u00F2', '\\u00FB', '\\u00F9',\n      '\\u00FF', '\\u00D6', '\\u00DC', '\\u00F8', '\\u00A3', '\\u00D8', '\\u00D7', '\\u0192', '\\u00E1', '\\u00ED', '\\u00F3', '\\u00FA', '\\u00F1', '\\u00D1',\n      '\\u00AA', '\\u00BA', '\\u00BF', '\\u00AE', '\\u00AC', '\\u00BD', '\\u00BC', '\\u00A1', '\\u00AB', '\\u00BB', '_', '_', '_', '\\u00A6', '\\u00A6',\n      '\\u00C1', '\\u00C2', '\\u00C0', '\\u00A9', '\\u00A6', '\\u00A6', '+', '+', '\\u00A2', '\\u00A5', '+', '+', '-', '-', '+', '-', '+', '\\u00E3',\n      '\\u00C3', '+', '+', '-', '-', '\\u00A6', '-', '+', '\\u00A4', '\\u00F0', '\\u00D0', '\\u00CA', '\\u00CB', '\\u00C8', 'i', '\\u00CD', '\\u00CE',\n      '\\u00CF', '+', '+', '_', '_', '\\u00A6', '\\u00CC', '_', '\\u00D3', '\\u00DF', '\\u00D4', '\\u00D2', '\\u00F5', '\\u00D5', '\\u00B5', '\\u00FE',\n      '\\u00DE', '\\u00DA', '\\u00DB', '\\u00D9', '\\u00FD', '\\u00DD', '\\u00AF', '\\u00B4', '\\u00AD', '\\u00B1', '_', '\\u00BE', '\\u00B6', '\\u00A7',\n      '\\u00F7', '\\u00B8', '\\u00B0', '\\u00A8', '\\u00B7', '\\u00B9', '\\u00B3', '\\u00B2', '_', ' '];\n    for (i = 0; i < str.length; i++) {\n      charCode = str.charCodeAt(i) & 0xFF;\n      if (charCode > 127)\n        out += extendedASCII[charCode - 128];\n      else\n        out += String.fromCharCode(charCode);\n    }\n    return out;\n  }\n\n  function decodeUTF8(string) {\n    return decodeURIComponent(escape(string));\n  }\n\n  function getString(bytes) {\n    var i, str = \"\";\n    for (i = 0; i < bytes.length; i++)\n      str += String.fromCharCode(bytes[i]);\n    return str;\n  }\n\n  function getDate(timeRaw) {\n    var date = (timeRaw & 0xffff0000) >> 16, time = timeRaw & 0x0000ffff;\n    try {\n      return new Date(1980 + ((date & 0xFE00) >> 9), ((date & 0x01E0) >> 5) - 1, date & 0x001F, (time & 0xF800) >> 11, (time & 0x07E0) >> 5,\n        (time & 0x001F) * 2, 0);\n    } catch (e) {\n    }\n  }\n\n  function readCommonHeader(entry, data, index, centralDirectory, onerror) {\n    entry.version = data.view.getUint16(index, true);\n    entry.bitFlag = data.view.getUint16(index + 2, true);\n    entry.compressionMethod = data.view.getUint16(index + 4, true);\n    entry.lastModDateRaw = data.view.getUint32(index + 6, true);\n    entry.lastModDate = getDate(entry.lastModDateRaw);\n    if ((entry.bitFlag & 0x01) === 0x01) {\n      onerror(ERR_ENCRYPTED);\n      return;\n    }\n    if (centralDirectory || (entry.bitFlag & 0x0008) != 0x0008) {\n      entry.crc32 = data.view.getUint32(index + 10, true);\n      entry.compressedSize = data.view.getUint32(index + 14, true);\n      entry.uncompressedSize = data.view.getUint32(index + 18, true);\n    }\n    if (entry.compressedSize === 0xFFFFFFFF || entry.uncompressedSize === 0xFFFFFFFF) {\n      onerror(ERR_ZIP64);\n      return;\n    }\n    entry.filenameLength = data.view.getUint16(index + 22, true);\n    entry.extraFieldLength = data.view.getUint16(index + 24, true);\n  }\n\n  function createZipReader(reader, callback, onerror) {\n    var inflateSN = 0;\n\n    function Entry() {\n    }\n\n    Entry.prototype.getData = function (writer, onend, onprogress, checkCrc32) {\n      var that = this;\n\n      function testCrc32(crc32) {\n        var dataCrc32 = getDataHelper(4);\n        dataCrc32.view.setUint32(0, crc32);\n        return that.crc32 == dataCrc32.view.getUint32(0);\n      }\n\n      function getWriterData(uncompressedSize, crc32) {\n        if (checkCrc32 && !testCrc32(crc32))\n          onerror(ERR_CRC);\n        else\n          writer.getData(function (data) {\n            onend(data);\n          });\n      }\n\n      function onreaderror(err) {\n        onerror(err || ERR_READ_DATA);\n      }\n\n      function onwriteerror(err) {\n        onerror(err || ERR_WRITE_DATA);\n      }\n\n      reader.readUint8Array(that.offset, 30, function (bytes) {\n        var data = getDataHelper(bytes.length, bytes), dataOffset;\n        if (data.view.getUint32(0) != 0x504b0304) {\n          onerror(ERR_BAD_FORMAT);\n          return;\n        }\n        readCommonHeader(that, data, 4, false, onerror);\n        dataOffset = that.offset + 30 + that.filenameLength + that.extraFieldLength;\n        writer.init(function () {\n          if (that.compressionMethod === 0)\n            copy(that._worker, inflateSN++, reader, writer, dataOffset, that.compressedSize, checkCrc32, getWriterData, onprogress, onreaderror, onwriteerror);\n          else\n            inflate(that._worker, inflateSN++, reader, writer, dataOffset, that.compressedSize, checkCrc32, getWriterData, onprogress, onreaderror, onwriteerror);\n        }, onwriteerror);\n      }, onreaderror);\n    };\n\n    function seekEOCDR(eocdrCallback) {\n      // \"End of central directory record\" is the last part of a zip archive, and is at least 22 bytes long.\n      // Zip file comment is the last part of EOCDR and has max length of 64KB,\n      // so we only have to search the last 64K + 22 bytes of a archive for EOCDR signature (0x06054b50).\n      var EOCDR_MIN = 22;\n      if (reader.size < EOCDR_MIN) {\n        onerror(ERR_BAD_FORMAT);\n        return;\n      }\n      var ZIP_COMMENT_MAX = 256 * 256, EOCDR_MAX = EOCDR_MIN + ZIP_COMMENT_MAX;\n\n      // In most cases, the EOCDR is EOCDR_MIN bytes long\n      doSeek(EOCDR_MIN, function () {\n        // If not found, try within EOCDR_MAX bytes\n        doSeek(Math.min(EOCDR_MAX, reader.size), function () {\n          onerror(ERR_BAD_FORMAT);\n        });\n      });\n\n      // seek last length bytes of file for EOCDR\n      function doSeek(length, eocdrNotFoundCallback) {\n        reader.readUint8Array(reader.size - length, length, function (bytes) {\n          for (var i = bytes.length - EOCDR_MIN; i >= 0; i--) {\n            if (bytes[i] === 0x50 && bytes[i + 1] === 0x4b && bytes[i + 2] === 0x05 && bytes[i + 3] === 0x06) {\n              eocdrCallback(new DataView(bytes.buffer, i, EOCDR_MIN));\n              return;\n            }\n          }\n          eocdrNotFoundCallback();\n        }, function () {\n          onerror(ERR_READ);\n        });\n      }\n    }\n\n    var zipReader = {\n      getEntries: function (callback) {\n        var worker = this._worker;\n        // look for End of central directory record\n        seekEOCDR(function (dataView) {\n          var datalength, fileslength;\n          datalength = dataView.getUint32(16, true);\n          fileslength = dataView.getUint16(8, true);\n          if (datalength < 0 || datalength >= reader.size) {\n            onerror(ERR_BAD_FORMAT);\n            return;\n          }\n          reader.readUint8Array(datalength, reader.size - datalength, function (bytes) {\n            var i, index = 0, entries = [], entry, filename, comment, data = getDataHelper(bytes.length, bytes);\n            for (i = 0; i < fileslength; i++) {\n              entry = new Entry();\n              entry._worker = worker;\n              if (data.view.getUint32(index) != 0x504b0102) {\n                onerror(ERR_BAD_FORMAT);\n                return;\n              }\n              readCommonHeader(entry, data, index + 6, true, onerror);\n              entry.commentLength = data.view.getUint16(index + 32, true);\n              entry.directory = ((data.view.getUint8(index + 38) & 0x10) == 0x10);\n              entry.offset = data.view.getUint32(index + 42, true);\n              filename = getString(data.array.subarray(index + 46, index + 46 + entry.filenameLength));\n              entry.filename = ((entry.bitFlag & 0x0800) === 0x0800) ? decodeUTF8(filename) : decodeASCII(filename);\n              if (!entry.directory && entry.filename.charAt(entry.filename.length - 1) == \"/\")\n                entry.directory = true;\n              comment = getString(data.array.subarray(index + 46 + entry.filenameLength + entry.extraFieldLength, index + 46\n                + entry.filenameLength + entry.extraFieldLength + entry.commentLength));\n              entry.comment = ((entry.bitFlag & 0x0800) === 0x0800) ? decodeUTF8(comment) : decodeASCII(comment);\n              entries.push(entry);\n              index += 46 + entry.filenameLength + entry.extraFieldLength + entry.commentLength;\n            }\n            callback(entries);\n          }, function () {\n            onerror(ERR_READ);\n          });\n        });\n      },\n      close: function (callback) {\n        if (this._worker) {\n          this._worker.terminate();\n          this._worker = null;\n        }\n        if (callback)\n          callback();\n      },\n      _worker: null\n    };\n\n    if (!obj.zip.useWebWorkers)\n      callback(zipReader);\n    else {\n      createWorker('inflater',\n        function (worker) {\n          zipReader._worker = worker;\n          callback(zipReader);\n        },\n        function (err) {\n          onerror(err);\n        }\n      );\n    }\n  }\n\n  // ZipWriter\n\n  function encodeUTF8(string) {\n    return unescape(encodeURIComponent(string));\n  }\n\n  function getBytes(str) {\n    var i, array = [];\n    for (i = 0; i < str.length; i++)\n      array.push(str.charCodeAt(i));\n    return array;\n  }\n\n  function createZipWriter(writer, callback, onerror, dontDeflate) {\n    var files = {}, filenames = [], datalength = 0;\n    var deflateSN = 0;\n\n    function onwriteerror(err) {\n      onerror(err || ERR_WRITE);\n    }\n\n    function onreaderror(err) {\n      onerror(err || ERR_READ_DATA);\n    }\n\n    var zipWriter = {\n      add: function (name, reader, onend, onprogress, options) {\n        var header, filename, date;\n        var worker = this._worker;\n\n        function writeHeader(callback) {\n          var data;\n          date = options.lastModDate || new Date();\n          header = getDataHelper(26);\n          files[name] = {\n            headerArray: header.array,\n            directory: options.directory,\n            filename: filename,\n            offset: datalength,\n            comment: getBytes(encodeUTF8(options.comment || \"\"))\n          };\n          header.view.setUint32(0, 0x14000808);\n          if (options.version)\n            header.view.setUint8(0, options.version);\n          if (!dontDeflate && options.level !== 0 && !options.directory)\n            header.view.setUint16(4, 0x0800);\n          header.view.setUint16(6, (((date.getHours() << 6) | date.getMinutes()) << 5) | date.getSeconds() / 2, true);\n          header.view.setUint16(8, ((((date.getFullYear() - 1980) << 4) | (date.getMonth() + 1)) << 5) | date.getDate(), true);\n          header.view.setUint16(22, filename.length, true);\n          data = getDataHelper(30 + filename.length);\n          data.view.setUint32(0, 0x504b0304);\n          data.array.set(header.array, 4);\n          data.array.set(filename, 30);\n          datalength += data.array.length;\n          writer.writeUint8Array(data.array, callback, onwriteerror);\n        }\n\n        function writeFooter(compressedLength, crc32) {\n          var footer = getDataHelper(16);\n          datalength += compressedLength || 0;\n          footer.view.setUint32(0, 0x504b0708);\n          if (typeof crc32 != \"undefined\") {\n            header.view.setUint32(10, crc32, true);\n            footer.view.setUint32(4, crc32, true);\n          }\n          if (reader) {\n            footer.view.setUint32(8, compressedLength, true);\n            header.view.setUint32(14, compressedLength, true);\n            footer.view.setUint32(12, reader.size, true);\n            header.view.setUint32(18, reader.size, true);\n          }\n          writer.writeUint8Array(footer.array, function () {\n            datalength += 16;\n            onend();\n          }, onwriteerror);\n        }\n\n        function writeFile() {\n          options = options || {};\n          name = name.trim();\n          if (options.directory && name.charAt(name.length - 1) != \"/\")\n            name += \"/\";\n          if (files.hasOwnProperty(name)) {\n            onerror(ERR_DUPLICATED_NAME);\n            return;\n          }\n          filename = getBytes(encodeUTF8(name));\n          filenames.push(name);\n          writeHeader(function () {\n            if (reader)\n              if (dontDeflate || options.level === 0)\n                copy(worker, deflateSN++, reader, writer, 0, reader.size, true, writeFooter, onprogress, onreaderror, onwriteerror);\n              else\n                deflate(worker, deflateSN++, reader, writer, options.level, writeFooter, onprogress, onreaderror, onwriteerror);\n            else\n              writeFooter();\n          }, onwriteerror);\n        }\n\n        if (reader)\n          reader.init(writeFile, onreaderror);\n        else\n          writeFile();\n      },\n      close: function (callback) {\n        if (this._worker) {\n          this._worker.terminate();\n          this._worker = null;\n        }\n\n        var data, length = 0, index = 0, indexFilename, file;\n        for (indexFilename = 0; indexFilename < filenames.length; indexFilename++) {\n          file = files[filenames[indexFilename]];\n          length += 46 + file.filename.length + file.comment.length;\n        }\n        data = getDataHelper(length + 22);\n        for (indexFilename = 0; indexFilename < filenames.length; indexFilename++) {\n          file = files[filenames[indexFilename]];\n          data.view.setUint32(index, 0x504b0102);\n          data.view.setUint16(index + 4, 0x1400);\n          data.array.set(file.headerArray, index + 6);\n          data.view.setUint16(index + 32, file.comment.length, true);\n          if (file.directory)\n            data.view.setUint8(index + 38, 0x10);\n          data.view.setUint32(index + 42, file.offset, true);\n          data.array.set(file.filename, index + 46);\n          data.array.set(file.comment, index + 46 + file.filename.length);\n          index += 46 + file.filename.length + file.comment.length;\n        }\n        data.view.setUint32(index, 0x504b0506);\n        data.view.setUint16(index + 8, filenames.length, true);\n        data.view.setUint16(index + 10, filenames.length, true);\n        data.view.setUint32(index + 12, length, true);\n        data.view.setUint32(index + 16, datalength, true);\n        writer.writeUint8Array(data.array, function () {\n          writer.getData(callback);\n        }, onwriteerror);\n      },\n      _worker: null\n    };\n\n    if (!obj.zip.useWebWorkers)\n      callback(zipWriter);\n    else {\n      createWorker('deflater',\n        function (worker) {\n          zipWriter._worker = worker;\n          callback(zipWriter);\n        },\n        function (err) {\n          onerror(err);\n        }\n      );\n    }\n  }\n\n  function resolveURLs(urls) {\n    var a = document.createElement('a');\n    return urls.map(function (url) {\n      a.href = url;\n      return a.href;\n    });\n  }\n\n  var DEFAULT_WORKER_SCRIPTS = {\n    deflater: ['z-worker.js', 'deflate.js'],\n    inflater: ['z-worker.js', 'inflate.js']\n  };\n  function createWorker(type, callback, onerror) {\n    if (obj.zip.workerScripts !== null && obj.zip.workerScriptsPath !== null) {\n      onerror(new Error('Either zip.workerScripts or zip.workerScriptsPath may be set, not both.'));\n      return;\n    }\n    var scripts;\n    if (obj.zip.workerScripts) {\n      scripts = obj.zip.workerScripts[type];\n      if (!Array.isArray(scripts)) {\n        onerror(new Error('zip.workerScripts.' + type + ' is not an array!'));\n        return;\n      }\n      scripts = resolveURLs(scripts);\n    } else {\n      scripts = DEFAULT_WORKER_SCRIPTS[type].slice(0);\n      scripts[0] = (obj.zip.workerScriptsPath || '') + scripts[0];\n    }\n    var worker = new Worker(scripts[0]);\n    // record total consumed time by inflater/deflater/crc32 in this worker\n    worker.codecTime = worker.crcTime = 0;\n    worker.postMessage({ type: 'importScripts', scripts: scripts.slice(1) });\n    worker.addEventListener('message', onmessage);\n    function onmessage(ev) {\n      var msg = ev.data;\n      if (msg.error) {\n        worker.terminate(); // should before onerror(), because onerror() may throw.\n        onerror(msg.error);\n        return;\n      }\n      if (msg.type === 'importScripts') {\n        worker.removeEventListener('message', onmessage);\n        worker.removeEventListener('error', errorHandler);\n        callback(worker);\n      }\n    }\n    // catch entry script loading error and other unhandled errors\n    worker.addEventListener('error', errorHandler);\n    function errorHandler(err) {\n      worker.terminate();\n      onerror(err);\n    }\n  }\n\n  function onerror_default(error) {\n    console.error(error);\n  }\n  obj.zip = {\n    Reader: Reader,\n    Writer: Writer,\n    BlobReader: BlobReader,\n    Data64URIReader: Data64URIReader,\n    TextReader: TextReader,\n    BlobWriter: BlobWriter,\n    Data64URIWriter: Data64URIWriter,\n    TextWriter: TextWriter,\n    createReader: function (reader, callback, onerror) {\n      onerror = onerror || onerror_default;\n\n      reader.init(function () {\n        createZipReader(reader, callback, onerror);\n      }, onerror);\n    },\n    createWriter: function (writer, callback, onerror, dontDeflate) {\n      onerror = onerror || onerror_default;\n      dontDeflate = !!dontDeflate;\n\n      writer.init(function () {\n        createZipWriter(writer, callback, onerror, dontDeflate);\n      }, onerror);\n    },\n    useWebWorkers: true,\n    /**\n     * Directory containing the default worker scripts (z-worker.js, deflate.js, and inflate.js), relative to current base url.\n     * E.g.: zip.workerScripts = './';\n     */\n    workerScriptsPath: null,\n    /**\n     * Advanced option to control which scripts are loaded in the Web worker. If this option is specified, then workerScriptsPath must not be set.\n     * workerScripts.deflater/workerScripts.inflater should be arrays of urls to scripts for deflater/inflater, respectively.\n     * Scripts in the array are executed in order, and the first one should be z-worker.js, which is used to start the worker.\n     * All urls are relative to current base url.\n     * E.g.:\n     * zip.workerScripts = {\n     *   deflater: ['z-worker.js', 'deflate.js'],\n     *   inflater: ['z-worker.js', 'inflate.js']\n     * };\n     */\n    workerScripts: null,\n  };\n\n})(zipExport);\n\n/*\n Copyright (c) 2013 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in\n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n(function (global) {\n  \"use strict\";\n\n  // Global\n  var MAX_BITS = 15;\n\n  var Z_OK = 0;\n  var Z_STREAM_END = 1;\n  var Z_NEED_DICT = 2;\n  var Z_STREAM_ERROR = -2;\n  var Z_DATA_ERROR = -3;\n  var Z_MEM_ERROR = -4;\n  var Z_BUF_ERROR = -5;\n\n  var inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff,\n    0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\n  var MANY = 1440;\n\n  // JZlib version : \"1.0.2\"\n  var Z_NO_FLUSH = 0;\n  var Z_FINISH = 4;\n\n  // InfTree\n  var fixed_bl = 9;\n  var fixed_bd = 5;\n\n  var fixed_tl = [96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 192, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 160, 0, 8, 0,\n    0, 8, 128, 0, 8, 64, 0, 9, 224, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 144, 83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 208, 81, 7, 17, 0, 8, 104, 0, 8, 40,\n    0, 9, 176, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 240, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 200, 81, 7, 13,\n    0, 8, 100, 0, 8, 36, 0, 9, 168, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 232, 80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 152, 84, 7, 83, 0, 8, 124, 0, 8, 60,\n    0, 9, 216, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 184, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 248, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7,\n    35, 0, 8, 114, 0, 8, 50, 0, 9, 196, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 164, 0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 228, 80, 7, 7, 0, 8, 90, 0, 8,\n    26, 0, 9, 148, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 212, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 180, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 244, 80,\n    7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 204, 81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 172, 0, 8, 6, 0, 8, 134, 0,\n    8, 70, 0, 9, 236, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 156, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 220, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 188, 0,\n    8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 252, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 194, 80, 7, 10, 0, 8, 97,\n    0, 8, 33, 0, 9, 162, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 226, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 146, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 210,\n    81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 178, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 242, 80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117,\n    0, 8, 53, 0, 9, 202, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 170, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 234, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 154,\n    84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 218, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 186, 0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 250, 80, 7, 3, 0, 8, 83,\n    0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 198, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 166, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 230,\n    80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 150, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 214, 82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 182, 0, 8, 11, 0, 8, 139,\n    0, 8, 75, 0, 9, 246, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 206, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 174,\n    0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 238, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 158, 84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 222, 82, 7, 27, 0, 8, 111,\n    0, 8, 47, 0, 9, 190, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 254, 96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9,\n    193, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 161, 0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 225, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 145, 83, 7, 59, 0, 8,\n    120, 0, 8, 56, 0, 9, 209, 81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 177, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 241, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8,\n    227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 201, 81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 169, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 233, 80, 7, 8, 0, 8,\n    92, 0, 8, 28, 0, 9, 153, 84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 217, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 185, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9,\n    249, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 197, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 165, 0, 8, 2, 0, 8,\n    130, 0, 8, 66, 0, 9, 229, 80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 149, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 213, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9,\n    181, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 245, 80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 205, 81, 7, 15, 0, 8,\n    102, 0, 8, 38, 0, 9, 173, 0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 237, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 157, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9,\n    221, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 189, 0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 253, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0,\n    8, 113, 0, 8, 49, 0, 9, 195, 80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 163, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 227, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9,\n    147, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 211, 81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 179, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 243, 80, 7, 4, 0, 8,\n    85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 203, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 171, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9,\n    235, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 155, 84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 219, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 187, 0, 8, 13, 0, 8,\n    141, 0, 8, 77, 0, 9, 251, 80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 199, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9,\n    167, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 231, 80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 151, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 215, 82, 7, 19, 0, 8,\n    107, 0, 8, 43, 0, 9, 183, 0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 247, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9,\n    207, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 175, 0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 239, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 159, 84, 7, 99, 0, 8,\n    127, 0, 8, 63, 0, 9, 223, 82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 191, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 255];\n  var fixed_td = [80, 5, 1, 87, 5, 257, 83, 5, 17, 91, 5, 4097, 81, 5, 5, 89, 5, 1025, 85, 5, 65, 93, 5, 16385, 80, 5, 3, 88, 5, 513, 84, 5, 33, 92, 5,\n    8193, 82, 5, 9, 90, 5, 2049, 86, 5, 129, 192, 5, 24577, 80, 5, 2, 87, 5, 385, 83, 5, 25, 91, 5, 6145, 81, 5, 7, 89, 5, 1537, 85, 5, 97, 93, 5,\n    24577, 80, 5, 4, 88, 5, 769, 84, 5, 49, 92, 5, 12289, 82, 5, 13, 90, 5, 3073, 86, 5, 193, 192, 5, 24577];\n\n  // Tables for deflate from PKZIP's appnote.txt.\n  var cplens = [ // Copy lengths for literal codes 257..285\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];\n\n  // see note #13 above about 258\n  var cplext = [ // Extra bits for literal codes 257..285\n    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112 // 112==invalid\n  ];\n\n  var cpdist = [ // Copy offsets for distance codes 0..29\n    1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n\n  var cpdext = [ // Extra bits for distance codes\n    0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n  // If BMAX needs to be larger than 16, then h and x[] should be uLong.\n  var BMAX = 15; // maximum bit length of any code\n\n  function InfTree() {\n    var that = this;\n\n    var hn; // hufts used in space\n    var v; // work area for huft_build\n    var c; // bit length count table\n    var r; // table entry for structure assignment\n    var u; // table stack\n    var x; // bit offsets, then code stack\n\n    function huft_build(b, // code lengths in bits (all assumed <=\n      // BMAX)\n      bindex, n, // number of codes (assumed <= 288)\n      s, // number of simple-valued codes (0..s-1)\n      d, // list of base values for non-simple codes\n      e, // list of extra bits for non-simple codes\n      t, // result: starting table\n      m, // maximum lookup bits, returns actual\n      hp,// space for trees\n      hn,// hufts used in space\n      v // working area: values in order of bit length\n    ) {\n      // Given a list of code lengths and a maximum table size, make a set of\n      // tables to decode that set of codes. Return Z_OK on success,\n      // Z_BUF_ERROR\n      // if the given code set is incomplete (the tables are still built in\n      // this\n      // case), Z_DATA_ERROR if the input is invalid (an over-subscribed set\n      // of\n      // lengths), or Z_MEM_ERROR if not enough memory.\n\n      var a; // counter for codes of length k\n      var f; // i repeats in table every f entries\n      var g; // maximum code length\n      var h; // table level\n      var i; // counter, current code\n      var j; // counter\n      var k; // number of bits in current code\n      var l; // bits per table (returned in m)\n      var mask; // (1 << w) - 1, to avoid cc -O bug on HP\n      var p; // pointer into c[], b[], or v[]\n      var q; // points to current table\n      var w; // bits before this table == (l * h)\n      var xp; // pointer into x\n      var y; // number of dummy codes added\n      var z; // number of entries in current table\n\n      // Generate counts for each bit length\n\n      p = 0;\n      i = n;\n      do {\n        c[b[bindex + p]]++;\n        p++;\n        i--; // assume all entries <= BMAX\n      } while (i !== 0);\n\n      if (c[0] == n) { // null input--all zero length codes\n        t[0] = -1;\n        m[0] = 0;\n        return Z_OK;\n      }\n\n      // Find minimum and maximum length, bound *m by those\n      l = m[0];\n      for (j = 1; j <= BMAX; j++)\n        if (c[j] !== 0)\n          break;\n      k = j; // minimum code length\n      if (l < j) {\n        l = j;\n      }\n      for (i = BMAX; i !== 0; i--) {\n        if (c[i] !== 0)\n          break;\n      }\n      g = i; // maximum code length\n      if (l > i) {\n        l = i;\n      }\n      m[0] = l;\n\n      // Adjust last length count to fill out codes, if needed\n      for (y = 1 << j; j < i; j++, y <<= 1) {\n        if ((y -= c[j]) < 0) {\n          return Z_DATA_ERROR;\n        }\n      }\n      if ((y -= c[i]) < 0) {\n        return Z_DATA_ERROR;\n      }\n      c[i] += y;\n\n      // Generate starting offsets into the value table for each length\n      x[1] = j = 0;\n      p = 1;\n      xp = 2;\n      while (--i !== 0) { // note that i == g from above\n        x[xp] = (j += c[p]);\n        xp++;\n        p++;\n      }\n\n      // Make a table of values in order of bit lengths\n      i = 0;\n      p = 0;\n      do {\n        if ((j = b[bindex + p]) !== 0) {\n          v[x[j]++] = i;\n        }\n        p++;\n      } while (++i < n);\n      n = x[g]; // set n to length of v\n\n      // Generate the Huffman codes and for each, make the table entries\n      x[0] = i = 0; // first Huffman code is zero\n      p = 0; // grab values in bit order\n      h = -1; // no tables yet--level -1\n      w = -l; // bits decoded == (l * h)\n      u[0] = 0; // just to keep compilers happy\n      q = 0; // ditto\n      z = 0; // ditto\n\n      // go through the bit lengths (k already is bits in shortest code)\n      for (; k <= g; k++) {\n        a = c[k];\n        while (a-- !== 0) {\n          // here i is the Huffman code of length k bits for value *p\n          // make tables up to required level\n          while (k > w + l) {\n            h++;\n            w += l; // previous table always l bits\n            // compute minimum size table less than or equal to l bits\n            z = g - w;\n            z = (z > l) ? l : z; // table size upper limit\n            if ((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n              // too few codes for\n              // k-w bit table\n              f -= a + 1; // deduct codes from patterns left\n              xp = k;\n              if (j < z) {\n                while (++j < z) { // try smaller tables up to z bits\n                  if ((f <<= 1) <= c[++xp])\n                    break; // enough codes to use up j bits\n                  f -= c[xp]; // else deduct codes from patterns\n                }\n              }\n            }\n            z = 1 << j; // table entries for j-bit table\n\n            // allocate new table\n            if (hn[0] + z > MANY) { // (note: doesn't matter for fixed)\n              return Z_DATA_ERROR; // overflow of MANY\n            }\n            u[h] = q = /* hp+ */hn[0]; // DEBUG\n            hn[0] += z;\n\n            // connect to last table, if there is one\n            if (h !== 0) {\n              x[h] = i; // save pattern for backing up\n              r[0] = /* (byte) */j; // bits in this table\n              r[1] = /* (byte) */l; // bits to dump before this table\n              j = i >>> (w - l);\n              r[2] = /* (int) */(q - u[h - 1] - j); // offset to this table\n              hp.set(r, (u[h - 1] + j) * 3);\n              // to\n              // last\n              // table\n            } else {\n              t[0] = q; // first table is returned result\n            }\n          }\n\n          // set up table entry in r\n          r[1] = /* (byte) */(k - w);\n          if (p >= n) {\n            r[0] = 128 + 64; // out of values--invalid code\n          } else if (v[p] < s) {\n            r[0] = /* (byte) */(v[p] < 256 ? 0 : 32 + 64); // 256 is\n            // end-of-block\n            r[2] = v[p++]; // simple code is just the value\n          } else {\n            r[0] = /* (byte) */(e[v[p] - s] + 16 + 64); // non-simple--look\n            // up in lists\n            r[2] = d[v[p++] - s];\n          }\n\n          // fill code-like entries with r\n          f = 1 << (k - w);\n          for (j = i >>> w; j < z; j += f) {\n            hp.set(r, (q + j) * 3);\n          }\n\n          // backwards increment the k-bit code i\n          for (j = 1 << (k - 1); (i & j) !== 0; j >>>= 1) {\n            i ^= j;\n          }\n          i ^= j;\n\n          // backup over finished tables\n          mask = (1 << w) - 1; // needed on HP, cc -O bug\n          while ((i & mask) != x[h]) {\n            h--; // don't need to update q\n            w -= l;\n            mask = (1 << w) - 1;\n          }\n        }\n      }\n      // Return Z_BUF_ERROR if we were given an incomplete table\n      return y !== 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n    }\n\n    function initWorkArea(vsize) {\n      var i;\n      if (!hn) {\n        hn = []; // []; //new Array(1);\n        v = []; // new Array(vsize);\n        c = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n        r = []; // new Array(3);\n        u = new Int32Array(BMAX); // new Array(BMAX);\n        x = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n      }\n      if (v.length < vsize) {\n        v = []; // new Array(vsize);\n      }\n      for (i = 0; i < vsize; i++) {\n        v[i] = 0;\n      }\n      for (i = 0; i < BMAX + 1; i++) {\n        c[i] = 0;\n      }\n      for (i = 0; i < 3; i++) {\n        r[i] = 0;\n      }\n      // for(int i=0; i<BMAX; i++){u[i]=0;}\n      u.set(c.subarray(0, BMAX), 0);\n      // for(int i=0; i<BMAX+1; i++){x[i]=0;}\n      x.set(c.subarray(0, BMAX + 1), 0);\n    }\n\n    that.inflate_trees_bits = function (c, // 19 code lengths\n      bb, // bits tree desired/actual depth\n      tb, // bits tree result\n      hp, // space for trees\n      z // for messages\n    ) {\n      var result;\n      initWorkArea(19);\n      hn[0] = 0;\n      result = huft_build(c, 0, 19, 19, null, null, tb, bb, hp, hn, v);\n\n      if (result == Z_DATA_ERROR) {\n        z.msg = \"oversubscribed dynamic bit lengths tree\";\n      } else if (result == Z_BUF_ERROR || bb[0] === 0) {\n        z.msg = \"incomplete dynamic bit lengths tree\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    };\n\n    that.inflate_trees_dynamic = function (nl, // number of literal/length codes\n      nd, // number of distance codes\n      c, // that many (total) code lengths\n      bl, // literal desired/actual bit depth\n      bd, // distance desired/actual bit depth\n      tl, // literal/length tree result\n      td, // distance tree result\n      hp, // space for trees\n      z // for messages\n    ) {\n      var result;\n\n      // build literal/length tree\n      initWorkArea(288);\n      hn[0] = 0;\n      result = huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, hn, v);\n      if (result != Z_OK || bl[0] === 0) {\n        if (result == Z_DATA_ERROR) {\n          z.msg = \"oversubscribed literal/length tree\";\n        } else if (result != Z_MEM_ERROR) {\n          z.msg = \"incomplete literal/length tree\";\n          result = Z_DATA_ERROR;\n        }\n        return result;\n      }\n\n      // build distance tree\n      initWorkArea(288);\n      result = huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, hn, v);\n\n      if (result != Z_OK || (bd[0] === 0 && nl > 257)) {\n        if (result == Z_DATA_ERROR) {\n          z.msg = \"oversubscribed distance tree\";\n        } else if (result == Z_BUF_ERROR) {\n          z.msg = \"incomplete distance tree\";\n          result = Z_DATA_ERROR;\n        } else if (result != Z_MEM_ERROR) {\n          z.msg = \"empty distance tree with lengths\";\n          result = Z_DATA_ERROR;\n        }\n        return result;\n      }\n\n      return Z_OK;\n    };\n\n  }\n\n  InfTree.inflate_trees_fixed = function (bl, // literal desired/actual bit depth\n    bd, // distance desired/actual bit depth\n    tl,// literal/length tree result\n    td// distance tree result\n  ) {\n    bl[0] = fixed_bl;\n    bd[0] = fixed_bd;\n    tl[0] = fixed_tl;\n    td[0] = fixed_td;\n    return Z_OK;\n  };\n\n  // InfCodes\n\n  // waiting for \"i:\"=input,\n  // \"o:\"=output,\n  // \"x:\"=nothing\n  var START = 0; // x: set up for LEN\n  var LEN = 1; // i: get length/literal/eob next\n  var LENEXT = 2; // i: getting length extra (have base)\n  var DIST = 3; // i: get distance next\n  var DISTEXT = 4;// i: getting distance extra\n  var COPY = 5; // o: copying bytes in window, waiting\n  // for space\n  var LIT = 6; // o: got literal, waiting for output\n  // space\n  var WASH = 7; // o: got eob, possibly still output\n  // waiting\n  var END = 8; // x: got eob and all data flushed\n  var BADCODE = 9;// x: got error\n\n  function InfCodes() {\n    var that = this;\n\n    var mode; // current inflate_codes mode\n\n    // mode dependent information\n    var len = 0;\n\n    var tree; // pointer into tree\n    var tree_index = 0;\n    var need = 0; // bits needed\n\n    var lit = 0;\n\n    // if EXT or COPY, where and how much\n    var get = 0; // bits to get for extra\n    var dist = 0; // distance back to copy from\n\n    var lbits = 0; // ltree bits decoded per branch\n    var dbits = 0; // dtree bits decoder per branch\n    var ltree; // literal/length/eob tree\n    var ltree_index = 0; // literal/length/eob tree\n    var dtree; // distance tree\n    var dtree_index = 0; // distance tree\n\n    // Called with number of bytes left to write in window at least 258\n    // (the maximum string length) and number of input bytes available\n    // at least ten. The ten bytes are six bytes for the longest length/\n    // distance pair plus four bytes for overloading the bit buffer.\n\n    function inflate_fast(bl, bd, tl, tl_index, td, td_index, s, z) {\n      var t; // temporary pointer\n      var tp; // temporary pointer\n      var tp_index; // temporary pointer\n      var e; // extra bits or operation\n      var b; // bit buffer\n      var k; // bits in bit buffer\n      var p; // input data pointer\n      var n; // bytes available there\n      var q; // output window write pointer\n      var m; // bytes to end of window or read pointer\n      var ml; // mask for literal/length tree\n      var md; // mask for distance tree\n      var c; // bytes to copy\n      var d; // distance back to copy from\n      var r; // copy source pointer\n\n      var tp_index_t_3; // (tp_index+t)*3\n\n      // load input, output, bit values\n      p = z.next_in_index;\n      n = z.avail_in;\n      b = s.bitb;\n      k = s.bitk;\n      q = s.write;\n      m = q < s.read ? s.read - q - 1 : s.end - q;\n\n      // initialize masks\n      ml = inflate_mask[bl];\n      md = inflate_mask[bd];\n\n      // do until not enough input or output space for fast loop\n      do { // assume called with m >= 258 && n >= 10\n        // get literal/length code\n        while (k < (20)) { // max bits for literal/length code\n          n--;\n          b |= (z.read_byte(p++) & 0xff) << k;\n          k += 8;\n        }\n\n        t = b & ml;\n        tp = tl;\n        tp_index = tl_index;\n        tp_index_t_3 = (tp_index + t) * 3;\n        if ((e = tp[tp_index_t_3]) === 0) {\n          b >>= (tp[tp_index_t_3 + 1]);\n          k -= (tp[tp_index_t_3 + 1]);\n\n          s.window[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n          m--;\n          continue;\n        }\n        do {\n\n          b >>= (tp[tp_index_t_3 + 1]);\n          k -= (tp[tp_index_t_3 + 1]);\n\n          if ((e & 16) !== 0) {\n            e &= 15;\n            c = tp[tp_index_t_3 + 2] + (/* (int) */b & inflate_mask[e]);\n\n            b >>= e;\n            k -= e;\n\n            // decode distance base of block to copy\n            while (k < (15)) { // max bits for distance code\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n\n            t = b & md;\n            tp = td;\n            tp_index = td_index;\n            tp_index_t_3 = (tp_index + t) * 3;\n            e = tp[tp_index_t_3];\n\n            do {\n\n              b >>= (tp[tp_index_t_3 + 1]);\n              k -= (tp[tp_index_t_3 + 1]);\n\n              if ((e & 16) !== 0) {\n                // get extra bits to add to distance base\n                e &= 15;\n                while (k < (e)) { // get extra bits (up to 13)\n                  n--;\n                  b |= (z.read_byte(p++) & 0xff) << k;\n                  k += 8;\n                }\n\n                d = tp[tp_index_t_3 + 2] + (b & inflate_mask[e]);\n\n                b >>= (e);\n                k -= (e);\n\n                // do the copy\n                m -= c;\n                if (q >= d) { // offset before dest\n                  // just copy\n                  r = q - d;\n                  if (q - r > 0 && 2 > (q - r)) {\n                    s.window[q++] = s.window[r++]; // minimum\n                    // count is\n                    // three,\n                    s.window[q++] = s.window[r++]; // so unroll\n                    // loop a\n                    // little\n                    c -= 2;\n                  } else {\n                    s.window.set(s.window.subarray(r, r + 2), q);\n                    q += 2;\n                    r += 2;\n                    c -= 2;\n                  }\n                } else { // else offset after destination\n                  r = q - d;\n                  do {\n                    r += s.end; // force pointer in window\n                  } while (r < 0); // covers invalid distances\n                  e = s.end - r;\n                  if (c > e) { // if source crosses,\n                    c -= e; // wrapped copy\n                    if (q - r > 0 && e > (q - r)) {\n                      do {\n                        s.window[q++] = s.window[r++];\n                      } while (--e !== 0);\n                    } else {\n                      s.window.set(s.window.subarray(r, r + e), q);\n                      q += e;\n                      r += e;\n                      e = 0;\n                    }\n                    r = 0; // copy rest from start of window\n                  }\n\n                }\n\n                // copy all or what's left\n                if (q - r > 0 && c > (q - r)) {\n                  do {\n                    s.window[q++] = s.window[r++];\n                  } while (--c !== 0);\n                } else {\n                  s.window.set(s.window.subarray(r, r + c), q);\n                  q += c;\n                  r += c;\n                  c = 0;\n                }\n                break;\n              } else if ((e & 64) === 0) {\n                t += tp[tp_index_t_3 + 2];\n                t += (b & inflate_mask[e]);\n                tp_index_t_3 = (tp_index + t) * 3;\n                e = tp[tp_index_t_3];\n              } else {\n                z.msg = \"invalid distance code\";\n\n                c = z.avail_in - n;\n                c = (k >> 3) < c ? k >> 3 : c;\n                n += c;\n                p -= c;\n                k -= c << 3;\n\n                s.bitb = b;\n                s.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                s.write = q;\n\n                return Z_DATA_ERROR;\n              }\n            } while (true);\n            break;\n          }\n\n          if ((e & 64) === 0) {\n            t += tp[tp_index_t_3 + 2];\n            t += (b & inflate_mask[e]);\n            tp_index_t_3 = (tp_index + t) * 3;\n            if ((e = tp[tp_index_t_3]) === 0) {\n\n              b >>= (tp[tp_index_t_3 + 1]);\n              k -= (tp[tp_index_t_3 + 1]);\n\n              s.window[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n              m--;\n              break;\n            }\n          } else if ((e & 32) !== 0) {\n\n            c = z.avail_in - n;\n            c = (k >> 3) < c ? k >> 3 : c;\n            n += c;\n            p -= c;\n            k -= c << 3;\n\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n\n            return Z_STREAM_END;\n          } else {\n            z.msg = \"invalid literal/length code\";\n\n            c = z.avail_in - n;\n            c = (k >> 3) < c ? k >> 3 : c;\n            n += c;\n            p -= c;\n            k -= c << 3;\n\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n\n            return Z_DATA_ERROR;\n          }\n        } while (true);\n      } while (m >= 258 && n >= 10);\n\n      // not enough input or output--restore pointers and return\n      c = z.avail_in - n;\n      c = (k >> 3) < c ? k >> 3 : c;\n      n += c;\n      p -= c;\n      k -= c << 3;\n\n      s.bitb = b;\n      s.bitk = k;\n      z.avail_in = n;\n      z.total_in += p - z.next_in_index;\n      z.next_in_index = p;\n      s.write = q;\n\n      return Z_OK;\n    }\n\n    that.init = function (bl, bd, tl, tl_index, td, td_index) {\n      mode = START;\n      lbits = /* (byte) */bl;\n      dbits = /* (byte) */bd;\n      ltree = tl;\n      ltree_index = tl_index;\n      dtree = td;\n      dtree_index = td_index;\n      tree = null;\n    };\n\n    that.proc = function (s, z, r) {\n      var j; // temporary storage\n      var tindex; // temporary pointer\n      var e; // extra bits or operation\n      var b = 0; // bit buffer\n      var k = 0; // bits in bit buffer\n      var p = 0; // input data pointer\n      var n; // bytes available there\n      var q; // output window write pointer\n      var m; // bytes to end of window or read pointer\n      var f; // pointer to copy strings from\n\n      // copy input/output information to locals (UPDATE macro restores)\n      p = z.next_in_index;\n      n = z.avail_in;\n      b = s.bitb;\n      k = s.bitk;\n      q = s.write;\n      m = q < s.read ? s.read - q - 1 : s.end - q;\n\n      // process input and output based on current state\n      while (true) {\n        switch (mode) {\n          // waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n          case START: // x: set up for LEN\n            if (m >= 258 && n >= 10) {\n\n              s.bitb = b;\n              s.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              s.write = q;\n              r = inflate_fast(lbits, dbits, ltree, ltree_index, dtree, dtree_index, s, z);\n\n              p = z.next_in_index;\n              n = z.avail_in;\n              b = s.bitb;\n              k = s.bitk;\n              q = s.write;\n              m = q < s.read ? s.read - q - 1 : s.end - q;\n\n              if (r != Z_OK) {\n                mode = r == Z_STREAM_END ? WASH : BADCODE;\n                break;\n              }\n            }\n            need = lbits;\n            tree = ltree;\n            tree_index = ltree_index;\n\n            mode = LEN;\n          /* falls through */\n          case LEN: // i: get length/literal/eob next\n            j = need;\n\n            while (k < (j)) {\n              if (n !== 0)\n                r = Z_OK;\n              else {\n\n                s.bitb = b;\n                s.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                s.write = q;\n                return s.inflate_flush(z, r);\n              }\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n\n            tindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n            b >>>= (tree[tindex + 1]);\n            k -= (tree[tindex + 1]);\n\n            e = tree[tindex];\n\n            if (e === 0) { // literal\n              lit = tree[tindex + 2];\n              mode = LIT;\n              break;\n            }\n            if ((e & 16) !== 0) { // length\n              get = e & 15;\n              len = tree[tindex + 2];\n              mode = LENEXT;\n              break;\n            }\n            if ((e & 64) === 0) { // next table\n              need = e;\n              tree_index = tindex / 3 + tree[tindex + 2];\n              break;\n            }\n            if ((e & 32) !== 0) { // end of block\n              mode = WASH;\n              break;\n            }\n            mode = BADCODE; // invalid code\n            z.msg = \"invalid literal/length code\";\n            r = Z_DATA_ERROR;\n\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n            return s.inflate_flush(z, r);\n\n          case LENEXT: // i: getting length extra (have base)\n            j = get;\n\n            while (k < (j)) {\n              if (n !== 0)\n                r = Z_OK;\n              else {\n\n                s.bitb = b;\n                s.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                s.write = q;\n                return s.inflate_flush(z, r);\n              }\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n\n            len += (b & inflate_mask[j]);\n\n            b >>= j;\n            k -= j;\n\n            need = dbits;\n            tree = dtree;\n            tree_index = dtree_index;\n            mode = DIST;\n          /* falls through */\n          case DIST: // i: get distance next\n            j = need;\n\n            while (k < (j)) {\n              if (n !== 0)\n                r = Z_OK;\n              else {\n\n                s.bitb = b;\n                s.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                s.write = q;\n                return s.inflate_flush(z, r);\n              }\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n\n            tindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n            b >>= tree[tindex + 1];\n            k -= tree[tindex + 1];\n\n            e = (tree[tindex]);\n            if ((e & 16) !== 0) { // distance\n              get = e & 15;\n              dist = tree[tindex + 2];\n              mode = DISTEXT;\n              break;\n            }\n            if ((e & 64) === 0) { // next table\n              need = e;\n              tree_index = tindex / 3 + tree[tindex + 2];\n              break;\n            }\n            mode = BADCODE; // invalid code\n            z.msg = \"invalid distance code\";\n            r = Z_DATA_ERROR;\n\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n            return s.inflate_flush(z, r);\n\n          case DISTEXT: // i: getting distance extra\n            j = get;\n\n            while (k < (j)) {\n              if (n !== 0)\n                r = Z_OK;\n              else {\n\n                s.bitb = b;\n                s.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                s.write = q;\n                return s.inflate_flush(z, r);\n              }\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n\n            dist += (b & inflate_mask[j]);\n\n            b >>= j;\n            k -= j;\n\n            mode = COPY;\n          /* falls through */\n          case COPY: // o: copying bytes in window, waiting for space\n            f = q - dist;\n            while (f < 0) { // modulo window size-\"while\" instead\n              f += s.end; // of \"if\" handles invalid distances\n            }\n            while (len !== 0) {\n\n              if (m === 0) {\n                if (q == s.end && s.read !== 0) {\n                  q = 0;\n                  m = q < s.read ? s.read - q - 1 : s.end - q;\n                }\n                if (m === 0) {\n                  s.write = q;\n                  r = s.inflate_flush(z, r);\n                  q = s.write;\n                  m = q < s.read ? s.read - q - 1 : s.end - q;\n\n                  if (q == s.end && s.read !== 0) {\n                    q = 0;\n                    m = q < s.read ? s.read - q - 1 : s.end - q;\n                  }\n\n                  if (m === 0) {\n                    s.bitb = b;\n                    s.bitk = k;\n                    z.avail_in = n;\n                    z.total_in += p - z.next_in_index;\n                    z.next_in_index = p;\n                    s.write = q;\n                    return s.inflate_flush(z, r);\n                  }\n                }\n              }\n\n              s.window[q++] = s.window[f++];\n              m--;\n\n              if (f == s.end)\n                f = 0;\n              len--;\n            }\n            mode = START;\n            break;\n          case LIT: // o: got literal, waiting for output space\n            if (m === 0) {\n              if (q == s.end && s.read !== 0) {\n                q = 0;\n                m = q < s.read ? s.read - q - 1 : s.end - q;\n              }\n              if (m === 0) {\n                s.write = q;\n                r = s.inflate_flush(z, r);\n                q = s.write;\n                m = q < s.read ? s.read - q - 1 : s.end - q;\n\n                if (q == s.end && s.read !== 0) {\n                  q = 0;\n                  m = q < s.read ? s.read - q - 1 : s.end - q;\n                }\n                if (m === 0) {\n                  s.bitb = b;\n                  s.bitk = k;\n                  z.avail_in = n;\n                  z.total_in += p - z.next_in_index;\n                  z.next_in_index = p;\n                  s.write = q;\n                  return s.inflate_flush(z, r);\n                }\n              }\n            }\n            r = Z_OK;\n\n            s.window[q++] = /* (byte) */lit;\n            m--;\n\n            mode = START;\n            break;\n          case WASH: // o: got eob, possibly more output\n            if (k > 7) { // return unused byte, if any\n              k -= 8;\n              n++;\n              p--; // can always return one\n            }\n\n            s.write = q;\n            r = s.inflate_flush(z, r);\n            q = s.write;\n            m = q < s.read ? s.read - q - 1 : s.end - q;\n\n            if (s.read != s.write) {\n              s.bitb = b;\n              s.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              s.write = q;\n              return s.inflate_flush(z, r);\n            }\n            mode = END;\n          /* falls through */\n          case END:\n            r = Z_STREAM_END;\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n            return s.inflate_flush(z, r);\n\n          case BADCODE: // x: got error\n\n            r = Z_DATA_ERROR;\n\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n            return s.inflate_flush(z, r);\n\n          default:\n            r = Z_STREAM_ERROR;\n\n            s.bitb = b;\n            s.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            s.write = q;\n            return s.inflate_flush(z, r);\n        }\n      }\n    };\n\n    that.free = function () {\n      // ZFREE(z, c);\n    };\n\n  }\n\n  // InfBlocks\n\n  // Table for deflate from PKZIP's appnote.txt.\n  var border = [ // Order of the bit length code lengths\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n  var TYPE = 0; // get type bits (3, including end bit)\n  var LENS = 1; // get lengths for stored\n  var STORED = 2;// processing stored block\n  var TABLE = 3; // get table lengths\n  var BTREE = 4; // get bit lengths tree for a dynamic\n  // block\n  var DTREE = 5; // get length, distance trees for a\n  // dynamic block\n  var CODES = 6; // processing fixed or dynamic block\n  var DRY = 7; // output remaining window bytes\n  var DONELOCKS = 8; // finished last block, done\n  var BADBLOCKS = 9; // ot a data error--stuck here\n\n  function InfBlocks(z, w) {\n    var that = this;\n\n    var mode = TYPE; // current inflate_block mode\n\n    var left = 0; // if STORED, bytes left to copy\n\n    var table = 0; // table lengths (14 bits)\n    var index = 0; // index into blens (or border)\n    var blens; // bit lengths of codes\n    var bb = [0]; // bit length tree depth\n    var tb = [0]; // bit length decoding tree\n\n    var codes = new InfCodes(); // if CODES, current state\n\n    var last = 0; // true if this block is the last block\n\n    var hufts = new Int32Array(MANY * 3); // single malloc for tree space\n    var check = 0; // check on output\n    var inftree = new InfTree();\n\n    that.bitk = 0; // bits in bit buffer\n    that.bitb = 0; // bit buffer\n    that.window = new Uint8Array(w); // sliding window\n    that.end = w; // one byte after sliding window\n    that.read = 0; // window read pointer\n    that.write = 0; // window write pointer\n\n    that.reset = function (z, c) {\n      if (c)\n        c[0] = check;\n      // if (mode == BTREE || mode == DTREE) {\n      // }\n      if (mode == CODES) {\n        codes.free(z);\n      }\n      mode = TYPE;\n      that.bitk = 0;\n      that.bitb = 0;\n      that.read = that.write = 0;\n    };\n\n    that.reset(z, null);\n\n    // copy as much as possible from the sliding window to the output area\n    that.inflate_flush = function (z, r) {\n      var n;\n      var p;\n      var q;\n\n      // local copies of source and destination pointers\n      p = z.next_out_index;\n      q = that.read;\n\n      // compute number of bytes to copy as far as end of window\n      n = /* (int) */((q <= that.write ? that.write : that.end) - q);\n      if (n > z.avail_out)\n        n = z.avail_out;\n      if (n !== 0 && r == Z_BUF_ERROR)\n        r = Z_OK;\n\n      // update counters\n      z.avail_out -= n;\n      z.total_out += n;\n\n      // copy as far as end of window\n      z.next_out.set(that.window.subarray(q, q + n), p);\n      p += n;\n      q += n;\n\n      // see if more to copy at beginning of window\n      if (q == that.end) {\n        // wrap pointers\n        q = 0;\n        if (that.write == that.end)\n          that.write = 0;\n\n        // compute bytes to copy\n        n = that.write - q;\n        if (n > z.avail_out)\n          n = z.avail_out;\n        if (n !== 0 && r == Z_BUF_ERROR)\n          r = Z_OK;\n\n        // update counters\n        z.avail_out -= n;\n        z.total_out += n;\n\n        // copy\n        z.next_out.set(that.window.subarray(q, q + n), p);\n        p += n;\n        q += n;\n      }\n\n      // update pointers\n      z.next_out_index = p;\n      that.read = q;\n\n      // done\n      return r;\n    };\n\n    that.proc = function (z, r) {\n      var t; // temporary storage\n      var b; // bit buffer\n      var k; // bits in bit buffer\n      var p; // input data pointer\n      var n; // bytes available there\n      var q; // output window write pointer\n      var m; // bytes to end of window or read pointer\n\n      var i;\n\n      // copy input/output information to locals (UPDATE macro restores)\n      // {\n      p = z.next_in_index;\n      n = z.avail_in;\n      b = that.bitb;\n      k = that.bitk;\n      // }\n      // {\n      q = that.write;\n      m = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n      // }\n\n      // process input based on current state\n      // DEBUG dtree\n      while (true) {\n        switch (mode) {\n          case TYPE:\n\n            while (k < (3)) {\n              if (n !== 0) {\n                r = Z_OK;\n              } else {\n                that.bitb = b;\n                that.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                that.write = q;\n                return that.inflate_flush(z, r);\n              }\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n            t = /* (int) */(b & 7);\n            last = t & 1;\n\n            switch (t >>> 1) {\n              case 0: // stored\n                // {\n                b >>>= (3);\n                k -= (3);\n                // }\n                t = k & 7; // go to byte boundary\n\n                // {\n                b >>>= (t);\n                k -= (t);\n                // }\n                mode = LENS; // get length of stored block\n                break;\n              case 1: // fixed\n                // {\n                var bl = []; // new Array(1);\n                var bd = []; // new Array(1);\n                var tl = [[]]; // new Array(1);\n                var td = [[]]; // new Array(1);\n\n                InfTree.inflate_trees_fixed(bl, bd, tl, td);\n                codes.init(bl[0], bd[0], tl[0], 0, td[0], 0);\n                // }\n\n                // {\n                b >>>= (3);\n                k -= (3);\n                // }\n\n                mode = CODES;\n                break;\n              case 2: // dynamic\n\n                // {\n                b >>>= (3);\n                k -= (3);\n                // }\n\n                mode = TABLE;\n                break;\n              case 3: // illegal\n\n                // {\n                b >>>= (3);\n                k -= (3);\n                // }\n                mode = BADBLOCKS;\n                z.msg = \"invalid block type\";\n                r = Z_DATA_ERROR;\n\n                that.bitb = b;\n                that.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                that.write = q;\n                return that.inflate_flush(z, r);\n            }\n            break;\n          case LENS:\n\n            while (k < (32)) {\n              if (n !== 0) {\n                r = Z_OK;\n              } else {\n                that.bitb = b;\n                that.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                that.write = q;\n                return that.inflate_flush(z, r);\n              }\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n\n            if ((((~b) >>> 16) & 0xffff) != (b & 0xffff)) {\n              mode = BADBLOCKS;\n              z.msg = \"invalid stored block lengths\";\n              r = Z_DATA_ERROR;\n\n              that.bitb = b;\n              that.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              that.write = q;\n              return that.inflate_flush(z, r);\n            }\n            left = (b & 0xffff);\n            b = k = 0; // dump bits\n            mode = left !== 0 ? STORED : (last !== 0 ? DRY : TYPE);\n            break;\n          case STORED:\n            if (n === 0) {\n              that.bitb = b;\n              that.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              that.write = q;\n              return that.inflate_flush(z, r);\n            }\n\n            if (m === 0) {\n              if (q == that.end && that.read !== 0) {\n                q = 0;\n                m = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n              }\n              if (m === 0) {\n                that.write = q;\n                r = that.inflate_flush(z, r);\n                q = that.write;\n                m = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n                if (q == that.end && that.read !== 0) {\n                  q = 0;\n                  m = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n                }\n                if (m === 0) {\n                  that.bitb = b;\n                  that.bitk = k;\n                  z.avail_in = n;\n                  z.total_in += p - z.next_in_index;\n                  z.next_in_index = p;\n                  that.write = q;\n                  return that.inflate_flush(z, r);\n                }\n              }\n            }\n            r = Z_OK;\n\n            t = left;\n            if (t > n)\n              t = n;\n            if (t > m)\n              t = m;\n            that.window.set(z.read_buf(p, t), q);\n            p += t;\n            n -= t;\n            q += t;\n            m -= t;\n            if ((left -= t) !== 0)\n              break;\n            mode = last !== 0 ? DRY : TYPE;\n            break;\n          case TABLE:\n\n            while (k < (14)) {\n              if (n !== 0) {\n                r = Z_OK;\n              } else {\n                that.bitb = b;\n                that.bitk = k;\n                z.avail_in = n;\n                z.total_in += p - z.next_in_index;\n                z.next_in_index = p;\n                that.write = q;\n                return that.inflate_flush(z, r);\n              }\n\n              n--;\n              b |= (z.read_byte(p++) & 0xff) << k;\n              k += 8;\n            }\n\n            table = t = (b & 0x3fff);\n            if ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29) {\n              mode = BADBLOCKS;\n              z.msg = \"too many length or distance symbols\";\n              r = Z_DATA_ERROR;\n\n              that.bitb = b;\n              that.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              that.write = q;\n              return that.inflate_flush(z, r);\n            }\n            t = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n            if (!blens || blens.length < t) {\n              blens = []; // new Array(t);\n            } else {\n              for (i = 0; i < t; i++) {\n                blens[i] = 0;\n              }\n            }\n\n            // {\n            b >>>= (14);\n            k -= (14);\n            // }\n\n            index = 0;\n            mode = BTREE;\n          /* falls through */\n          case BTREE:\n            while (index < 4 + (table >>> 10)) {\n              while (k < (3)) {\n                if (n !== 0) {\n                  r = Z_OK;\n                } else {\n                  that.bitb = b;\n                  that.bitk = k;\n                  z.avail_in = n;\n                  z.total_in += p - z.next_in_index;\n                  z.next_in_index = p;\n                  that.write = q;\n                  return that.inflate_flush(z, r);\n                }\n                n--;\n                b |= (z.read_byte(p++) & 0xff) << k;\n                k += 8;\n              }\n\n              blens[border[index++]] = b & 7;\n\n              // {\n              b >>>= (3);\n              k -= (3);\n              // }\n            }\n\n            while (index < 19) {\n              blens[border[index++]] = 0;\n            }\n\n            bb[0] = 7;\n            t = inftree.inflate_trees_bits(blens, bb, tb, hufts, z);\n            if (t != Z_OK) {\n              r = t;\n              if (r == Z_DATA_ERROR) {\n                blens = null;\n                mode = BADBLOCKS;\n              }\n\n              that.bitb = b;\n              that.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              that.write = q;\n              return that.inflate_flush(z, r);\n            }\n\n            index = 0;\n            mode = DTREE;\n          /* falls through */\n          case DTREE:\n            while (true) {\n              t = table;\n              if (index >= 258 + (t & 0x1f) + ((t >> 5) & 0x1f)) {\n                break;\n              }\n\n              var j, c;\n\n              t = bb[0];\n\n              while (k < (t)) {\n                if (n !== 0) {\n                  r = Z_OK;\n                } else {\n                  that.bitb = b;\n                  that.bitk = k;\n                  z.avail_in = n;\n                  z.total_in += p - z.next_in_index;\n                  z.next_in_index = p;\n                  that.write = q;\n                  return that.inflate_flush(z, r);\n                }\n                n--;\n                b |= (z.read_byte(p++) & 0xff) << k;\n                k += 8;\n              }\n\n              // if (tb[0] == -1) {\n              // System.err.println(\"null...\");\n              // }\n\n              t = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 1];\n              c = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 2];\n\n              if (c < 16) {\n                b >>>= (t);\n                k -= (t);\n                blens[index++] = c;\n              } else { // c == 16..18\n                i = c == 18 ? 7 : c - 14;\n                j = c == 18 ? 11 : 3;\n\n                while (k < (t + i)) {\n                  if (n !== 0) {\n                    r = Z_OK;\n                  } else {\n                    that.bitb = b;\n                    that.bitk = k;\n                    z.avail_in = n;\n                    z.total_in += p - z.next_in_index;\n                    z.next_in_index = p;\n                    that.write = q;\n                    return that.inflate_flush(z, r);\n                  }\n                  n--;\n                  b |= (z.read_byte(p++) & 0xff) << k;\n                  k += 8;\n                }\n\n                b >>>= (t);\n                k -= (t);\n\n                j += (b & inflate_mask[i]);\n\n                b >>>= (i);\n                k -= (i);\n\n                i = index;\n                t = table;\n                if (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) || (c == 16 && i < 1)) {\n                  blens = null;\n                  mode = BADBLOCKS;\n                  z.msg = \"invalid bit length repeat\";\n                  r = Z_DATA_ERROR;\n\n                  that.bitb = b;\n                  that.bitk = k;\n                  z.avail_in = n;\n                  z.total_in += p - z.next_in_index;\n                  z.next_in_index = p;\n                  that.write = q;\n                  return that.inflate_flush(z, r);\n                }\n\n                c = c == 16 ? blens[i - 1] : 0;\n                do {\n                  blens[i++] = c;\n                } while (--j !== 0);\n                index = i;\n              }\n            }\n\n            tb[0] = -1;\n            // {\n            var bl_ = []; // new Array(1);\n            var bd_ = []; // new Array(1);\n            var tl_ = []; // new Array(1);\n            var td_ = []; // new Array(1);\n            bl_[0] = 9; // must be <= 9 for lookahead assumptions\n            bd_[0] = 6; // must be <= 9 for lookahead assumptions\n\n            t = table;\n            t = inftree.inflate_trees_dynamic(257 + (t & 0x1f), 1 + ((t >> 5) & 0x1f), blens, bl_, bd_, tl_, td_, hufts, z);\n\n            if (t != Z_OK) {\n              if (t == Z_DATA_ERROR) {\n                blens = null;\n                mode = BADBLOCKS;\n              }\n              r = t;\n\n              that.bitb = b;\n              that.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              that.write = q;\n              return that.inflate_flush(z, r);\n            }\n            codes.init(bl_[0], bd_[0], hufts, tl_[0], hufts, td_[0]);\n            // }\n            mode = CODES;\n          /* falls through */\n          case CODES:\n            that.bitb = b;\n            that.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            that.write = q;\n\n            if ((r = codes.proc(that, z, r)) != Z_STREAM_END) {\n              return that.inflate_flush(z, r);\n            }\n            r = Z_OK;\n            codes.free(z);\n\n            p = z.next_in_index;\n            n = z.avail_in;\n            b = that.bitb;\n            k = that.bitk;\n            q = that.write;\n            m = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\n            if (last === 0) {\n              mode = TYPE;\n              break;\n            }\n            mode = DRY;\n          /* falls through */\n          case DRY:\n            that.write = q;\n            r = that.inflate_flush(z, r);\n            q = that.write;\n            m = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n            if (that.read != that.write) {\n              that.bitb = b;\n              that.bitk = k;\n              z.avail_in = n;\n              z.total_in += p - z.next_in_index;\n              z.next_in_index = p;\n              that.write = q;\n              return that.inflate_flush(z, r);\n            }\n            mode = DONELOCKS;\n          /* falls through */\n          case DONELOCKS:\n            r = Z_STREAM_END;\n\n            that.bitb = b;\n            that.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            that.write = q;\n            return that.inflate_flush(z, r);\n          case BADBLOCKS:\n            r = Z_DATA_ERROR;\n\n            that.bitb = b;\n            that.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            that.write = q;\n            return that.inflate_flush(z, r);\n\n          default:\n            r = Z_STREAM_ERROR;\n\n            that.bitb = b;\n            that.bitk = k;\n            z.avail_in = n;\n            z.total_in += p - z.next_in_index;\n            z.next_in_index = p;\n            that.write = q;\n            return that.inflate_flush(z, r);\n        }\n      }\n    };\n\n    that.free = function (z) {\n      that.reset(z, null);\n      that.window = null;\n      hufts = null;\n      // ZFREE(z, s);\n    };\n\n    that.set_dictionary = function (d, start, n) {\n      that.window.set(d.subarray(start, start + n), 0);\n      that.read = that.write = n;\n    };\n\n    // Returns true if inflate is currently at the end of a block generated\n    // by Z_SYNC_FLUSH or Z_FULL_FLUSH.\n    that.sync_point = function () {\n      return mode == LENS ? 1 : 0;\n    };\n\n  }\n\n  // Inflate\n\n  // preset dictionary flag in zlib header\n  var PRESET_DICT = 0x20;\n\n  var Z_DEFLATED = 8;\n\n  var METHOD = 0; // waiting for method byte\n  var FLAG = 1; // waiting for flag byte\n  var DICT4 = 2; // four dictionary check bytes to go\n  var DICT3 = 3; // three dictionary check bytes to go\n  var DICT2 = 4; // two dictionary check bytes to go\n  var DICT1 = 5; // one dictionary check byte to go\n  var DICT0 = 6; // waiting for inflateSetDictionary\n  var BLOCKS = 7; // decompressing blocks\n  var DONE = 12; // finished check, done\n  var BAD = 13; // got an error--stay here\n\n  var mark = [0, 0, 0xff, 0xff];\n\n  function Inflate() {\n    var that = this;\n\n    that.mode = 0; // current inflate mode\n\n    // mode dependent information\n    that.method = 0; // if FLAGS, method byte\n\n    // if CHECK, check values to compare\n    that.was = [0]; // new Array(1); // computed check value\n    that.need = 0; // stream check value\n\n    // if BAD, inflateSync's marker bytes count\n    that.marker = 0;\n\n    // mode independent information\n    that.wbits = 0; // log2(window size) (8..15, defaults to 15)\n\n    // this.blocks; // current inflate_blocks state\n\n    function inflateReset(z) {\n      if (!z || !z.istate)\n        return Z_STREAM_ERROR;\n\n      z.total_in = z.total_out = 0;\n      z.msg = null;\n      z.istate.mode = BLOCKS;\n      z.istate.blocks.reset(z, null);\n      return Z_OK;\n    }\n\n    that.inflateEnd = function (z) {\n      if (that.blocks)\n        that.blocks.free(z);\n      that.blocks = null;\n      // ZFREE(z, z->state);\n      return Z_OK;\n    };\n\n    that.inflateInit = function (z, w) {\n      z.msg = null;\n      that.blocks = null;\n\n      // set window size\n      if (w < 8 || w > 15) {\n        that.inflateEnd(z);\n        return Z_STREAM_ERROR;\n      }\n      that.wbits = w;\n\n      z.istate.blocks = new InfBlocks(z, 1 << w);\n\n      // reset state\n      inflateReset(z);\n      return Z_OK;\n    };\n\n    that.inflate = function (z, f) {\n      var r;\n      var b;\n\n      if (!z || !z.istate || !z.next_in)\n        return Z_STREAM_ERROR;\n      f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n      r = Z_BUF_ERROR;\n      while (true) {\n        // System.out.println(\"mode: \"+z.istate.mode);\n        switch (z.istate.mode) {\n          case METHOD:\n\n            if (z.avail_in === 0)\n              return r;\n            r = f;\n\n            z.avail_in--;\n            z.total_in++;\n            if (((z.istate.method = z.read_byte(z.next_in_index++)) & 0xf) != Z_DEFLATED) {\n              z.istate.mode = BAD;\n              z.msg = \"unknown compression method\";\n              z.istate.marker = 5; // can't try inflateSync\n              break;\n            }\n            if ((z.istate.method >> 4) + 8 > z.istate.wbits) {\n              z.istate.mode = BAD;\n              z.msg = \"invalid window size\";\n              z.istate.marker = 5; // can't try inflateSync\n              break;\n            }\n            z.istate.mode = FLAG;\n          /* falls through */\n          case FLAG:\n\n            if (z.avail_in === 0)\n              return r;\n            r = f;\n\n            z.avail_in--;\n            z.total_in++;\n            b = (z.read_byte(z.next_in_index++)) & 0xff;\n\n            if ((((z.istate.method << 8) + b) % 31) !== 0) {\n              z.istate.mode = BAD;\n              z.msg = \"incorrect header check\";\n              z.istate.marker = 5; // can't try inflateSync\n              break;\n            }\n\n            if ((b & PRESET_DICT) === 0) {\n              z.istate.mode = BLOCKS;\n              break;\n            }\n            z.istate.mode = DICT4;\n          /* falls through */\n          case DICT4:\n\n            if (z.avail_in === 0)\n              return r;\n            r = f;\n\n            z.avail_in--;\n            z.total_in++;\n            z.istate.need = ((z.read_byte(z.next_in_index++) & 0xff) << 24) & 0xff000000;\n            z.istate.mode = DICT3;\n          /* falls through */\n          case DICT3:\n\n            if (z.avail_in === 0)\n              return r;\n            r = f;\n\n            z.avail_in--;\n            z.total_in++;\n            z.istate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 16) & 0xff0000;\n            z.istate.mode = DICT2;\n          /* falls through */\n          case DICT2:\n\n            if (z.avail_in === 0)\n              return r;\n            r = f;\n\n            z.avail_in--;\n            z.total_in++;\n            z.istate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 8) & 0xff00;\n            z.istate.mode = DICT1;\n          /* falls through */\n          case DICT1:\n\n            if (z.avail_in === 0)\n              return r;\n            r = f;\n\n            z.avail_in--;\n            z.total_in++;\n            z.istate.need += (z.read_byte(z.next_in_index++) & 0xff);\n            z.istate.mode = DICT0;\n            return Z_NEED_DICT;\n          case DICT0:\n            z.istate.mode = BAD;\n            z.msg = \"need dictionary\";\n            z.istate.marker = 0; // can try inflateSync\n            return Z_STREAM_ERROR;\n          case BLOCKS:\n\n            r = z.istate.blocks.proc(z, r);\n            if (r == Z_DATA_ERROR) {\n              z.istate.mode = BAD;\n              z.istate.marker = 0; // can try inflateSync\n              break;\n            }\n            if (r == Z_OK) {\n              r = f;\n            }\n            if (r != Z_STREAM_END) {\n              return r;\n            }\n            r = f;\n            z.istate.blocks.reset(z, z.istate.was);\n            z.istate.mode = DONE;\n          /* falls through */\n          case DONE:\n            return Z_STREAM_END;\n          case BAD:\n            return Z_DATA_ERROR;\n          default:\n            return Z_STREAM_ERROR;\n        }\n      }\n    };\n\n    that.inflateSetDictionary = function (z, dictionary, dictLength) {\n      var index = 0;\n      var length = dictLength;\n      if (!z || !z.istate || z.istate.mode != DICT0)\n        return Z_STREAM_ERROR;\n\n      if (length >= (1 << z.istate.wbits)) {\n        length = (1 << z.istate.wbits) - 1;\n        index = dictLength - length;\n      }\n      z.istate.blocks.set_dictionary(dictionary, index, length);\n      z.istate.mode = BLOCKS;\n      return Z_OK;\n    };\n\n    that.inflateSync = function (z) {\n      var n; // number of bytes to look at\n      var p; // pointer to bytes\n      var m; // number of marker bytes found in a row\n      var r, w; // temporaries to save total_in and total_out\n\n      // set up\n      if (!z || !z.istate)\n        return Z_STREAM_ERROR;\n      if (z.istate.mode != BAD) {\n        z.istate.mode = BAD;\n        z.istate.marker = 0;\n      }\n      if ((n = z.avail_in) === 0)\n        return Z_BUF_ERROR;\n      p = z.next_in_index;\n      m = z.istate.marker;\n\n      // search\n      while (n !== 0 && m < 4) {\n        if (z.read_byte(p) == mark[m]) {\n          m++;\n        } else if (z.read_byte(p) !== 0) {\n          m = 0;\n        } else {\n          m = 4 - m;\n        }\n        p++;\n        n--;\n      }\n\n      // restore\n      z.total_in += p - z.next_in_index;\n      z.next_in_index = p;\n      z.avail_in = n;\n      z.istate.marker = m;\n\n      // return no joy or set up to restart on a new block\n      if (m != 4) {\n        return Z_DATA_ERROR;\n      }\n      r = z.total_in;\n      w = z.total_out;\n      inflateReset(z);\n      z.total_in = r;\n      z.total_out = w;\n      z.istate.mode = BLOCKS;\n      return Z_OK;\n    };\n\n    // Returns true if inflate is currently at the end of a block generated\n    // by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n    // implementation to provide an additional safety check. PPP uses\n    // Z_SYNC_FLUSH\n    // but removes the length bytes of the resulting empty stored block. When\n    // decompressing, PPP checks that at the end of input packet, inflate is\n    // waiting for these length bytes.\n    that.inflateSyncPoint = function (z) {\n      if (!z || !z.istate || !z.istate.blocks)\n        return Z_STREAM_ERROR;\n      return z.istate.blocks.sync_point();\n    };\n  }\n\n  // ZStream\n\n  function ZStream() {\n  }\n\n  ZStream.prototype = {\n    inflateInit: function (bits) {\n      var that = this;\n      that.istate = new Inflate();\n      if (!bits)\n        bits = MAX_BITS;\n      return that.istate.inflateInit(that, bits);\n    },\n\n    inflate: function (f) {\n      var that = this;\n      if (!that.istate)\n        return Z_STREAM_ERROR;\n      return that.istate.inflate(that, f);\n    },\n\n    inflateEnd: function () {\n      var that = this;\n      if (!that.istate)\n        return Z_STREAM_ERROR;\n      var ret = that.istate.inflateEnd(that);\n      that.istate = null;\n      return ret;\n    },\n\n    inflateSync: function () {\n      var that = this;\n      if (!that.istate)\n        return Z_STREAM_ERROR;\n      return that.istate.inflateSync(that);\n    },\n    inflateSetDictionary: function (dictionary, dictLength) {\n      var that = this;\n      if (!that.istate)\n        return Z_STREAM_ERROR;\n      return that.istate.inflateSetDictionary(that, dictionary, dictLength);\n    },\n    read_byte: function (start) {\n      var that = this;\n      return that.next_in.subarray(start, start + 1)[0];\n    },\n    read_buf: function (start, size) {\n      var that = this;\n      return that.next_in.subarray(start, start + size);\n    }\n  };\n\n  // Inflater\n\n  function Inflater() {\n    var that = this;\n    var z = new ZStream();\n    var bufsize = 512;\n    var flush = Z_NO_FLUSH;\n    var buf = new Uint8Array(bufsize);\n    var nomoreinput = false;\n\n    z.inflateInit();\n    z.next_out = buf;\n\n    that.append = function (data, onprogress) {\n      var err, buffers = [], lastIndex = 0, bufferIndex = 0, bufferSize = 0, array;\n      if (data.length === 0)\n        return;\n      z.next_in_index = 0;\n      z.next_in = data;\n      z.avail_in = data.length;\n      do {\n        z.next_out_index = 0;\n        z.avail_out = bufsize;\n        if ((z.avail_in === 0) && (!nomoreinput)) { // if buffer is empty and more input is available, refill it\n          z.next_in_index = 0;\n          nomoreinput = true;\n        }\n        err = z.inflate(flush);\n        if (nomoreinput && (err === Z_BUF_ERROR)) {\n          if (z.avail_in !== 0)\n            throw new Error(\"inflating: bad input\");\n        } else if (err !== Z_OK && err !== Z_STREAM_END)\n          throw new Error(\"inflating: \" + z.msg);\n        if ((nomoreinput || err === Z_STREAM_END) && (z.avail_in === data.length))\n          throw new Error(\"inflating: bad input\");\n        if (z.next_out_index)\n          if (z.next_out_index === bufsize)\n            buffers.push(new Uint8Array(buf));\n          else\n            buffers.push(new Uint8Array(buf.subarray(0, z.next_out_index)));\n        bufferSize += z.next_out_index;\n        if (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n          onprogress(z.next_in_index);\n          lastIndex = z.next_in_index;\n        }\n      } while (z.avail_in > 0 || z.avail_out === 0);\n      array = new Uint8Array(bufferSize);\n      buffers.forEach(function (chunk) {\n        array.set(chunk, bufferIndex);\n        bufferIndex += chunk.length;\n      });\n      return array;\n    };\n    that.flush = function () {\n      z.inflateEnd();\n    };\n  }\n\n  // 'zip' may not be defined in z-worker and some tests\n  var env = global.zip || global;\n  env.Inflater = env._jzlib_Inflater = Inflater;\n})(zipExport);\n\n/**\n * This is one of several modules by which deflation/compression behaviors\n * could be used. Other modules defined such behaviors for web worker\n * approaches, for example. This approach was used for the AMD module\n * because the symbol mapping ported well to a global/exports closure.\n *\n * After this closure is defined and invoked, \"global\" references will have\n * been assigned to \"exports\" from within the closure, including the\n * Inflater object.\n *\n * In addition to the standard BSD license from the original project, this\n * module also contains the following hat-tip, reproduced here out of\n * respect for the original wizards:\n *\n *   This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n *   JZlib is based on zlib-1.1.3, so all credit should go authors\n *   Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n *   and contributors of zlib.\n *\n * @module deflate\n */\n(function (global) {\n  \"use strict\";\n\n  // Global\n\n  var MAX_BITS = 15;\n  var D_CODES = 30;\n  var BL_CODES = 19;\n\n  var LENGTH_CODES = 29;\n  var LITERALS = 256;\n  var L_CODES = (LITERALS + 1 + LENGTH_CODES);\n  var HEAP_SIZE = (2 * L_CODES + 1);\n\n  var END_BLOCK = 256;\n\n  // Bit length codes must not exceed MAX_BL_BITS bits\n  var MAX_BL_BITS = 7;\n\n  // repeat previous bit length 3-6 times (2 bits of repeat count)\n  var REP_3_6 = 16;\n\n  // repeat a zero length 3-10 times (3 bits of repeat count)\n  var REPZ_3_10 = 17;\n\n  // repeat a zero length 11-138 times (7 bits of repeat count)\n  var REPZ_11_138 = 18;\n\n  // The lengths of the bit length codes are sent in order of decreasing\n  // probability, to avoid transmitting the lengths for unused bit\n  // length codes.\n\n  var Buf_size = 8 * 2;\n\n  // JZlib version : \"1.0.2\"\n  var Z_DEFAULT_COMPRESSION = -1;\n\n  // compression strategy\n  var Z_FILTERED = 1;\n  var Z_HUFFMAN_ONLY = 2;\n  var Z_DEFAULT_STRATEGY = 0;\n\n  var Z_NO_FLUSH = 0;\n  var Z_PARTIAL_FLUSH = 1;\n  var Z_FULL_FLUSH = 3;\n  var Z_FINISH = 4;\n\n  var Z_OK = 0;\n  var Z_STREAM_END = 1;\n  var Z_NEED_DICT = 2;\n  var Z_STREAM_ERROR = -2;\n  var Z_DATA_ERROR = -3;\n  var Z_BUF_ERROR = -5;\n\n  // Tree\n\n  // see definition of array dist_code below\n  var _dist_code = [0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n    10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n    13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n    14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\n    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19,\n    20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,\n    26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,\n    27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,\n    28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29,\n    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,\n    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29\n  ];\n\n  function Tree() {\n    var that = this;\n\n    // dyn_tree; // the dynamic tree\n    // max_code; // largest code with non zero frequency\n    // stat_desc; // the corresponding static tree\n\n    // Compute the optimal bit lengths for a tree and update the total bit\n    // length\n    // for the current block.\n    // IN assertion: the fields freq and dad are set, heap[heap_max] and\n    // above are the tree nodes sorted by increasing frequency.\n    // OUT assertions: the field len is set to the optimal bit length, the\n    // array bl_count contains the frequencies for each bit length.\n    // The length opt_len is updated; static_len is also updated if stree is\n    // not null.\n    function gen_bitlen(s) {\n      var tree = that.dyn_tree;\n      var stree = that.stat_desc.static_tree;\n      var extra = that.stat_desc.extra_bits;\n      var base = that.stat_desc.extra_base;\n      var max_length = that.stat_desc.max_length;\n      var h; // heap index\n      var n, m; // iterate over the tree elements\n      var bits; // bit length\n      var xbits; // extra bits\n      var f; // frequency\n      var overflow = 0; // number of elements with bit length too large\n\n      for (bits = 0; bits <= MAX_BITS; bits++)\n        s.bl_count[bits] = 0;\n\n      // In a first pass, compute the optimal bit lengths (which may\n      // overflow in the case of the bit length tree).\n      tree[s.heap[s.heap_max] * 2 + 1] = 0; // root of the heap\n\n      for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n        n = s.heap[h];\n        bits = tree[tree[n * 2 + 1] * 2 + 1] + 1;\n        if (bits > max_length) {\n          bits = max_length;\n          overflow++;\n        }\n        tree[n * 2 + 1] = bits;\n        // We overwrite tree[n*2+1] which is no longer needed\n\n        if (n > that.max_code)\n          continue; // not a leaf node\n\n        s.bl_count[bits]++;\n        xbits = 0;\n        if (n >= base)\n          xbits = extra[n - base];\n        f = tree[n * 2];\n        s.opt_len += f * (bits + xbits);\n        if (stree)\n          s.static_len += f * (stree[n * 2 + 1] + xbits);\n      }\n      if (overflow === 0)\n        return;\n\n      // This happens for example on obj2 and pic of the Calgary corpus\n      // Find the first bit length which could increase:\n      do {\n        bits = max_length - 1;\n        while (s.bl_count[bits] === 0)\n          bits--;\n        s.bl_count[bits]--; // move one leaf down the tree\n        s.bl_count[bits + 1] += 2; // move one overflow item as its brother\n        s.bl_count[max_length]--;\n        // The brother of the overflow item also moves one step up,\n        // but this does not affect bl_count[max_length]\n        overflow -= 2;\n      } while (overflow > 0);\n\n      for (bits = max_length; bits !== 0; bits--) {\n        n = s.bl_count[bits];\n        while (n !== 0) {\n          m = s.heap[--h];\n          if (m > that.max_code)\n            continue;\n          if (tree[m * 2 + 1] != bits) {\n            s.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2];\n            tree[m * 2 + 1] = bits;\n          }\n          n--;\n        }\n      }\n    }\n\n    // Reverse the first len bits of a code, using straightforward code (a\n    // faster\n    // method would use a table)\n    // IN assertion: 1 <= len <= 15\n    function bi_reverse(code, // the value to invert\n      len // its bit length\n    ) {\n      var res = 0;\n      do {\n        res |= code & 1;\n        code >>>= 1;\n        res <<= 1;\n      } while (--len > 0);\n      return res >>> 1;\n    }\n\n    // Generate the codes for a given tree and bit counts (which need not be\n    // optimal).\n    // IN assertion: the array bl_count contains the bit length statistics for\n    // the given tree and the field len is set for all tree elements.\n    // OUT assertion: the field code is set for all tree elements of non\n    // zero code length.\n    function gen_codes(tree, // the tree to decorate\n      max_code, // largest code with non zero frequency\n      bl_count // number of codes at each bit length\n    ) {\n      var next_code = []; // next code value for each\n      // bit length\n      var code = 0; // running code value\n      var bits; // bit index\n      var n; // code index\n      var len;\n\n      // The distribution counts are first used to generate the code values\n      // without bit reversal.\n      for (bits = 1; bits <= MAX_BITS; bits++) {\n        next_code[bits] = code = ((code + bl_count[bits - 1]) << 1);\n      }\n\n      // Check that the bit counts in bl_count are consistent. The last code\n      // must be all ones.\n      // Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n      // \"inconsistent bit counts\");\n      // Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n      for (n = 0; n <= max_code; n++) {\n        len = tree[n * 2 + 1];\n        if (len === 0)\n          continue;\n        // Now reverse the bits\n        tree[n * 2] = bi_reverse(next_code[len]++, len);\n      }\n    }\n\n    // Construct one Huffman tree and assigns the code bit strings and lengths.\n    // Update the total bit length for the current block.\n    // IN assertion: the field freq is set for all tree elements.\n    // OUT assertions: the fields len and code are set to the optimal bit length\n    // and corresponding code. The length opt_len is updated; static_len is\n    // also updated if stree is not null. The field max_code is set.\n    that.build_tree = function (s) {\n      var tree = that.dyn_tree;\n      var stree = that.stat_desc.static_tree;\n      var elems = that.stat_desc.elems;\n      var n, m; // iterate over heap elements\n      var max_code = -1; // largest code with non zero frequency\n      var node; // new node being created\n\n      // Construct the initial heap, with least frequent element in\n      // heap[1]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n      // heap[0] is not used.\n      s.heap_len = 0;\n      s.heap_max = HEAP_SIZE;\n\n      for (n = 0; n < elems; n++) {\n        if (tree[n * 2] !== 0) {\n          s.heap[++s.heap_len] = max_code = n;\n          s.depth[n] = 0;\n        } else {\n          tree[n * 2 + 1] = 0;\n        }\n      }\n\n      // The pkzip format requires that at least one distance code exists,\n      // and that at least one bit should be sent even if there is only one\n      // possible code. So to avoid special checks later on we force at least\n      // two codes of non zero frequency.\n      while (s.heap_len < 2) {\n        node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n        tree[node * 2] = 1;\n        s.depth[node] = 0;\n        s.opt_len--;\n        if (stree)\n          s.static_len -= stree[node * 2 + 1];\n        // node is 0 or 1 so it does not have extra bits\n      }\n      that.max_code = max_code;\n\n      // The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n      // establish sub-heaps of increasing lengths:\n\n      for (n = Math.floor(s.heap_len / 2); n >= 1; n--)\n        s.pqdownheap(tree, n);\n\n      // Construct the Huffman tree by repeatedly combining the least two\n      // frequent nodes.\n\n      node = elems; // next internal node of the tree\n      do {\n        // n = node of least frequency\n        n = s.heap[1];\n        s.heap[1] = s.heap[s.heap_len--];\n        s.pqdownheap(tree, 1);\n        m = s.heap[1]; // m = node of next least frequency\n\n        s.heap[--s.heap_max] = n; // keep the nodes sorted by frequency\n        s.heap[--s.heap_max] = m;\n\n        // Create a new node father of n and m\n        tree[node * 2] = (tree[n * 2] + tree[m * 2]);\n        s.depth[node] = Math.max(s.depth[n], s.depth[m]) + 1;\n        tree[n * 2 + 1] = tree[m * 2 + 1] = node;\n\n        // and insert the new node in the heap\n        s.heap[1] = node++;\n        s.pqdownheap(tree, 1);\n      } while (s.heap_len >= 2);\n\n      s.heap[--s.heap_max] = s.heap[1];\n\n      // At this point, the fields freq and dad are set. We can now\n      // generate the bit lengths.\n\n      gen_bitlen(s);\n\n      // The field len is now set, we can generate the bit codes\n      gen_codes(tree, that.max_code, s.bl_count);\n    };\n\n  }\n\n  Tree._length_code = [0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16,\n    16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20,\n    20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n    22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,\n    25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,\n    26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28\n  ];\n\n  Tree.base_length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0];\n\n  Tree.base_dist = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384,\n    24576\n  ];\n\n  // Mapping from a distance to a distance code. dist is the distance - 1 and\n  // must not have side effects. _dist_code[256] and _dist_code[257] are never\n  // used.\n  Tree.d_code = function (dist) {\n    return ((dist) < 256 ? _dist_code[dist] : _dist_code[256 + ((dist) >>> 7)]);\n  };\n\n  // extra bits for each length code\n  Tree.extra_lbits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n\n  // extra bits for each distance code\n  Tree.extra_dbits = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n  // extra bits for each bit length code\n  Tree.extra_blbits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\n\n  Tree.bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n  // StaticTree\n\n  function StaticTree(static_tree, extra_bits, extra_base, elems, max_length) {\n    var that = this;\n    that.static_tree = static_tree;\n    that.extra_bits = extra_bits;\n    that.extra_base = extra_base;\n    that.elems = elems;\n    that.max_length = max_length;\n  }\n\n  StaticTree.static_ltree = [12, 8, 140, 8, 76, 8, 204, 8, 44, 8, 172, 8, 108, 8, 236, 8, 28, 8, 156, 8, 92, 8, 220, 8, 60, 8, 188, 8, 124, 8, 252, 8, 2, 8,\n    130, 8, 66, 8, 194, 8, 34, 8, 162, 8, 98, 8, 226, 8, 18, 8, 146, 8, 82, 8, 210, 8, 50, 8, 178, 8, 114, 8, 242, 8, 10, 8, 138, 8, 74, 8, 202, 8, 42,\n    8, 170, 8, 106, 8, 234, 8, 26, 8, 154, 8, 90, 8, 218, 8, 58, 8, 186, 8, 122, 8, 250, 8, 6, 8, 134, 8, 70, 8, 198, 8, 38, 8, 166, 8, 102, 8, 230, 8,\n    22, 8, 150, 8, 86, 8, 214, 8, 54, 8, 182, 8, 118, 8, 246, 8, 14, 8, 142, 8, 78, 8, 206, 8, 46, 8, 174, 8, 110, 8, 238, 8, 30, 8, 158, 8, 94, 8,\n    222, 8, 62, 8, 190, 8, 126, 8, 254, 8, 1, 8, 129, 8, 65, 8, 193, 8, 33, 8, 161, 8, 97, 8, 225, 8, 17, 8, 145, 8, 81, 8, 209, 8, 49, 8, 177, 8, 113,\n    8, 241, 8, 9, 8, 137, 8, 73, 8, 201, 8, 41, 8, 169, 8, 105, 8, 233, 8, 25, 8, 153, 8, 89, 8, 217, 8, 57, 8, 185, 8, 121, 8, 249, 8, 5, 8, 133, 8,\n    69, 8, 197, 8, 37, 8, 165, 8, 101, 8, 229, 8, 21, 8, 149, 8, 85, 8, 213, 8, 53, 8, 181, 8, 117, 8, 245, 8, 13, 8, 141, 8, 77, 8, 205, 8, 45, 8,\n    173, 8, 109, 8, 237, 8, 29, 8, 157, 8, 93, 8, 221, 8, 61, 8, 189, 8, 125, 8, 253, 8, 19, 9, 275, 9, 147, 9, 403, 9, 83, 9, 339, 9, 211, 9, 467, 9,\n    51, 9, 307, 9, 179, 9, 435, 9, 115, 9, 371, 9, 243, 9, 499, 9, 11, 9, 267, 9, 139, 9, 395, 9, 75, 9, 331, 9, 203, 9, 459, 9, 43, 9, 299, 9, 171, 9,\n    427, 9, 107, 9, 363, 9, 235, 9, 491, 9, 27, 9, 283, 9, 155, 9, 411, 9, 91, 9, 347, 9, 219, 9, 475, 9, 59, 9, 315, 9, 187, 9, 443, 9, 123, 9, 379,\n    9, 251, 9, 507, 9, 7, 9, 263, 9, 135, 9, 391, 9, 71, 9, 327, 9, 199, 9, 455, 9, 39, 9, 295, 9, 167, 9, 423, 9, 103, 9, 359, 9, 231, 9, 487, 9, 23,\n    9, 279, 9, 151, 9, 407, 9, 87, 9, 343, 9, 215, 9, 471, 9, 55, 9, 311, 9, 183, 9, 439, 9, 119, 9, 375, 9, 247, 9, 503, 9, 15, 9, 271, 9, 143, 9,\n    399, 9, 79, 9, 335, 9, 207, 9, 463, 9, 47, 9, 303, 9, 175, 9, 431, 9, 111, 9, 367, 9, 239, 9, 495, 9, 31, 9, 287, 9, 159, 9, 415, 9, 95, 9, 351, 9,\n    223, 9, 479, 9, 63, 9, 319, 9, 191, 9, 447, 9, 127, 9, 383, 9, 255, 9, 511, 9, 0, 7, 64, 7, 32, 7, 96, 7, 16, 7, 80, 7, 48, 7, 112, 7, 8, 7, 72, 7,\n    40, 7, 104, 7, 24, 7, 88, 7, 56, 7, 120, 7, 4, 7, 68, 7, 36, 7, 100, 7, 20, 7, 84, 7, 52, 7, 116, 7, 3, 8, 131, 8, 67, 8, 195, 8, 35, 8, 163, 8,\n    99, 8, 227, 8\n  ];\n\n  StaticTree.static_dtree = [0, 5, 16, 5, 8, 5, 24, 5, 4, 5, 20, 5, 12, 5, 28, 5, 2, 5, 18, 5, 10, 5, 26, 5, 6, 5, 22, 5, 14, 5, 30, 5, 1, 5, 17, 5, 9, 5,\n    25, 5, 5, 5, 21, 5, 13, 5, 29, 5, 3, 5, 19, 5, 11, 5, 27, 5, 7, 5, 23, 5\n  ];\n\n  StaticTree.static_l_desc = new StaticTree(StaticTree.static_ltree, Tree.extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n\n  StaticTree.static_d_desc = new StaticTree(StaticTree.static_dtree, Tree.extra_dbits, 0, D_CODES, MAX_BITS);\n\n  StaticTree.static_bl_desc = new StaticTree(null, Tree.extra_blbits, 0, BL_CODES, MAX_BL_BITS);\n\n  // Deflate\n\n  var MAX_MEM_LEVEL = 9;\n  var DEF_MEM_LEVEL = 8;\n\n  function Config(good_length, max_lazy, nice_length, max_chain, func) {\n    var that = this;\n    that.good_length = good_length;\n    that.max_lazy = max_lazy;\n    that.nice_length = nice_length;\n    that.max_chain = max_chain;\n    that.func = func;\n  }\n\n  var STORED = 0;\n  var FAST = 1;\n  var SLOW = 2;\n  var config_table = [new Config(0, 0, 0, 0, STORED), new Config(4, 4, 8, 4, FAST), new Config(4, 5, 16, 8, FAST), new Config(4, 6, 32, 32, FAST),\n  new Config(4, 4, 16, 16, SLOW), new Config(8, 16, 32, 32, SLOW), new Config(8, 16, 128, 128, SLOW), new Config(8, 32, 128, 256, SLOW),\n  new Config(32, 128, 258, 1024, SLOW), new Config(32, 258, 258, 4096, SLOW)\n  ];\n\n  var z_errmsg = [\"need dictionary\", // Z_NEED_DICT\n    // 2\n    \"stream end\", // Z_STREAM_END 1\n    \"\", // Z_OK 0\n    \"\", // Z_ERRNO (-1)\n    \"stream error\", // Z_STREAM_ERROR (-2)\n    \"data error\", // Z_DATA_ERROR (-3)\n    \"\", // Z_MEM_ERROR (-4)\n    \"buffer error\", // Z_BUF_ERROR (-5)\n    \"\", // Z_VERSION_ERROR (-6)\n    \"\"\n  ];\n\n  // block not completed, need more input or more output\n  var NeedMore = 0;\n\n  // block flush performed\n  var BlockDone = 1;\n\n  // finish started, need only more output at next deflate\n  var FinishStarted = 2;\n\n  // finish done, accept no more input or output\n  var FinishDone = 3;\n\n  // preset dictionary flag in zlib header\n  var PRESET_DICT = 0x20;\n\n  var INIT_STATE = 42;\n  var BUSY_STATE = 113;\n  var FINISH_STATE = 666;\n\n  // The deflate compression method\n  var Z_DEFLATED = 8;\n\n  var STORED_BLOCK = 0;\n  var STATIC_TREES = 1;\n  var DYN_TREES = 2;\n\n  var MIN_MATCH = 3;\n  var MAX_MATCH = 258;\n  var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\n  function smaller(tree, n, m, depth) {\n    var tn2 = tree[n * 2];\n    var tm2 = tree[m * 2];\n    return (tn2 < tm2 || (tn2 == tm2 && depth[n] <= depth[m]));\n  }\n\n  function Deflate() {\n\n    var that = this;\n    var strm; // pointer back to this zlib stream\n    var status; // as the name implies\n    // pending_buf; // output still pending\n    var pending_buf_size; // size of pending_buf\n    // pending_out; // next pending byte to output to the stream\n    // pending; // nb of bytes in the pending buffer\n    var method; // STORED (for zip only) or DEFLATED\n    var last_flush; // value of flush param for previous deflate call\n\n    var w_size; // LZ77 window size (32K by default)\n    var w_bits; // log2(w_size) (8..16)\n    var w_mask; // w_size - 1\n\n    var window;\n    // Sliding window. Input bytes are read into the second half of the window,\n    // and move to the first half later to keep a dictionary of at least wSize\n    // bytes. With this organization, matches are limited to a distance of\n    // wSize-MAX_MATCH bytes, but this ensures that IO is always\n    // performed with a length multiple of the block size. Also, it limits\n    // the window size to 64K, which is quite useful on MSDOS.\n    // To do: use the user input buffer as sliding window.\n\n    var window_size;\n    // Actual size of window: 2*wSize, except when the user input buffer\n    // is directly used as sliding window.\n\n    var prev;\n    // Link to older string with same hash index. To limit the size of this\n    // array to 64K, this link is maintained only for the last 32K strings.\n    // An index in this array is thus a window index modulo 32K.\n\n    var head; // Heads of the hash chains or NIL.\n\n    var ins_h; // hash index of string to be inserted\n    var hash_size; // number of elements in hash table\n    var hash_bits; // log2(hash_size)\n    var hash_mask; // hash_size-1\n\n    // Number of bits by which ins_h must be shifted at each input\n    // step. It must be such that after MIN_MATCH steps, the oldest\n    // byte no longer takes part in the hash key, that is:\n    // hash_shift * MIN_MATCH >= hash_bits\n    var hash_shift;\n\n    // Window position at the beginning of the current output block. Gets\n    // negative when the window is moved backwards.\n\n    var block_start;\n\n    var match_length; // length of best match\n    var prev_match; // previous match\n    var match_available; // set if previous match exists\n    var strstart; // start of string to insert\n    var match_start; // start of matching string\n    var lookahead; // number of valid bytes ahead in window\n\n    // Length of the best match at previous step. Matches not greater than this\n    // are discarded. This is used in the lazy match evaluation.\n    var prev_length;\n\n    // To speed up deflation, hash chains are never searched beyond this\n    // length. A higher limit improves compression ratio but degrades the speed.\n    var max_chain_length;\n\n    // Attempt to find a better match only when the current match is strictly\n    // smaller than this value. This mechanism is used only for compression\n    // levels >= 4.\n    var max_lazy_match;\n\n    // Insert new strings in the hash table only if the match length is not\n    // greater than this length. This saves time but degrades compression.\n    // max_insert_length is used only for compression levels <= 3.\n\n    var level; // compression level (1..9)\n    var strategy; // favor or force Huffman coding\n\n    // Use a faster search when the previous match is longer than this\n    var good_match;\n\n    // Stop searching when current match exceeds this\n    var nice_match;\n\n    var dyn_ltree; // literal and length tree\n    var dyn_dtree; // distance tree\n    var bl_tree; // Huffman tree for bit lengths\n\n    var l_desc = new Tree(); // desc for literal tree\n    var d_desc = new Tree(); // desc for distance tree\n    var bl_desc = new Tree(); // desc for bit length tree\n\n    // that.heap_len; // number of elements in the heap\n    // that.heap_max; // element of largest frequency\n    // The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n    // The same heap array is used to build all trees.\n\n    // Depth of each subtree used as tie breaker for trees of equal frequency\n    that.depth = [];\n\n    var l_buf; // index for literals or lengths */\n\n    // Size of match buffer for literals/lengths. There are 4 reasons for\n    // limiting lit_bufsize to 64K:\n    // - frequencies can be kept in 16 bit counters\n    // - if compression is not successful for the first block, all input\n    // data is still in the window so we can still emit a stored block even\n    // when input comes from standard input. (This can also be done for\n    // all blocks if lit_bufsize is not greater than 32K.)\n    // - if compression is not successful for a file smaller than 64K, we can\n    // even emit a stored file instead of a stored block (saving 5 bytes).\n    // This is applicable only for zip (not gzip or zlib).\n    // - creating new Huffman trees less frequently may not provide fast\n    // adaptation to changes in the input data statistics. (Take for\n    // example a binary file with poorly compressible code followed by\n    // a highly compressible string table.) Smaller buffer sizes give\n    // fast adaptation but have of course the overhead of transmitting\n    // trees more frequently.\n    // - I can't count above 4\n    var lit_bufsize;\n\n    var last_lit; // running index in l_buf\n\n    // Buffer for distances. To simplify the code, d_buf and l_buf have\n    // the same number of elements. To use different lengths, an extra flag\n    // array would be necessary.\n\n    var d_buf; // index of pendig_buf\n\n    // that.opt_len; // bit length of current block with optimal trees\n    // that.static_len; // bit length of current block with static trees\n    var matches; // number of string matches in current block\n    var last_eob_len; // bit length of EOB code for last block\n\n    // Output buffer. bits are inserted starting at the bottom (least\n    // significant bits).\n    var bi_buf;\n\n    // Number of valid bits in bi_buf. All bits above the last valid bit\n    // are always zero.\n    var bi_valid;\n\n    // number of codes at each bit length for an optimal tree\n    that.bl_count = [];\n\n    // heap used to build the Huffman trees\n    that.heap = [];\n\n    dyn_ltree = [];\n    dyn_dtree = [];\n    bl_tree = [];\n\n    function lm_init() {\n      var i;\n      window_size = 2 * w_size;\n\n      head[hash_size - 1] = 0;\n      for (i = 0; i < hash_size - 1; i++) {\n        head[i] = 0;\n      }\n\n      // Set the default configuration parameters:\n      max_lazy_match = config_table[level].max_lazy;\n      good_match = config_table[level].good_length;\n      nice_match = config_table[level].nice_length;\n      max_chain_length = config_table[level].max_chain;\n\n      strstart = 0;\n      block_start = 0;\n      lookahead = 0;\n      match_length = prev_length = MIN_MATCH - 1;\n      match_available = 0;\n      ins_h = 0;\n    }\n\n    function init_block() {\n      var i;\n      // Initialize the trees.\n      for (i = 0; i < L_CODES; i++)\n        dyn_ltree[i * 2] = 0;\n      for (i = 0; i < D_CODES; i++)\n        dyn_dtree[i * 2] = 0;\n      for (i = 0; i < BL_CODES; i++)\n        bl_tree[i * 2] = 0;\n\n      dyn_ltree[END_BLOCK * 2] = 1;\n      that.opt_len = that.static_len = 0;\n      last_lit = matches = 0;\n    }\n\n    // Initialize the tree data structures for a new zlib stream.\n    function tr_init() {\n\n      l_desc.dyn_tree = dyn_ltree;\n      l_desc.stat_desc = StaticTree.static_l_desc;\n\n      d_desc.dyn_tree = dyn_dtree;\n      d_desc.stat_desc = StaticTree.static_d_desc;\n\n      bl_desc.dyn_tree = bl_tree;\n      bl_desc.stat_desc = StaticTree.static_bl_desc;\n\n      bi_buf = 0;\n      bi_valid = 0;\n      last_eob_len = 8; // enough lookahead for inflate\n\n      // Initialize the first block of the first file:\n      init_block();\n    }\n\n    // Restore the heap property by moving down the tree starting at node k,\n    // exchanging a node with the smallest of its two sons if necessary,\n    // stopping\n    // when the heap property is re-established (each father smaller than its\n    // two sons).\n    that.pqdownheap = function (tree, // the tree to restore\n      k // node to move down\n    ) {\n      var heap = that.heap;\n      var v = heap[k];\n      var j = k << 1; // left son of k\n      while (j <= that.heap_len) {\n        // Set j to the smallest of the two sons:\n        if (j < that.heap_len && smaller(tree, heap[j + 1], heap[j], that.depth)) {\n          j++;\n        }\n        // Exit if v is smaller than both sons\n        if (smaller(tree, v, heap[j], that.depth))\n          break;\n\n        // Exchange v with the smallest son\n        heap[k] = heap[j];\n        k = j;\n        // And continue down the tree, setting j to the left son of k\n        j <<= 1;\n      }\n      heap[k] = v;\n    };\n\n    // Scan a literal or distance tree to determine the frequencies of the codes\n    // in the bit length tree.\n    function scan_tree(tree, // the tree to be scanned\n      max_code // and its largest code of non zero frequency\n    ) {\n      var n; // iterates over all tree elements\n      var prevlen = -1; // last emitted length\n      var curlen; // length of current code\n      var nextlen = tree[0 * 2 + 1]; // length of next code\n      var count = 0; // repeat count of the current code\n      var max_count = 7; // max repeat count\n      var min_count = 4; // min repeat count\n\n      if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n      }\n      tree[(max_code + 1) * 2 + 1] = 0xffff; // guard\n\n      for (n = 0; n <= max_code; n++) {\n        curlen = nextlen;\n        nextlen = tree[(n + 1) * 2 + 1];\n        if (++count < max_count && curlen == nextlen) {\n          continue;\n        } else if (count < min_count) {\n          bl_tree[curlen * 2] += count;\n        } else if (curlen !== 0) {\n          if (curlen != prevlen)\n            bl_tree[curlen * 2]++;\n          bl_tree[REP_3_6 * 2]++;\n        } else if (count <= 10) {\n          bl_tree[REPZ_3_10 * 2]++;\n        } else {\n          bl_tree[REPZ_11_138 * 2]++;\n        }\n        count = 0;\n        prevlen = curlen;\n        if (nextlen === 0) {\n          max_count = 138;\n          min_count = 3;\n        } else if (curlen == nextlen) {\n          max_count = 6;\n          min_count = 3;\n        } else {\n          max_count = 7;\n          min_count = 4;\n        }\n      }\n    }\n\n    // Construct the Huffman tree for the bit lengths and return the index in\n    // bl_order of the last bit length code to send.\n    function build_bl_tree() {\n      var max_blindex; // index of last bit length code of non zero freq\n\n      // Determine the bit length frequencies for literal and distance trees\n      scan_tree(dyn_ltree, l_desc.max_code);\n      scan_tree(dyn_dtree, d_desc.max_code);\n\n      // Build the bit length tree:\n      bl_desc.build_tree(that);\n      // opt_len now includes the length of the tree representations, except\n      // the lengths of the bit lengths codes and the 5+5+4 bits for the\n      // counts.\n\n      // Determine the number of bit length codes to send. The pkzip format\n      // requires that at least 4 bit length codes be sent. (appnote.txt says\n      // 3 but the actual value used is 4.)\n      for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n        if (bl_tree[Tree.bl_order[max_blindex] * 2 + 1] !== 0)\n          break;\n      }\n      // Update opt_len to include the bit length tree and counts\n      that.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n\n      return max_blindex;\n    }\n\n    // Output a byte on the stream.\n    // IN assertion: there is enough room in pending_buf.\n    function put_byte(p) {\n      that.pending_buf[that.pending++] = p;\n    }\n\n    function put_short(w) {\n      put_byte(w & 0xff);\n      put_byte((w >>> 8) & 0xff);\n    }\n\n    function putShortMSB(b) {\n      put_byte((b >> 8) & 0xff);\n      put_byte((b & 0xff) & 0xff);\n    }\n\n    function send_bits(value, length) {\n      var val, len = length;\n      if (bi_valid > Buf_size - len) {\n        val = value;\n        // bi_buf |= (val << bi_valid);\n        bi_buf |= ((val << bi_valid) & 0xffff);\n        put_short(bi_buf);\n        bi_buf = val >>> (Buf_size - bi_valid);\n        bi_valid += len - Buf_size;\n      } else {\n        // bi_buf |= (value) << bi_valid;\n        bi_buf |= (((value) << bi_valid) & 0xffff);\n        bi_valid += len;\n      }\n    }\n\n    function send_code(c, tree) {\n      var c2 = c * 2;\n      send_bits(tree[c2] & 0xffff, tree[c2 + 1] & 0xffff);\n    }\n\n    // Send a literal or distance tree in compressed form, using the codes in\n    // bl_tree.\n    function send_tree(tree, // the tree to be sent\n      max_code // and its largest code of non zero frequency\n    ) {\n      var n; // iterates over all tree elements\n      var prevlen = -1; // last emitted length\n      var curlen; // length of current code\n      var nextlen = tree[0 * 2 + 1]; // length of next code\n      var count = 0; // repeat count of the current code\n      var max_count = 7; // max repeat count\n      var min_count = 4; // min repeat count\n\n      if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n      }\n\n      for (n = 0; n <= max_code; n++) {\n        curlen = nextlen;\n        nextlen = tree[(n + 1) * 2 + 1];\n        if (++count < max_count && curlen == nextlen) {\n          continue;\n        } else if (count < min_count) {\n          do {\n            send_code(curlen, bl_tree);\n          } while (--count !== 0);\n        } else if (curlen !== 0) {\n          if (curlen != prevlen) {\n            send_code(curlen, bl_tree);\n            count--;\n          }\n          send_code(REP_3_6, bl_tree);\n          send_bits(count - 3, 2);\n        } else if (count <= 10) {\n          send_code(REPZ_3_10, bl_tree);\n          send_bits(count - 3, 3);\n        } else {\n          send_code(REPZ_11_138, bl_tree);\n          send_bits(count - 11, 7);\n        }\n        count = 0;\n        prevlen = curlen;\n        if (nextlen === 0) {\n          max_count = 138;\n          min_count = 3;\n        } else if (curlen == nextlen) {\n          max_count = 6;\n          min_count = 3;\n        } else {\n          max_count = 7;\n          min_count = 4;\n        }\n      }\n    }\n\n    // Send the header for a block using dynamic Huffman trees: the counts, the\n    // lengths of the bit length codes, the literal tree and the distance tree.\n    // IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n    function send_all_trees(lcodes, dcodes, blcodes) {\n      var rank; // index in bl_order\n\n      send_bits(lcodes - 257, 5); // not +255 as stated in appnote.txt\n      send_bits(dcodes - 1, 5);\n      send_bits(blcodes - 4, 4); // not -3 as stated in appnote.txt\n      for (rank = 0; rank < blcodes; rank++) {\n        send_bits(bl_tree[Tree.bl_order[rank] * 2 + 1], 3);\n      }\n      send_tree(dyn_ltree, lcodes - 1); // literal tree\n      send_tree(dyn_dtree, dcodes - 1); // distance tree\n    }\n\n    // Flush the bit buffer, keeping at most 7 bits in it.\n    function bi_flush() {\n      if (bi_valid == 16) {\n        put_short(bi_buf);\n        bi_buf = 0;\n        bi_valid = 0;\n      } else if (bi_valid >= 8) {\n        put_byte(bi_buf & 0xff);\n        bi_buf >>>= 8;\n        bi_valid -= 8;\n      }\n    }\n\n    // Send one empty static block to give enough lookahead for inflate.\n    // This takes 10 bits, of which 7 may remain in the bit buffer.\n    // The current inflate code requires 9 bits of lookahead. If the\n    // last two codes for the previous block (real code plus EOB) were coded\n    // on 5 bits or less, inflate may have only 5+3 bits of lookahead to decode\n    // the last real code. In this case we send two empty static blocks instead\n    // of one. (There are no problems if the previous block is stored or fixed.)\n    // To simplify the code, we assume the worst case of last real code encoded\n    // on one bit only.\n    function _tr_align() {\n      send_bits(STATIC_TREES << 1, 3);\n      send_code(END_BLOCK, StaticTree.static_ltree);\n\n      bi_flush();\n\n      // Of the 10 bits for the empty block, we have already sent\n      // (10 - bi_valid) bits. The lookahead for the last real code (before\n      // the EOB of the previous block) was thus at least one plus the length\n      // of the EOB plus what we have just sent of the empty static block.\n      if (1 + last_eob_len + 10 - bi_valid < 9) {\n        send_bits(STATIC_TREES << 1, 3);\n        send_code(END_BLOCK, StaticTree.static_ltree);\n        bi_flush();\n      }\n      last_eob_len = 7;\n    }\n\n    // Save the match info and tally the frequency counts. Return true if\n    // the current block must be flushed.\n    function _tr_tally(dist, // distance of matched string\n      lc // match length-MIN_MATCH or unmatched char (if dist==0)\n    ) {\n      var out_length, in_length, dcode;\n      that.pending_buf[d_buf + last_lit * 2] = (dist >>> 8) & 0xff;\n      that.pending_buf[d_buf + last_lit * 2 + 1] = dist & 0xff;\n\n      that.pending_buf[l_buf + last_lit] = lc & 0xff;\n      last_lit++;\n\n      if (dist === 0) {\n        // lc is the unmatched char\n        dyn_ltree[lc * 2]++;\n      } else {\n        matches++;\n        // Here, lc is the match length - MIN_MATCH\n        dist--; // dist = match distance - 1\n        dyn_ltree[(Tree._length_code[lc] + LITERALS + 1) * 2]++;\n        dyn_dtree[Tree.d_code(dist) * 2]++;\n      }\n\n      if ((last_lit & 0x1fff) === 0 && level > 2) {\n        // Compute an upper bound for the compressed length\n        out_length = last_lit * 8;\n        in_length = strstart - block_start;\n        for (dcode = 0; dcode < D_CODES; dcode++) {\n          out_length += dyn_dtree[dcode * 2] * (5 + Tree.extra_dbits[dcode]);\n        }\n        out_length >>>= 3;\n        if ((matches < Math.floor(last_lit / 2)) && out_length < Math.floor(in_length / 2))\n          return true;\n      }\n\n      return (last_lit == lit_bufsize - 1);\n      // We avoid equality with lit_bufsize because of wraparound at 64K\n      // on 16 bit machines and because stored blocks are restricted to\n      // 64K-1 bytes.\n    }\n\n    // Send the block data compressed using the given Huffman trees\n    function compress_block(ltree, dtree) {\n      var dist; // distance of matched string\n      var lc; // match length or unmatched char (if dist === 0)\n      var lx = 0; // running index in l_buf\n      var code; // the code to send\n      var extra; // number of extra bits to send\n\n      if (last_lit !== 0) {\n        do {\n          dist = ((that.pending_buf[d_buf + lx * 2] << 8) & 0xff00) | (that.pending_buf[d_buf + lx * 2 + 1] & 0xff);\n          lc = (that.pending_buf[l_buf + lx]) & 0xff;\n          lx++;\n\n          if (dist === 0) {\n            send_code(lc, ltree); // send a literal byte\n          } else {\n            // Here, lc is the match length - MIN_MATCH\n            code = Tree._length_code[lc];\n\n            send_code(code + LITERALS + 1, ltree); // send the length\n            // code\n            extra = Tree.extra_lbits[code];\n            if (extra !== 0) {\n              lc -= Tree.base_length[code];\n              send_bits(lc, extra); // send the extra length bits\n            }\n            dist--; // dist is now the match distance - 1\n            code = Tree.d_code(dist);\n\n            send_code(code, dtree); // send the distance code\n            extra = Tree.extra_dbits[code];\n            if (extra !== 0) {\n              dist -= Tree.base_dist[code];\n              send_bits(dist, extra); // send the extra distance bits\n            }\n          } // literal or match pair ?\n\n          // Check that the overlay between pending_buf and d_buf+l_buf is\n          // ok:\n        } while (lx < last_lit);\n      }\n\n      send_code(END_BLOCK, ltree);\n      last_eob_len = ltree[END_BLOCK * 2 + 1];\n    }\n\n    // Flush the bit buffer and align the output on a byte boundary\n    function bi_windup() {\n      if (bi_valid > 8) {\n        put_short(bi_buf);\n      } else if (bi_valid > 0) {\n        put_byte(bi_buf & 0xff);\n      }\n      bi_buf = 0;\n      bi_valid = 0;\n    }\n\n    // Copy a stored block, storing first the length and its\n    // one's complement if requested.\n    function copy_block(buf, // the input data\n      len, // its length\n      header // true if block header must be written\n    ) {\n      bi_windup(); // align on byte boundary\n      last_eob_len = 8; // enough lookahead for inflate\n\n      if (header) {\n        put_short(len);\n        put_short(~len);\n      }\n\n      that.pending_buf.set(window.subarray(buf, buf + len), that.pending);\n      that.pending += len;\n    }\n\n    // Send a stored block\n    function _tr_stored_block(buf, // input block\n      stored_len, // length of input block\n      eof // true if this is the last block for a file\n    ) {\n      send_bits((STORED_BLOCK << 1) + (eof ? 1 : 0), 3); // send block type\n      copy_block(buf, stored_len, true); // with header\n    }\n\n    // Determine the best encoding for the current block: dynamic trees, static\n    // trees or store, and output the encoded block to the zip file.\n    function _tr_flush_block(buf, // input block, or NULL if too old\n      stored_len, // length of input block\n      eof // true if this is the last block for a file\n    ) {\n      var opt_lenb, static_lenb; // opt_len and static_len in bytes\n      var max_blindex = 0; // index of last bit length code of non zero freq\n\n      // Build the Huffman trees unless a stored block is forced\n      if (level > 0) {\n        // Construct the literal and distance trees\n        l_desc.build_tree(that);\n\n        d_desc.build_tree(that);\n\n        // At this point, opt_len and static_len are the total bit lengths\n        // of\n        // the compressed block data, excluding the tree representations.\n\n        // Build the bit length tree for the above two trees, and get the\n        // index\n        // in bl_order of the last bit length code to send.\n        max_blindex = build_bl_tree();\n\n        // Determine the best encoding. Compute first the block length in\n        // bytes\n        opt_lenb = (that.opt_len + 3 + 7) >>> 3;\n        static_lenb = (that.static_len + 3 + 7) >>> 3;\n\n        if (static_lenb <= opt_lenb)\n          opt_lenb = static_lenb;\n      } else {\n        opt_lenb = static_lenb = stored_len + 5; // force a stored block\n      }\n\n      if ((stored_len + 4 <= opt_lenb) && buf != -1) {\n        // 4: two words for the lengths\n        // The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n        // Otherwise we can't have processed more than WSIZE input bytes\n        // since\n        // the last block flush, because compression would have been\n        // successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n        // transform a block into a stored block.\n        _tr_stored_block(buf, stored_len, eof);\n      } else if (static_lenb == opt_lenb) {\n        send_bits((STATIC_TREES << 1) + (eof ? 1 : 0), 3);\n        compress_block(StaticTree.static_ltree, StaticTree.static_dtree);\n      } else {\n        send_bits((DYN_TREES << 1) + (eof ? 1 : 0), 3);\n        send_all_trees(l_desc.max_code + 1, d_desc.max_code + 1, max_blindex + 1);\n        compress_block(dyn_ltree, dyn_dtree);\n      }\n\n      // The above check is made mod 2^32, for files larger than 512 MB\n      // and uLong implemented on 32 bits.\n\n      init_block();\n\n      if (eof) {\n        bi_windup();\n      }\n    }\n\n    function flush_block_only(eof) {\n      _tr_flush_block(block_start >= 0 ? block_start : -1, strstart - block_start, eof);\n      block_start = strstart;\n      strm.flush_pending();\n    }\n\n    // Fill the window when the lookahead becomes insufficient.\n    // Updates strstart and lookahead.\n    //\n    // IN assertion: lookahead < MIN_LOOKAHEAD\n    // OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n    // At least one byte has been read, or avail_in === 0; reads are\n    // performed for at least two bytes (required for the zip translate_eol\n    // option -- not supported here).\n    function fill_window() {\n      var n, m;\n      var p;\n      var more; // Amount of free space at the end of the window.\n\n      do {\n        more = (window_size - lookahead - strstart);\n\n        // Deal with !@#$% 64K limit:\n        if (more === 0 && strstart === 0 && lookahead === 0) {\n          more = w_size;\n        } else if (more == -1) {\n          // Very unlikely, but possible on 16 bit machine if strstart ==\n          // 0\n          // and lookahead == 1 (input done one byte at time)\n          more--;\n\n          // If the window is almost full and there is insufficient\n          // lookahead,\n          // move the upper half to the lower one to make room in the\n          // upper half.\n        } else if (strstart >= w_size + w_size - MIN_LOOKAHEAD) {\n          window.set(window.subarray(w_size, w_size + w_size), 0);\n\n          match_start -= w_size;\n          strstart -= w_size; // we now have strstart >= MAX_DIST\n          block_start -= w_size;\n\n          // Slide the hash table (could be avoided with 32 bit values\n          // at the expense of memory usage). We slide even when level ==\n          // 0\n          // to keep the hash table consistent if we switch back to level\n          // > 0\n          // later. (Using level 0 permanently is not an optimal usage of\n          // zlib, so we don't care about this pathological case.)\n\n          n = hash_size;\n          p = n;\n          do {\n            m = (head[--p] & 0xffff);\n            head[p] = (m >= w_size ? m - w_size : 0);\n          } while (--n !== 0);\n\n          n = w_size;\n          p = n;\n          do {\n            m = (prev[--p] & 0xffff);\n            prev[p] = (m >= w_size ? m - w_size : 0);\n            // If n is not on any hash chain, prev[n] is garbage but\n            // its value will never be used.\n          } while (--n !== 0);\n          more += w_size;\n        }\n\n        if (strm.avail_in === 0)\n          return;\n\n        // If there was no sliding:\n        // strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n        // more == window_size - lookahead - strstart\n        // => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n        // => more >= window_size - 2*WSIZE + 2\n        // In the BIG_MEM or MMAP case (not yet supported),\n        // window_size == input_size + MIN_LOOKAHEAD &&\n        // strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n        // Otherwise, window_size == 2*WSIZE so more >= 2.\n        // If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n\n        n = strm.read_buf(window, strstart + lookahead, more);\n        lookahead += n;\n\n        // Initialize the hash value now that we have some input:\n        if (lookahead >= MIN_MATCH) {\n          ins_h = window[strstart] & 0xff;\n          ins_h = (((ins_h) << hash_shift) ^ (window[strstart + 1] & 0xff)) & hash_mask;\n        }\n        // If the whole input has less than MIN_MATCH bytes, ins_h is\n        // garbage,\n        // but this is not important since only literal bytes will be\n        // emitted.\n      } while (lookahead < MIN_LOOKAHEAD && strm.avail_in !== 0);\n    }\n\n    // Copy without compression as much as possible from the input stream,\n    // return\n    // the current block state.\n    // This function does not insert new strings in the dictionary since\n    // uncompressible data is probably not useful. This function is used\n    // only for the level=0 compression option.\n    // NOTE: this function should be optimized to avoid extra copying from\n    // window to pending_buf.\n    function deflate_stored(flush) {\n      // Stored blocks are limited to 0xffff bytes, pending_buf is limited\n      // to pending_buf_size, and each stored block has a 5 byte header:\n\n      var max_block_size = 0xffff;\n      var max_start;\n\n      if (max_block_size > pending_buf_size - 5) {\n        max_block_size = pending_buf_size - 5;\n      }\n\n      // Copy as much as possible from input to output:\n      while (true) {\n        // Fill the window as much as possible:\n        if (lookahead <= 1) {\n          fill_window();\n          if (lookahead === 0 && flush == Z_NO_FLUSH)\n            return NeedMore;\n          if (lookahead === 0)\n            break; // flush the current block\n        }\n\n        strstart += lookahead;\n        lookahead = 0;\n\n        // Emit a stored block if pending_buf will be full:\n        max_start = block_start + max_block_size;\n        if (strstart === 0 || strstart >= max_start) {\n          // strstart === 0 is possible when wraparound on 16-bit machine\n          lookahead = (strstart - max_start);\n          strstart = max_start;\n\n          flush_block_only(false);\n          if (strm.avail_out === 0)\n            return NeedMore;\n\n        }\n\n        // Flush if we may have to slide, otherwise block_start may become\n        // negative and the data will be gone:\n        if (strstart - block_start >= w_size - MIN_LOOKAHEAD) {\n          flush_block_only(false);\n          if (strm.avail_out === 0)\n            return NeedMore;\n        }\n      }\n\n      flush_block_only(flush == Z_FINISH);\n      if (strm.avail_out === 0)\n        return (flush == Z_FINISH) ? FinishStarted : NeedMore;\n\n      return flush == Z_FINISH ? FinishDone : BlockDone;\n    }\n\n    function longest_match(cur_match) {\n      var chain_length = max_chain_length; // max hash chain length\n      var scan = strstart; // current string\n      var match; // matched string\n      var len; // length of current match\n      var best_len = prev_length; // best match length so far\n      var limit = strstart > (w_size - MIN_LOOKAHEAD) ? strstart - (w_size - MIN_LOOKAHEAD) : 0;\n      var _nice_match = nice_match;\n\n      // Stop when cur_match becomes <= limit. To simplify the code,\n      // we prevent matches with the string of window index 0.\n\n      var wmask = w_mask;\n\n      var strend = strstart + MAX_MATCH;\n      var scan_end1 = window[scan + best_len - 1];\n      var scan_end = window[scan + best_len];\n\n      // The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of\n      // 16.\n      // It is easy to get rid of this optimization if necessary.\n\n      // Do not waste too much time if we already have a good match:\n      if (prev_length >= good_match) {\n        chain_length >>= 2;\n      }\n\n      // Do not look for matches beyond the end of the input. This is\n      // necessary\n      // to make deflate deterministic.\n      if (_nice_match > lookahead)\n        _nice_match = lookahead;\n\n      do {\n        match = cur_match;\n\n        // Skip to next match if the match length cannot increase\n        // or if the match length is less than 2:\n        if (window[match + best_len] != scan_end || window[match + best_len - 1] != scan_end1 || window[match] != window[scan] ||\n          window[++match] != window[scan + 1])\n          continue;\n\n        // The check at best_len-1 can be removed because it will be made\n        // again later. (This heuristic is not always a win.)\n        // It is not necessary to compare scan[2] and match[2] since they\n        // are always equal when the other bytes match, given that\n        // the hash keys are equal and that HASH_BITS >= 8.\n        scan += 2;\n        match++;\n\n        // We check for insufficient lookahead only every 8th comparison;\n        // the 256th check will be made at strstart+258.\n        do { } while (window[++scan] == window[++match] && window[++scan] == window[++match] && window[++scan] == window[++match] &&\n          window[++scan] == window[++match] && window[++scan] == window[++match] && window[++scan] == window[++match] &&\n          window[++scan] == window[++match] && window[++scan] == window[++match] && scan < strend);\n\n        len = MAX_MATCH - (strend - scan);\n        scan = strend - MAX_MATCH;\n\n        if (len > best_len) {\n          match_start = cur_match;\n          best_len = len;\n          if (len >= _nice_match)\n            break;\n          scan_end1 = window[scan + best_len - 1];\n          scan_end = window[scan + best_len];\n        }\n\n      } while ((cur_match = (prev[cur_match & wmask] & 0xffff)) > limit && --chain_length !== 0);\n\n      if (best_len <= lookahead)\n        return best_len;\n      return lookahead;\n    }\n\n    // Compress as much as possible from the input stream, return the current\n    // block state.\n    // This function does not perform lazy evaluation of matches and inserts\n    // new strings in the dictionary only for unmatched strings or for short\n    // matches. It is used only for the fast compression options.\n    function deflate_fast(flush) {\n      // short hash_head = 0; // head of the hash chain\n      var hash_head = 0; // head of the hash chain\n      var bflush; // set if current block must be flushed\n\n      while (true) {\n        // Make sure that we always have enough lookahead, except\n        // at the end of the input file. We need MAX_MATCH bytes\n        // for the next match, plus MIN_MATCH bytes to insert the\n        // string following the next match.\n        if (lookahead < MIN_LOOKAHEAD) {\n          fill_window();\n          if (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n            return NeedMore;\n          }\n          if (lookahead === 0)\n            break; // flush the current block\n        }\n\n        // Insert the string window[strstart .. strstart+2] in the\n        // dictionary, and set hash_head to the head of the hash chain:\n        if (lookahead >= MIN_MATCH) {\n          ins_h = (((ins_h) << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\n          // prev[strstart&w_mask]=hash_head=head[ins_h];\n          hash_head = (head[ins_h] & 0xffff);\n          prev[strstart & w_mask] = head[ins_h];\n          head[ins_h] = strstart;\n        }\n\n        // Find the longest match, discarding those <= prev_length.\n        // At this point we have always match_length < MIN_MATCH\n\n        if (hash_head !== 0 && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n          // To simplify the code, we prevent matches with the string\n          // of window index 0 (in particular we have to avoid a match\n          // of the string with itself at the start of the input file).\n          if (strategy != Z_HUFFMAN_ONLY) {\n            match_length = longest_match(hash_head);\n          }\n          // longest_match() sets match_start\n        }\n        if (match_length >= MIN_MATCH) {\n          // check_match(strstart, match_start, match_length);\n\n          bflush = _tr_tally(strstart - match_start, match_length - MIN_MATCH);\n\n          lookahead -= match_length;\n\n          // Insert new strings in the hash table only if the match length\n          // is not too large. This saves time but degrades compression.\n          if (match_length <= max_lazy_match && lookahead >= MIN_MATCH) {\n            match_length--; // string at strstart already in hash table\n            do {\n              strstart++;\n\n              ins_h = ((ins_h << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n              // prev[strstart&w_mask]=hash_head=head[ins_h];\n              hash_head = (head[ins_h] & 0xffff);\n              prev[strstart & w_mask] = head[ins_h];\n              head[ins_h] = strstart;\n\n              // strstart never exceeds WSIZE-MAX_MATCH, so there are\n              // always MIN_MATCH bytes ahead.\n            } while (--match_length !== 0);\n            strstart++;\n          } else {\n            strstart += match_length;\n            match_length = 0;\n            ins_h = window[strstart] & 0xff;\n\n            ins_h = (((ins_h) << hash_shift) ^ (window[strstart + 1] & 0xff)) & hash_mask;\n            // If lookahead < MIN_MATCH, ins_h is garbage, but it does\n            // not\n            // matter since it will be recomputed at next deflate call.\n          }\n        } else {\n          // No match, output a literal byte\n\n          bflush = _tr_tally(0, window[strstart] & 0xff);\n          lookahead--;\n          strstart++;\n        }\n        if (bflush) {\n\n          flush_block_only(false);\n          if (strm.avail_out === 0)\n            return NeedMore;\n        }\n      }\n\n      flush_block_only(flush == Z_FINISH);\n      if (strm.avail_out === 0) {\n        if (flush == Z_FINISH)\n          return FinishStarted;\n        else\n          return NeedMore;\n      }\n      return flush == Z_FINISH ? FinishDone : BlockDone;\n    }\n\n    // Same as above, but achieves better compression. We use a lazy\n    // evaluation for matches: a match is finally adopted only if there is\n    // no better match at the next window position.\n    function deflate_slow(flush) {\n      // short hash_head = 0; // head of hash chain\n      var hash_head = 0; // head of hash chain\n      var bflush; // set if current block must be flushed\n      var max_insert;\n\n      // Process the input block.\n      while (true) {\n        // Make sure that we always have enough lookahead, except\n        // at the end of the input file. We need MAX_MATCH bytes\n        // for the next match, plus MIN_MATCH bytes to insert the\n        // string following the next match.\n\n        if (lookahead < MIN_LOOKAHEAD) {\n          fill_window();\n          if (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n            return NeedMore;\n          }\n          if (lookahead === 0)\n            break; // flush the current block\n        }\n\n        // Insert the string window[strstart .. strstart+2] in the\n        // dictionary, and set hash_head to the head of the hash chain:\n\n        if (lookahead >= MIN_MATCH) {\n          ins_h = (((ins_h) << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n          // prev[strstart&w_mask]=hash_head=head[ins_h];\n          hash_head = (head[ins_h] & 0xffff);\n          prev[strstart & w_mask] = head[ins_h];\n          head[ins_h] = strstart;\n        }\n\n        // Find the longest match, discarding those <= prev_length.\n        prev_length = match_length;\n        prev_match = match_start;\n        match_length = MIN_MATCH - 1;\n\n        if (hash_head !== 0 && prev_length < max_lazy_match && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n          // To simplify the code, we prevent matches with the string\n          // of window index 0 (in particular we have to avoid a match\n          // of the string with itself at the start of the input file).\n\n          if (strategy != Z_HUFFMAN_ONLY) {\n            match_length = longest_match(hash_head);\n          }\n          // longest_match() sets match_start\n\n          if (match_length <= 5 && (strategy == Z_FILTERED || (match_length == MIN_MATCH && strstart - match_start > 4096))) {\n\n            // If prev_match is also MIN_MATCH, match_start is garbage\n            // but we will ignore the current match anyway.\n            match_length = MIN_MATCH - 1;\n          }\n        }\n\n        // If there was a match at the previous step and the current\n        // match is not better, output the previous match:\n        if (prev_length >= MIN_MATCH && match_length <= prev_length) {\n          max_insert = strstart + lookahead - MIN_MATCH;\n          // Do not insert strings in hash table beyond this.\n\n          // check_match(strstart-1, prev_match, prev_length);\n\n          bflush = _tr_tally(strstart - 1 - prev_match, prev_length - MIN_MATCH);\n\n          // Insert in hash table all strings up to the end of the match.\n          // strstart-1 and strstart are already inserted. If there is not\n          // enough lookahead, the last two strings are not inserted in\n          // the hash table.\n          lookahead -= prev_length - 1;\n          prev_length -= 2;\n          do {\n            if (++strstart <= max_insert) {\n              ins_h = (((ins_h) << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n              // prev[strstart&w_mask]=hash_head=head[ins_h];\n              hash_head = (head[ins_h] & 0xffff);\n              prev[strstart & w_mask] = head[ins_h];\n              head[ins_h] = strstart;\n            }\n          } while (--prev_length !== 0);\n          match_available = 0;\n          match_length = MIN_MATCH - 1;\n          strstart++;\n\n          if (bflush) {\n            flush_block_only(false);\n            if (strm.avail_out === 0)\n              return NeedMore;\n          }\n        } else if (match_available !== 0) {\n\n          // If there was no match at the previous position, output a\n          // single literal. If there was a match but the current match\n          // is longer, truncate the previous match to a single literal.\n\n          bflush = _tr_tally(0, window[strstart - 1] & 0xff);\n\n          if (bflush) {\n            flush_block_only(false);\n          }\n          strstart++;\n          lookahead--;\n          if (strm.avail_out === 0)\n            return NeedMore;\n        } else {\n          // There is no previous match to compare with, wait for\n          // the next step to decide.\n\n          match_available = 1;\n          strstart++;\n          lookahead--;\n        }\n      }\n\n      if (match_available !== 0) {\n        bflush = _tr_tally(0, window[strstart - 1] & 0xff);\n        match_available = 0;\n      }\n      flush_block_only(flush == Z_FINISH);\n\n      if (strm.avail_out === 0) {\n        if (flush == Z_FINISH)\n          return FinishStarted;\n        else\n          return NeedMore;\n      }\n\n      return flush == Z_FINISH ? FinishDone : BlockDone;\n    }\n\n    function deflateReset(strm) {\n      strm.total_in = strm.total_out = 0;\n      strm.msg = null; //\n\n      that.pending = 0;\n      that.pending_out = 0;\n\n      status = BUSY_STATE;\n\n      last_flush = Z_NO_FLUSH;\n\n      tr_init();\n      lm_init();\n      return Z_OK;\n    }\n\n    that.deflateInit = function (strm, _level, bits, _method, memLevel, _strategy) {\n      if (!_method)\n        _method = Z_DEFLATED;\n      if (!memLevel)\n        memLevel = DEF_MEM_LEVEL;\n      if (!_strategy)\n        _strategy = Z_DEFAULT_STRATEGY;\n\n      // byte[] my_version=ZLIB_VERSION;\n\n      //\n      // if (!version || version[0] != my_version[0]\n      // || stream_size != sizeof(z_stream)) {\n      // return Z_VERSION_ERROR;\n      // }\n\n      strm.msg = null;\n\n      if (_level == Z_DEFAULT_COMPRESSION)\n        _level = 6;\n\n      if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || _method != Z_DEFLATED || bits < 9 || bits > 15 || _level < 0 || _level > 9 || _strategy < 0 ||\n        _strategy > Z_HUFFMAN_ONLY) {\n        return Z_STREAM_ERROR;\n      }\n\n      strm.dstate = that;\n\n      w_bits = bits;\n      w_size = 1 << w_bits;\n      w_mask = w_size - 1;\n\n      hash_bits = memLevel + 7;\n      hash_size = 1 << hash_bits;\n      hash_mask = hash_size - 1;\n      hash_shift = Math.floor((hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n      window = new Uint8Array(w_size * 2);\n      prev = [];\n      head = [];\n\n      lit_bufsize = 1 << (memLevel + 6); // 16K elements by default\n\n      // We overlay pending_buf and d_buf+l_buf. This works since the average\n      // output size for (length,distance) codes is <= 24 bits.\n      that.pending_buf = new Uint8Array(lit_bufsize * 4);\n      pending_buf_size = lit_bufsize * 4;\n\n      d_buf = Math.floor(lit_bufsize / 2);\n      l_buf = (1 + 2) * lit_bufsize;\n\n      level = _level;\n\n      strategy = _strategy;\n      method = _method & 0xff;\n\n      return deflateReset(strm);\n    };\n\n    that.deflateEnd = function () {\n      if (status != INIT_STATE && status != BUSY_STATE && status != FINISH_STATE) {\n        return Z_STREAM_ERROR;\n      }\n      // Deallocate in reverse order of allocations:\n      that.pending_buf = null;\n      head = null;\n      prev = null;\n      window = null;\n      // free\n      that.dstate = null;\n      return status == BUSY_STATE ? Z_DATA_ERROR : Z_OK;\n    };\n\n    that.deflateParams = function (strm, _level, _strategy) {\n      var err = Z_OK;\n\n      if (_level == Z_DEFAULT_COMPRESSION) {\n        _level = 6;\n      }\n      if (_level < 0 || _level > 9 || _strategy < 0 || _strategy > Z_HUFFMAN_ONLY) {\n        return Z_STREAM_ERROR;\n      }\n\n      if (config_table[level].func != config_table[_level].func && strm.total_in !== 0) {\n        // Flush the last buffer:\n        err = strm.deflate(Z_PARTIAL_FLUSH);\n      }\n\n      if (level != _level) {\n        level = _level;\n        max_lazy_match = config_table[level].max_lazy;\n        good_match = config_table[level].good_length;\n        nice_match = config_table[level].nice_length;\n        max_chain_length = config_table[level].max_chain;\n      }\n      strategy = _strategy;\n      return err;\n    };\n\n    that.deflateSetDictionary = function (strm, dictionary, dictLength) {\n      var length = dictLength;\n      var n, index = 0;\n\n      if (!dictionary || status != INIT_STATE)\n        return Z_STREAM_ERROR;\n\n      if (length < MIN_MATCH)\n        return Z_OK;\n      if (length > w_size - MIN_LOOKAHEAD) {\n        length = w_size - MIN_LOOKAHEAD;\n        index = dictLength - length; // use the tail of the dictionary\n      }\n      window.set(dictionary.subarray(index, index + length), 0);\n\n      strstart = length;\n      block_start = length;\n\n      // Insert all strings in the hash table (except for the last two bytes).\n      // s->lookahead stays null, so s->ins_h will be recomputed at the next\n      // call of fill_window.\n\n      ins_h = window[0] & 0xff;\n      ins_h = (((ins_h) << hash_shift) ^ (window[1] & 0xff)) & hash_mask;\n\n      for (n = 0; n <= length - MIN_MATCH; n++) {\n        ins_h = (((ins_h) << hash_shift) ^ (window[(n) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n        prev[n & w_mask] = head[ins_h];\n        head[ins_h] = n;\n      }\n      return Z_OK;\n    };\n\n    that.deflate = function (_strm, flush) {\n      var i, header, level_flags, old_flush, bstate;\n\n      if (flush > Z_FINISH || flush < 0) {\n        return Z_STREAM_ERROR;\n      }\n\n      if (!_strm.next_out || (!_strm.next_in && _strm.avail_in !== 0) || (status == FINISH_STATE && flush != Z_FINISH)) {\n        _strm.msg = z_errmsg[Z_NEED_DICT - (Z_STREAM_ERROR)];\n        return Z_STREAM_ERROR;\n      }\n      if (_strm.avail_out === 0) {\n        _strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n        return Z_BUF_ERROR;\n      }\n\n      strm = _strm; // just in case\n      old_flush = last_flush;\n      last_flush = flush;\n\n      // Write the zlib header\n      if (status == INIT_STATE) {\n        header = (Z_DEFLATED + ((w_bits - 8) << 4)) << 8;\n        level_flags = ((level - 1) & 0xff) >> 1;\n\n        if (level_flags > 3)\n          level_flags = 3;\n        header |= (level_flags << 6);\n        if (strstart !== 0)\n          header |= PRESET_DICT;\n        header += 31 - (header % 31);\n\n        status = BUSY_STATE;\n        putShortMSB(header);\n      }\n\n      // Flush as much pending output as possible\n      if (that.pending !== 0) {\n        strm.flush_pending();\n        if (strm.avail_out === 0) {\n          // console.log(\" avail_out==0\");\n          // Since avail_out is 0, deflate will be called again with\n          // more output space, but possibly with both pending and\n          // avail_in equal to zero. There won't be anything to do,\n          // but this is not an error situation so make sure we\n          // return OK instead of BUF_ERROR at next call of deflate:\n          last_flush = -1;\n          return Z_OK;\n        }\n\n        // Make sure there is something to do and avoid duplicate\n        // consecutive\n        // flushes. For repeated and useless calls with Z_FINISH, we keep\n        // returning Z_STREAM_END instead of Z_BUFF_ERROR.\n      } else if (strm.avail_in === 0 && flush <= old_flush && flush != Z_FINISH) {\n        strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n        return Z_BUF_ERROR;\n      }\n\n      // User must not provide more input after the first FINISH:\n      if (status == FINISH_STATE && strm.avail_in !== 0) {\n        _strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n        return Z_BUF_ERROR;\n      }\n\n      // Start a new block or continue the current one.\n      if (strm.avail_in !== 0 || lookahead !== 0 || (flush != Z_NO_FLUSH && status != FINISH_STATE)) {\n        bstate = -1;\n        switch (config_table[level].func) {\n          case STORED:\n            bstate = deflate_stored(flush);\n            break;\n          case FAST:\n            bstate = deflate_fast(flush);\n            break;\n          case SLOW:\n            bstate = deflate_slow(flush);\n            break;\n          default:\n        }\n\n        if (bstate == FinishStarted || bstate == FinishDone) {\n          status = FINISH_STATE;\n        }\n        if (bstate == NeedMore || bstate == FinishStarted) {\n          if (strm.avail_out === 0) {\n            last_flush = -1; // avoid BUF_ERROR next call, see above\n          }\n          return Z_OK;\n          // If flush != Z_NO_FLUSH && avail_out === 0, the next call\n          // of deflate should use the same flush parameter to make sure\n          // that the flush is complete. So we don't have to output an\n          // empty block here, this will be done at next call. This also\n          // ensures that for a very small output buffer, we emit at most\n          // one empty block.\n        }\n\n        if (bstate == BlockDone) {\n          if (flush == Z_PARTIAL_FLUSH) {\n            _tr_align();\n          } else { // FULL_FLUSH or SYNC_FLUSH\n            _tr_stored_block(0, 0, false);\n            // For a full flush, this empty block will be recognized\n            // as a special marker by inflate_sync().\n            if (flush == Z_FULL_FLUSH) {\n              // state.head[s.hash_size-1]=0;\n              for (i = 0; i < hash_size /*-1*/; i++)\n                // forget history\n                head[i] = 0;\n            }\n          }\n          strm.flush_pending();\n          if (strm.avail_out === 0) {\n            last_flush = -1; // avoid BUF_ERROR at next call, see above\n            return Z_OK;\n          }\n        }\n      }\n\n      if (flush != Z_FINISH)\n        return Z_OK;\n      return Z_STREAM_END;\n    };\n  }\n\n  // ZStream\n\n  function ZStream() {\n    var that = this;\n    that.next_in_index = 0;\n    that.next_out_index = 0;\n    // that.next_in; // next input byte\n    that.avail_in = 0; // number of bytes available at next_in\n    that.total_in = 0; // total nb of input bytes read so far\n    // that.next_out; // next output byte should be put there\n    that.avail_out = 0; // remaining free space at next_out\n    that.total_out = 0; // total nb of bytes output so far\n    // that.msg;\n    // that.dstate;\n  }\n\n  ZStream.prototype = {\n    deflateInit: function (level, bits) {\n      var that = this;\n      that.dstate = new Deflate();\n      if (!bits)\n        bits = MAX_BITS;\n      return that.dstate.deflateInit(that, level, bits);\n    },\n\n    deflate: function (flush) {\n      var that = this;\n      if (!that.dstate) {\n        return Z_STREAM_ERROR;\n      }\n      return that.dstate.deflate(that, flush);\n    },\n\n    deflateEnd: function () {\n      var that = this;\n      if (!that.dstate)\n        return Z_STREAM_ERROR;\n      var ret = that.dstate.deflateEnd();\n      that.dstate = null;\n      return ret;\n    },\n\n    deflateParams: function (level, strategy) {\n      var that = this;\n      if (!that.dstate)\n        return Z_STREAM_ERROR;\n      return that.dstate.deflateParams(that, level, strategy);\n    },\n\n    deflateSetDictionary: function (dictionary, dictLength) {\n      var that = this;\n      if (!that.dstate)\n        return Z_STREAM_ERROR;\n      return that.dstate.deflateSetDictionary(that, dictionary, dictLength);\n    },\n\n    // Read a new buffer from the current input stream, update the\n    // total number of bytes read. All deflate() input goes through\n    // this function so some applications may wish to modify it to avoid\n    // allocating a large strm->next_in buffer and copying from it.\n    // (See also flush_pending()).\n    read_buf: function (buf, start, size) {\n      var that = this;\n      var len = that.avail_in;\n      if (len > size)\n        len = size;\n      if (len === 0)\n        return 0;\n      that.avail_in -= len;\n      buf.set(that.next_in.subarray(that.next_in_index, that.next_in_index + len), start);\n      that.next_in_index += len;\n      that.total_in += len;\n      return len;\n    },\n\n    // Flush as much pending output as possible. All deflate() output goes\n    // through this function so some applications may wish to modify it\n    // to avoid allocating a large strm->next_out buffer and copying into it.\n    // (See also read_buf()).\n    flush_pending: function () {\n      var that = this;\n      var len = that.dstate.pending;\n\n      if (len > that.avail_out)\n        len = that.avail_out;\n      if (len === 0)\n        return;\n\n      // if (that.dstate.pending_buf.length <= that.dstate.pending_out || that.next_out.length <= that.next_out_index\n      // || that.dstate.pending_buf.length < (that.dstate.pending_out + len) || that.next_out.length < (that.next_out_index +\n      // len)) {\n      // console.log(that.dstate.pending_buf.length + \", \" + that.dstate.pending_out + \", \" + that.next_out.length + \", \" +\n      // that.next_out_index + \", \" + len);\n      // console.log(\"avail_out=\" + that.avail_out);\n      // }\n\n      that.next_out.set(that.dstate.pending_buf.subarray(that.dstate.pending_out, that.dstate.pending_out + len), that.next_out_index);\n\n      that.next_out_index += len;\n      that.dstate.pending_out += len;\n      that.total_out += len;\n      that.avail_out -= len;\n      that.dstate.pending -= len;\n      if (that.dstate.pending === 0) {\n        that.dstate.pending_out = 0;\n      }\n    }\n  };\n\n  // Deflater\n\n  function Deflater(options) {\n    var that = this;\n    var z = new ZStream();\n    var bufsize = 512;\n    var flush = Z_NO_FLUSH;\n    var buf = new Uint8Array(bufsize);\n    var level = options ? options.level : Z_DEFAULT_COMPRESSION;\n    if (typeof level == \"undefined\")\n      level = Z_DEFAULT_COMPRESSION;\n    z.deflateInit(level);\n    z.next_out = buf;\n\n    that.append = function (data, onprogress) {\n      var err, buffers = [],\n        lastIndex = 0,\n        bufferIndex = 0,\n        bufferSize = 0,\n        array;\n      if (!data.length)\n        return;\n      z.next_in_index = 0;\n      z.next_in = data;\n      z.avail_in = data.length;\n      do {\n        z.next_out_index = 0;\n        z.avail_out = bufsize;\n        err = z.deflate(flush);\n        if (err != Z_OK)\n          throw new Error(\"deflating: \" + z.msg);\n        if (z.next_out_index)\n          if (z.next_out_index == bufsize)\n            buffers.push(new Uint8Array(buf));\n          else\n            buffers.push(new Uint8Array(buf.subarray(0, z.next_out_index)));\n        bufferSize += z.next_out_index;\n        if (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n          onprogress(z.next_in_index);\n          lastIndex = z.next_in_index;\n        }\n      } while (z.avail_in > 0 || z.avail_out === 0);\n      array = new Uint8Array(bufferSize);\n      buffers.forEach(function (chunk) {\n        array.set(chunk, bufferIndex);\n        bufferIndex += chunk.length;\n      });\n      return array;\n    };\n    that.flush = function () {\n      var err, buffers = [],\n        bufferIndex = 0,\n        bufferSize = 0,\n        array;\n      do {\n        z.next_out_index = 0;\n        z.avail_out = bufsize;\n        err = z.deflate(Z_FINISH);\n        if (err != Z_STREAM_END && err != Z_OK)\n          throw new Error(\"deflating: \" + z.msg);\n        if (bufsize - z.avail_out > 0)\n          buffers.push(new Uint8Array(buf.subarray(0, z.next_out_index)));\n        bufferSize += z.next_out_index;\n      } while (z.avail_in > 0 || z.avail_out === 0);\n      z.deflateEnd();\n      array = new Uint8Array(bufferSize);\n      buffers.forEach(function (chunk) {\n        array.set(chunk, bufferIndex);\n        bufferIndex += chunk.length;\n      });\n      return array;\n    };\n  }\n\n  // 'zip' may not be defined in z-worker and some tests\n  var env = global.zip || global;\n  env.Deflater = env._jzlib_Deflater = Deflater;\n})(zipExport);\n\n\nvar zip = zipExport.zip;\n\nexport { zip }\n","import React from \"react\";\n\nconst WebrcadeContext = React.createContext({});\nexport { WebrcadeContext }\n","import React, { Component } from \"react\";\n\nimport { GamepadEnum } from \"../../../input\"\nimport { WebrcadeContext } from '../../context/webrcadecontext.js'\n\nimport styles from './style.scss'\n\nexport class ImageButton extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      focused: false\n    };\n  }\n\n  gamepadCallback = (e) => {\n    const { disabled, onPad } = this.props;\n    const { focused } = this.state;\n\n    if (!focused) return false;\n\n    if (disabled) {\n      this.setState({ focused: false });\n      return false;\n    }\n\n    switch (e.type) {\n      case GamepadEnum.A:\n        this.onClick();\n        break;\n      case GamepadEnum.DOWN:\n      case GamepadEnum.UP:\n      case GamepadEnum.LEFT:\n      case GamepadEnum.RIGHT:\n        if (onPad) onPad(e);\n        break;\n      default:\n        break;\n    }\n    return true;\n  }\n\n  componentDidMount() {\n    const { gamepadNotifier } = this.context;\n\n    if (gamepadNotifier) {\n      gamepadNotifier.addCallback(this.gamepadCallback);\n    }\n  }\n\n  componentWillUnmount() {\n    const { gamepadNotifier } = this.context;\n\n    if (gamepadNotifier) {\n      gamepadNotifier.removeCallback(this.gamepadCallback);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { disabled } = this.props;\n    const { focused } = this.state;\n\n    if (disabled && focused) {\n      this.setState({ focused: false });\n    }\n  }\n\n  onClick = e => {\n    const { onClick } = this.props;\n    if (onClick) onClick();\n  }\n\n  onFocus = () => {\n    this.setState({ focused: true });\n  }\n\n  onBlur = () => {\n    this.setState({ focused: false });\n  }\n\n  isFocusable() {\n    const { button } = this;\n    const { disabled } = this.props;\n    if (disabled) {\n      return false;\n    }\n\n    return (button.offsetWidth > 0 && button.offsetHeight);\n  }\n\n  focus() {\n    const { disabled } = this.props;\n    const { focused } = this.state;\n    const { button } = this;\n    const disabledBtn = disabled ? true : false;\n\n    if (!focused && !disabledBtn && button) {\n      button.focus();\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { className, disabled, hoverImgSrc, imgSrc, label } = this.props;\n    const { focused } = this.state;\n\n    const disabledBtn = disabled ? true : false;\n\n    return (\n      <button\n        disabled={disabledBtn}\n        className={className === undefined ? styles['image-button'] : className}\n        ref={(button) => { this.button = button; }}\n        onClick={this.onClick}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}> {imgSrc ?\n          <img alt={label} src={focused && hoverImgSrc ? hoverImgSrc : imgSrc}></img> : null}\n        <div>{label}</div>\n      </button>\n    );\n  }\n};\n\nImageButton.contextType = WebrcadeContext;\n","import { Component } from \"react\";\nimport { FocusGrid, GamepadEnum, GamepadNotifier, KCODES } from \"../../../input\"\n\nimport styles from './style.scss'\n\nexport class Screen extends Component {\n  constructor() {\n    super();\n\n    this.defaultGamepadCallback = e => {\n      this.focus();\n      return true;\n    }\n  }\n\n  focusGrid = new FocusGrid();\n  gamepadNotifier = new GamepadNotifier();\n  screenContext = {\n    gamepadNotifier: this.gamepadNotifier,\n    focusGrid: this.focusGrid\n  };\n  screenStyles = styles;\n\n  focus() {\n    const { focusGrid } = this;\n\n    focusGrid.focus();\n  }\n\n  close() {\n    const { closeCallback } = this.props;\n\n    if (closeCallback) closeCallback();\n  }\n\n  globalGamepadCallback = e => {\n    if (e.type === GamepadEnum.ESC) {\n      this.close();\n    }\n  }\n\n  handleKeyUpEvent = (e) => {\n    if (e.code === KCODES.ESCAPE) {\n      this.close();\n    }\n  }\n\n  componentDidMount() {\n    const { gamepadNotifier } = this;\n\n    gamepadNotifier.start();\n    gamepadNotifier.setDefaultCallback(this.defaultGamepadCallback);\n    gamepadNotifier.addGlobalCallback(this.globalGamepadCallback);\n\n    const docElement = document.documentElement;\n    docElement.addEventListener(\"keyup\", this.handleKeyUpEvent);\n\n    setTimeout(() => { this.focus() }, 50);\n  }\n\n  componentWillUnmount() {\n    const { gamepadNotifier } = this;\n\n    gamepadNotifier.stop();\n    gamepadNotifier.setDefaultCallback(null);\n    gamepadNotifier.removeGlobalCallback(this.globalGamepadCallback);\n\n    const docElement = document.documentElement;\n    docElement.removeEventListener(\"keyup\", this.handleKeyUpEvent);\n  }\n}\n","import React from \"react\";\nimport { ImageButton } from \"../../components/image-button\";\nimport { Resources, TEXT_IDS } from \"../../../resources\"\nimport { Screen } from \"../../components/screen\"\nimport { WebrcadeContext } from \"../../context/webrcadecontext.js\"\n\nimport styles from './style.scss'\n\nexport class AlertScreen extends Screen {\n  constructor() {\n    super();\n\n    this.okButtonRef = React.createRef();\n\n    this.focusGrid.setComponents([\n      [this.okButtonRef],\n    ]);\n  }\n\n  render() {\n    const { okButtonRef, screenContext, screenStyles } = this;\n    const { message, showButtons } = this.props;\n    const buttonStyle = !showButtons ? {display: 'none'} : null;\n\n    return (\n      <WebrcadeContext.Provider value={screenContext}>\n        <div className={styles['alert-screen'] }>\n          <div className={styles['alert-screen-inner'] + \" \" + screenStyles.screen}>\n            <div className={styles['alert-screen-message']}>{message}</div>\n            <div className={styles['error-screen-buttons']} style={buttonStyle}>\n              <ImageButton\n                ref={okButtonRef}\n                label={Resources.getText(TEXT_IDS.OK)}\n                onClick={() => this.close()}\n              />\n            </div>\n          </div>\n        </div>\n      </WebrcadeContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport { ImageButton } from \"../../components/image-button\";\nimport { Resources, TEXT_IDS } from \"../../../resources\"\nimport { Screen } from \"../../components/screen\"\nimport { WebrcadeContext } from \"../../context/webrcadecontext.js\"\n\nimport styles from './style.scss'\n\nexport class ErrorScreen extends Screen {\n  constructor() {\n    super();\n\n    this.okButtonRef = React.createRef();\n\n    this.focusGrid.setComponents([\n      [this.okButtonRef],\n    ]);\n  }\n\n  formatMessage(message) {\n    return (\n      message.split(\"\\n\").map((item) => {\n        return item + \"<br/>\";\n      })\n    );\n  }\n\n  render() {\n    const { okButtonRef, screenContext, screenStyles } = this;\n    let { message } = this.props;\n\n    if (message.message) {\n      message = message.message;\n    }\n    if (!message) {\n      message = Resources.getText(TEXT_IDS.ERROR_UNKNOWN);\n    }\n\n    const msg = message + \"\\n\" + Resources.getText(TEXT_IDS.SEE_CONSOLE_LOG);\n\n    return (\n      <WebrcadeContext.Provider value={screenContext}>\n        <div className={styles['error-screen'] }>\n          <div className={styles['error-screen-inner'] + \" \" + screenStyles.screen}>\n            <div className={styles['error-screen-heading']}>\n              {Resources.getText(TEXT_IDS.SOMETHING_WENT_WRONG)}\n            </div>\n            <div className={styles['error-screen-message']}>\n              {msg.split('\\n').map(function (item, key) {\n                return key < 5 ? (\n                  <div key={key}>{item}</div>\n                ) : null;\n              })}\n            </div>\n            <div className={styles['error-screen-buttons']}>\n              <ImageButton\n                ref={okButtonRef}\n                label={Resources.getText(TEXT_IDS.OK)}\n                onClick={() => this.close()}\n              />\n            </div>\n          </div>\n        </div>\n      </WebrcadeContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport { isTouchSupported } from \"../../../util/browser\";\nimport { Resources, TEXT_IDS } from \"../../../resources\";\nimport { Screen } from '../../components/screen'\nimport { VolumeOffBlackImage } from \"../../../images/index.js\"\nimport { WebrcadeContext } from \"../../context/webrcadecontext.js\"\n\nimport styles from './style.scss'\n\nexport class OverlayScreen extends Screen {\n  constructor() {\n    super();\n\n    this.unmuteTextTimeoutId = null;\n    this.state = {\n      hideUnmuteText: false\n    };\n  }\n\n  componentDidMount() {\n    this.unmuteTextTimeoutId = setTimeout(() => {\n      this.unmuteTextTimeoutId = null;\n      this.setState({hideUnmuteText: true});\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    const { unmuteTextTimeoutId } = this;\n\n    if (unmuteTextTimeoutId) {\n      clearTimeout(unmuteTextTimeoutId);\n    }\n  }\n\n  render() {\n    const { screenContext, screenStyles, } = this;\n    const { hideUnmuteText } = this.state;\n\n    const buttonPrefix = \"overlay-screen-inner-unmute-button\";\n\n    const tapText = Resources.getText(\n      isTouchSupported() ? TEXT_IDS.TAP_TO_UNMUTE : TEXT_IDS.CLICK_TO_UNMUTE);\n\n    return (\n      <WebrcadeContext.Provider value={screenContext}>\n        <div className={styles['overlay-screen']}>\n          <div className={styles['overlay-screen-inner'] + \" \" + screenStyles.screen}>\n            <div className={styles['overlay-screen-inner-unmute']}>\n              <button\n                tabIndex=\"-1\"\n                className={styles[buttonPrefix]}>\n                <img className={styles[buttonPrefix + '-img']} alt={tapText} src={VolumeOffBlackImage}></img>\n                <div className={styles[buttonPrefix + '-label'] + \" \" + (hideUnmuteText ? styles[buttonPrefix + '-label--hide'] : \"\")}>\n                  <div className={styles[buttonPrefix + '-label-inner']}>{tapText}</div>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </WebrcadeContext.Provider>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { ArrowBackWhiteImage, PlayArrowWhiteImage } from \"../../../images\";\nimport { ImageButton } from \"../../components/image-button\";\nimport { Resources, TEXT_IDS } from \"../../../resources\";\nimport { Screen } from '../../components/screen'\nimport { WebrcadeContext } from \"../../context/webrcadecontext.js\"\n\nimport styles from './style.scss'\n\nexport class PauseScreenButton extends ImageButton {\n  render() {\n    const {buttonRef, onHandlePad, ...other} = this.props;\n    const { focusGrid } = this.context;\n\n    return (\n      <ImageButton\n        ref={buttonRef}\n        className={styles[\"pause-screen-image-button\"]}\n        onPad={e => {\n          if (onHandlePad) onHandlePad(focusGrid, e);\n        }}\n        {...other}\n      />\n    );\n  }\n}\n\nexport class PauseScreen extends Screen {\n  constructor() {\n    super();\n\n    this.pauseStyles = styles;\n    this.exitButtonRef = React.createRef();\n    this.resumeButtonRef = React.createRef();\n\n    this.focusGrid.setComponents(this.getFocusGridComponents());\n  }\n\n  getFocusGridComponents() {\n    return [[this.exitButtonRef, this.resumeButtonRef]];\n  }\n\n  focus() {\n    const { resumeButtonRef } = this;\n\n    if (this.gamepadNotifier.padCount > 0) {\n      if (resumeButtonRef && resumeButtonRef.current) {\n        resumeButtonRef.current.focus();\n      }\n    }\n  }\n\n  getAdditionalButtons() {\n    return null;\n  }\n\n  render() {\n    const { exitButtonRef, focusGrid, resumeButtonRef, screenContext,\n      screenStyles } = this;\n    const { appProps, exitCallback, isEditor } = this.props;\n\n    return (\n      <WebrcadeContext.Provider value={screenContext}>\n        <div className={screenStyles['screen-transparency']} />\n        <div className={styles['pause-screen']}>\n          <div className={styles['pause-screen-inner'] + \" \" + screenStyles.screen}>\n            <div className={styles['pause-screen-inner-info']}>\n              <div className={styles['pause-screen-inner-info-title']}>{appProps.title}</div>\n              <div className={styles['pause-screen-inner-info-app']}>{appProps.app}</div>\n            </div>\n            <div className={styles['pause-screen-inner-buttons']}>\n              <div className={styles['pause-screen-inner-buttons-container']}>\n                <PauseScreenButton\n                    className={styles[\"pause-screen-image-button\"]}\n\n                    imgSrc={ArrowBackWhiteImage}\n                    buttonRef={exitButtonRef}\n                    label={Resources.getText( isEditor ?\n                      TEXT_IDS.RETURN_TO_EDITOR : TEXT_IDS.RETURN_TO_BROWSE)}\n                    onHandlePad={(focusGrid, e) => focusGrid.moveFocus(e.type, exitButtonRef)}\n                    onClick={() => {if (exitCallback) exitCallback()}}\n                />\n                {this.getAdditionalButtons()}\n                <PauseScreenButton\n                    className={styles[\"pause-screen-image-button\"]}\n\n                    imgSrc={PlayArrowWhiteImage}\n                    buttonRef={this.resumeButtonRef}\n                    label={Resources.getText(TEXT_IDS.RESUME)}\n                    onHandlePad={(focusGrid, e) => focusGrid.moveFocus(e.type, resumeButtonRef)}\n                    onClick={() => this.close()}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </WebrcadeContext.Provider>\n    );\n  }\n}\n\nexport class CustomPauseScreen extends PauseScreen {\n\n  componentDidMount() {\n    const { additionalButtonRefs } = this.props;\n    const { focusGrid } = this;\n\n    if (additionalButtonRefs) {\n      const comps = this.getFocusGridComponents();\n      comps[0] = [comps[0][0], ...additionalButtonRefs, comps[0][1]];\n      focusGrid.setComponents(comps);\n    }\n\n    super.componentDidMount();\n  }\n\n  getAdditionalButtons() {\n    const { additionalButtons } = this.props;\n    return additionalButtons;\n  }\n}\n","import React from \"react\";\nimport { ImageButton } from \"../../components/image-button\";\nimport { Resources, TEXT_IDS } from \"../../../resources\"\nimport { Screen } from \"../../components/screen\"\nimport { WebrcadeContext } from \"../../context/webrcadecontext.js\"\n\nimport styles from './style.scss'\n\nexport class YesNoScreen extends Screen {\n  constructor() {\n    super();\n\n    this.yesButtonRef = React.createRef();\n    this.noButtonRef = React.createRef();\n\n    this.focusGrid.setComponents([\n      [this.yesButtonRef, this.noButtonRef]\n    ]);\n\n    this.state = {};\n  }\n\n  focus() {\n    const { noButtonRef } = this;\n    if (noButtonRef && noButtonRef.current) {\n      noButtonRef.current.focus();\n    }\n  }\n\n  render() {\n    const { focusGrid, yesButtonRef, noButtonRef, screenContext, screenStyles } = this;\n    const { header, message, prompt, onYes, onNo } = this.props.info;\n\n    return (\n      <WebrcadeContext.Provider value={screenContext}>\n        <div className={styles['yesno-screen']}>\n          <div className={styles['yesno-screen-inner'] + \" \" + screenStyles.screen}>\n            <div className={styles['yesno-screen-heading']}>\n              {header}\n            </div>\n            <div className={styles['yesno-screen-message']}>\n              {message.split('\\n').map(function (item, key) {\n                return key < 10 ? (\n                  <div className={styles['yesno-screen-message-line']} key={key}>{item}</div>\n                ) : null;\n              })}\n            </div>\n            <div className={styles['yesno-screen-prompt']}>\n              {prompt}\n            </div>\n            <div className={styles['yesno-screen-buttons']}>\n              <ImageButton\n                ref={yesButtonRef}\n                label={Resources.getText(TEXT_IDS.YES)}\n                onPad={e => focusGrid.moveFocus(e.type, yesButtonRef)}\n                onClick={() => { if (onYes) onYes(this) }}\n              />\n              <ImageButton\n                ref={noButtonRef}\n                label={Resources.getText(TEXT_IDS.NO)}\n                onPad={e => focusGrid.moveFocus(e.type, noButtonRef)}\n                onClick={() => { if (onNo) onNo(this) }}\n              />\n            </div>\n          </div>\n        </div>\n      </WebrcadeContext.Provider>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport * as LOG from '../../../log'\nimport { isDev } from '../../../util'\nimport { AlertScreen } from \"../../screens/alert\";\nimport { AppProps } from '../../../app';\nimport { ErrorScreen } from \"../../screens/error\";\nimport { OverlayScreen } from \"../../screens/overlay\"\nimport { PauseScreen } from \"../../screens/pause\";\nimport { Resources, TEXT_IDS } from \"../../../resources\";\nimport { YesNoScreen } from \"../../screens/yesno\";\nimport { UrlUtil, addXboxFullscreenCallback, getXboxViewMessage, preloadImages } from '../../../util';\nimport {\n  VolumeOffBlackImage,\n  ArrowBackWhiteImage,\n  PlayArrowWhiteImage\n} from \"../../../images/index.js\"\n\n\nimport styles from './style.scss'\n\nexport class WebrcadeApp extends Component {\n  constructor() {\n    super();\n\n    preloadImages([\n      VolumeOffBlackImage,\n      ArrowBackWhiteImage,\n      PlayArrowWhiteImage\n    ]);\n\n    this.state = {\n      mode: this.ModeEnum.LOADING,\n      loadingPercent: null,\n      errorMessage: null,\n      yesNoInfo: null,\n      showOverlay: false,\n      showXboxViewMessage: false\n    };\n\n    this.exited = false;\n\n    // Add to window to allow for access from menu\n    window.app = this;\n  }\n\n  ModeEnum = {\n    LOADING: \"loading\",\n    LOADED: \"loaded\",\n    ERROR: \"error\",\n    YESNO: \"yesno\",\n    PAUSE: \"pause\"\n  }\n\n  messageListener = (e) => {\n    if (e.data === 'exit') {\n      this.exit(null, false)\n        .catch((e) => LOG.error(e))\n        .finally(() => {\n          setTimeout(() => {\n            e.source.postMessage(\"exitComplete\", \"*\");\n          }, 0)\n        });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", this.messageListener);\n\n    // Inform that the application was loaded\n    if (!isDev() && window.parent) {\n      window.parent.postMessage(\"appLoaded\", \"*\");\n    }\n\n    // Xbox view button bug\n    addXboxFullscreenCallback((show) => {\n      this.setState({ showXboxViewMessage: show })\n    });\n\n    // Avoid the white flash\n    if (!isDev()) {\n      try {\n        window.frameElement.style.display = 'block';\n      } catch (e) {\n        LOG.info('error attempting to make application visible: ' + e)\n      }\n    }\n\n    const url = window.location.search;\n    LOG.info(url);\n\n    // Get props\n    const propsEncoded = UrlUtil.getParam(\n      url, AppProps.RP_PROPS);\n    if (propsEncoded) {\n      this.appProps = AppProps.decode(propsEncoded);\n      this.type = this.appProps.type;\n    } else {\n      this.appProps = {};\n    }\n\n    //  Is editor\n    const context = UrlUtil.getParam(url, AppProps.RP_CONTEXT);\n    this.isEditor = context && context === AppProps.RV_CONTEXT_EDITOR;\n\n    // Set debug flag\n    this.debug = UrlUtil.getBoolParam(url, AppProps.RP_DEBUG);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.messageListener);\n  }\n\n  getAppType() {\n    return this.type;\n  }\n\n  getStoragePath(postfix) {\n    return `/wrc/${this.getAppType()}/${postfix}`;\n  }\n\n  renderLoading() {\n    const { loadingPercent } = this.state;\n    return (\n      <div>\n        <div className={styles.loading}>{Resources.getText(TEXT_IDS.LOADING)}...</div>\n        {loadingPercent !== null ?\n          <div className={styles['loading-percent']}>{loadingPercent}%</div> : null}\n      </div>\n    );\n  }\n\n  renderErrorScreen() {\n    const { errorCloseCallback, errorMessage } = this.state;\n\n    return (\n      <ErrorScreen message={errorMessage} closeCallback={errorCloseCallback} />\n    );\n  }\n\n  renderYesNoScreen() {\n    const { yesNoInfo } = this.state;\n\n    return (\n      <YesNoScreen info={yesNoInfo} />\n    );\n  }\n\n  renderPauseScreen() {\n    const { appProps } = this;\n\n    return (\n      <PauseScreen\n        appProps={appProps}\n        closeCallback={() => this.resume()}\n        exitCallback={() => this.exit()}\n        isEditor={this.isEditor}\n      />\n    );\n  }\n\n  renderXboxViewScreen() {\n    return (\n      <AlertScreen\n        message={getXboxViewMessage()}\n        showButtons={false}\n      />\n    );\n  }\n\n  renderOverlayScreen() {\n    return (\n      <OverlayScreen />\n    );\n  }\n\n  isDebug() {\n    return this.debug;\n  }\n\n  render() {\n    const { ModeEnum } = this;\n    const { mode, showOverlay, showXboxViewMessage } = this.state;\n\n    if (showXboxViewMessage) {\n      return this.renderXboxViewScreen();\n    } else if (mode === ModeEnum.ERROR) {\n      return this.renderErrorScreen();\n    } else if (mode === ModeEnum.YESNO) {\n      return this.renderYesNoScreen();\n    } else if (showOverlay) {\n      return this.renderOverlayScreen();\n    }\n\n    return null;\n  }\n\n  yesNoPrompt(info) {\n    const { ModeEnum } = this;\n    this.setState({\n      mode: ModeEnum.YESNO,\n      yesNoInfo: info\n    })\n  }\n\n  pause(resumeCallback) {\n    const { mode } = this.state;\n    const { ModeEnum } = this;\n\n    if (mode !== ModeEnum.PAUSE) {\n      this.setState({\n        mode: ModeEnum.PAUSE,\n        resumeCallback: resumeCallback\n      })\n      return true;\n    }\n    return false;\n  }\n\n  resume() {\n    const { mode, resumeCallback } = this.state;\n    const { ModeEnum } = this;\n\n    if (mode === ModeEnum.PAUSE) {\n      this.setState({\n        mode: ModeEnum.LOADED,\n        resumeCallback: null\n      }, () => resumeCallback());\n      return true;\n    }\n    return false;\n  }\n\n  isPauseScreen() {\n    const { mode } = this.state;\n    const { ModeEnum } = this;\n\n    return mode === ModeEnum.PAUSE;\n  }\n\n  // Async to allow for asynchronous saves, etc.\n  async onPreExit() {\n    LOG.info('onPreExit...');\n  }\n\n  async _exit(navigateBack) {\n    // Asynchronous to allow for async saves, etc.\n    try {\n      await this.onPreExit();\n    } catch (e) {\n      LOG.error(e);\n    }\n\n    if (navigateBack) window.history.back();\n  }\n\n  setShowOverlay(show) {\n    const { showOverlay } = this.state;\n    if (show != showOverlay) {\n      this.setState({ showOverlay: show });\n    }\n  }\n\n  isShowOverlay() {\n    const { showOverlay } = this.state;\n    return showOverlay;\n  }\n\n  async exit(error, navigateBack = true) {\n    const { ModeEnum } = this;\n\n    if (error) {\n      LOG.error(error);\n    }\n\n    if (!this.exited) {\n      this.exited = true;\n      LOG.info(\"exiting application...\")\n\n      if (error) {\n        this.setState({\n          mode: ModeEnum.ERROR,\n          errorMessage: error,\n          errorCloseCallback: async () => {\n            await this._exit(navigateBack);\n          }\n        });\n      } else {\n        await this._exit(navigateBack);\n      }\n    }\n  }\n}\n\n","import React, { Component } from \"react\";\n\nimport { WebrcadeContext } from '../../context/webrcadecontext.js'\nimport { ImageButton } from \"../image-button\";\n\nexport class FileButton extends ImageButton {\n  constructor() {\n    super();\n\n    this.fileInputRef = React.createRef();\n  }\n\n  onClick = e => {\n    const { onClick } = this.props;\n    if (onClick) onClick();\n    const { fileInputRef } = this;\n    fileInputRef.current.click();\n  }\n\n  render() {\n    const { fileInputRef } = this;\n    const { onFileSelect } = this.props;\n\n    return (\n      <div>\n        {super.render()}\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          style={{ display: 'none' }}\n          onChange={onFileSelect}\n        />\n      </div>\n    );\n  }\n};\n\nFileButton.contextType = WebrcadeContext;\n","import React, { Component } from \"react\";\n\nimport { GamepadEnum } from \"../../../input\"\nimport { WebrcadeContext } from '../../context/webrcadecontext.js'\n\nimport styles from './style.scss'\n\nexport class Switch extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      focused: false\n    };\n  }\n\n  gamepadCallback = (e) => {\n    const { onPad } = this.props;\n    const { focused } = this.state;\n\n    if (!focused) return false;\n\n    switch (e.type) {\n      case GamepadEnum.A:\n        this.field.click();\n        break;\n      case GamepadEnum.DOWN:\n      case GamepadEnum.UP:\n      case GamepadEnum.LEFT:\n      case GamepadEnum.RIGHT:\n        if (onPad) onPad(e);\n        break;\n      default:\n        break;\n    }\n    return true;\n  }\n\n  componentDidMount() {\n    const { gamepadNotifier } = this.context;\n\n    if (gamepadNotifier) {\n      gamepadNotifier.addCallback(this.gamepadCallback);\n    }\n  }\n\n  componentWillUnmount() {\n    const { gamepadNotifier } = this.context;\n\n    if (gamepadNotifier) {\n      gamepadNotifier.removeCallback(this.gamepadCallback);\n    }\n  }\n\n  onFocus = () => {\n    this.setState({ focused: true });\n  }\n\n  onBlur = () => {\n    this.setState({ focused: false });\n  }\n\n  focus() {\n    const { focused } = this.state;\n    const { field } = this;\n\n    if (!focused && field) {\n      field.focus();\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { checked, onChange } = this.props;\n\n    return (\n      <label className={styles['dialog-switch']}>\n        <input type=\"checkbox\"\n          ref={(field) => { this.field = field; }}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChange={onChange}\n          checked={checked}\n        />\n        <span className={styles[\"dialog-switch-slider\"]}>\n        </span>\n      </label>\n    );\n  }\n};\n\nSwitch.contextType = WebrcadeContext;\n","import React, { Component } from \"react\";\n\nimport { GamepadEnum } from \"../../../input\"\nimport { WebrcadeContext } from '../../context/webrcadecontext.js'\n\nimport styles from './style.scss'\n\nexport class TextField extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      focused: false\n    };\n  }\n\n  gamepadCallback = (e) => {\n    const { onPad } = this.props;\n    const { focused } = this.state;\n\n    if (!focused) return false;\n\n    switch (e.type) {\n      case GamepadEnum.A:\n        // this.onClick();\n        break;\n      case GamepadEnum.DOWN:\n      case GamepadEnum.UP:\n      case GamepadEnum.LEFT:\n      case GamepadEnum.RIGHT:\n        if (onPad) onPad(e);\n        break;\n      default:\n        break;\n    }\n    return true;\n  }\n\n  componentDidMount() {\n    const { gamepadNotifier } = this.context;\n\n    if (gamepadNotifier) {\n      gamepadNotifier.addCallback(this.gamepadCallback);\n    }\n  }\n\n  componentWillUnmount() {\n    const { gamepadNotifier } = this.context;\n\n    if (gamepadNotifier) {\n      gamepadNotifier.removeCallback(this.gamepadCallback);\n    }\n  }\n\n  onClick = e => {\n    const { onClick } = this.props;\n    if (onClick) onClick();\n  }\n\n  onFocus = () => {\n    this.setState({ focused: true });\n  }\n\n  onBlur = () => {\n    this.setState({ focused: false });\n  }\n\n  focus() {\n    const { focused } = this.state;\n    const { field } = this;\n\n    if (!focused && field) {\n      field.focus();\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { width } = this.props;\n\n    let style = {};\n    if (width) style.width = width;\n\n    return (\n      <input\n        className={styles['text-field']}\n        type=\"text\"\n        style={style}\n        ref={(field) => { this.field = field; }}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      />\n    );\n  }\n};\n\nTextField.contextType = WebrcadeContext;\n","import React from \"react\";\nimport { Component } from \"react\";\n\nimport {\n  ChevronLeftWhiteImage,\n  ChevronRightWhiteImage,\n} from '../../../images'\n\nimport { ImageButton } from \"../../components/image-button\";\nimport { Resources } from \"../../../resources\";\nimport { Screen } from \"../../components/screen\";\nimport { WebrcadeContext } from \"../../context/webrcadecontext\";\nimport { TEXT_IDS } from \"../../../resources\";\n\nimport styles from './style.scss'\n\nexport class EditorScreen extends Screen {\n  constructor() {\n    super();\n\n    this.analogCallback = null;\n    this.okButtonRef = React.createRef();\n    this.cancelButtonRef = React.createRef();\n    this.tabLeftRef = React.createRef();\n    this.tabRightRef = React.createRef();\n    this.state = {\n      tabIndex: 0\n    };\n  }\n\n  focus() {\n    const { okButtonRef } = this;\n\n    if (this.gamepadNotifier.padCount > 0) {\n      if (okButtonRef && okButtonRef.current) {\n        okButtonRef.current.focus();\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { gamepadNotifier } = this;\n    const { tabIndex } = this.state;\n\n    super.componentDidMount();\n\n    if (!this.analogCallback) {\n      this.analogCallback = e => {\n        if (e.type === 'r_analog_y') {\n          if (this.contentRef) {\n            const el = this.contentRef;\n            const height = (el.scrollHeight - el.clientHeight);\n            let adjust = el.scrollTop + (e.value * 10);\n            if (adjust < 0) {\n              adjust = 0;\n            } else if (adjust > height) {\n              adjust = height;\n            }\n            el.scrollTop = adjust;\n          }\n        }\n      };\n      gamepadNotifier.addAnalogCallback(this.analogCallback);\n    }\n\n    this.setFocusGridComponents(null);\n    this.onTabChange(undefined, tabIndex);\n  }\n\n  componentWillUnmount() {\n    const { gamepadNotifier } = this;\n\n    super.componentWillUnmount();\n\n    if (this.analogCallback) {\n      gamepadNotifier.removeAnalogCallback(this.analogCallback);\n    }\n  }\n\n  onTabChange(prevTabIndex, newTabIndex) {\n    const { onTabChange } = this.props;\n    if (onTabChange) onTabChange(prevTabIndex, newTabIndex);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { tabIndex } = this.state;\n    const { focusGridComps } = this.props;\n    const prevTabIndex = prevState.tabIndex;\n    if (prevTabIndex !== tabIndex) {\n      this.onTabChange(prevTabIndex, tabIndex);\n    }\n    const prevFocusGridComps = prevProps.focusGridComps;\n    if (focusGridComps !== prevFocusGridComps) {\n      this.setFocusGridComponents(focusGridComps);\n    }\n  }\n\n  setFocusGridComponents(gridComps) {\n    const { focusGrid } = this;\n    const { showCancel } = this.props;\n\n    const comps = [];\n    comps.push([this.tabLeftRef, this.tabRightRef]);\n    if (gridComps) {\n      for (const i in gridComps) {\n        comps.push(gridComps[i]);\n      }\n    }\n    if (showCancel) {\n      comps.push([this.okButtonRef, this.cancelButtonRef]);\n    } else {\n      comps.push([this.okButtonRef]);\n    }\n\n    focusGrid.setComponents(comps);\n  }\n\n  renderTabButton(isPrev) {\n    const { tabLeftRef, tabRightRef, focusGrid } = this;\n    const { tabs } = this.props;\n    const { tabIndex } = this.state;\n    const MIN_TAB = 0;\n    const MAX_TAB = tabs.length - 1;\n\n    const disabled = (isPrev && tabIndex === MIN_TAB) || (!isPrev && tabIndex === MAX_TAB);\n\n    const fadeOut = () => {\n      this.headingRef.classList.remove(styles['editor-screen-content-fade-in']);\n      this.contentRef.classList.remove(styles['editor-screen-content-fade-in']);\n      this.contentRef.scrollTop = 0;\n    }\n\n    return (\n      <ImageButton\n        className={styles['editor-screen-heading-group-button'] + (disabled ? (' ' + styles['editor-screen-button-hide']) : '')}\n        disabled={disabled}\n        ref={isPrev ? tabLeftRef : tabRightRef}\n        onPad={e => focusGrid.moveFocus(e.type, isPrev ? tabLeftRef : tabRightRef)}\n        imgSrc={isPrev ? ChevronLeftWhiteImage : ChevronRightWhiteImage}\n        onClick={() => {\n          if (!disabled) {\n            fadeOut();\n            const newIndex = (isPrev ? tabIndex - 1 : tabIndex + 1);\n            if ((isPrev && newIndex === MIN_TAB) || (!isPrev && newIndex === MAX_TAB)) {\n              setTimeout(() => {\n                if (isPrev) {\n                  tabRightRef.current.focus()\n                } else {\n                  tabLeftRef.current.focus();\n                }\n              }, 50);\n            }\n            this.setState({ tabIndex: newIndex });\n          }\n        }}\n      />\n    )\n  }\n\n  renderTabImage(tabIndex) {\n    const { tabs } = this.props;\n    return (\n      <img className={styles['editor-screen-heading-group-image']} src={tabs[tabIndex].image} alt=\"\"></img>\n    );\n  }\n\n  renderTabLabel(tabIndex) {\n    const { tabs } = this.props;\n    return (\n      <span className={styles['editor-screen-heading-group-right-text']}>{tabs[tabIndex].label}</span>\n    );\n  }\n\n  renderContent(tabIndex) {\n    const { tabs } = this.props;\n    return tabs[tabIndex].content;\n  }\n\n  render() {\n    const { okButtonRef, cancelButtonRef, screenContext, screenStyles, focusGrid } = this;\n    const { onOk, onClose, showCancel } = this.props;\n    const { tabIndex } = this.state;\n\n    setTimeout(() => {\n      this.headingRef.classList.add(styles['editor-screen-content-fade-in']);\n      this.contentRef.classList.add(styles['editor-screen-content-fade-in']);\n    }, 0);\n\n    return (\n      <WebrcadeContext.Provider value={screenContext}>\n        <div className={screenStyles['screen-transparency']} style={{ 'animation': 'none' }} />\n        <div className={styles['editor-screen']}>\n          <div className={styles['editor-screen-inner']}>\n            <div ref={(heading) => { this.headingRef = heading; }} className={styles['editor-screen-heading']}>\n              <div className={styles['editor-screen-heading-group']}>\n                {this.renderTabButton(true)}\n                {this.renderTabImage(tabIndex)}\n                {this.renderTabLabel(tabIndex)}\n                {this.renderTabButton(false)}\n              </div>\n            </div>\n            <div className={styles['editor-screen-content']} ref={(content) => { this.contentRef = content; }}>\n              <div className={styles['editor-screen-content-container']}>\n                {this.renderContent(tabIndex)}\n              </div>\n            </div>\n            <div className={styles['editor-screen-buttons']}>\n              <ImageButton\n                ref={okButtonRef}\n                onPad={e => focusGrid.moveFocus(e.type, okButtonRef)}\n                label={Resources.getText(TEXT_IDS.OK)}\n                onClick={() => {\n                  if (onOk) {\n                    onOk();\n                  } else {\n                    onClose();\n                  }\n                }}\n              />\n              {showCancel ? (\n                <ImageButton\n                  ref={cancelButtonRef}\n                  onPad={e => focusGrid.moveFocus(e.type, cancelButtonRef)}\n                  label={Resources.getText(TEXT_IDS.CANCEL)}\n                  onClick={() => onClose()}\n                />\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </WebrcadeContext.Provider>\n    );\n  }\n}\n\nexport class EditorTab extends Component {\n}\n","import React, { Component } from \"react\";\n\nimport * as LOG from '../../../log';\nimport { AppProps } from '../../../app';\nimport { AppRegistry } from '../../../apps';\nimport { isDev } from '../../../util';\n\nimport styles from './style.scss'\n\nexport const APP_DIV_ID = \"webrcade-app\";\nexport const APP_FRAME_ID = \"webrcade-app-iframe\";\n\nexport class AppScreen extends Component {\n\n  constructor() {\n    super();\n\n    this.frameRetryId = null;\n  }\n\n  MAX_LOAD_TIME = 10 * 1000;\n  STATUS_DIV_ID = \"webrcade-app-status-div\";\n\n  clearRefreshTimout() {\n    const { frameRetryId } = this;\n\n    if (frameRetryId != null) {\n      clearTimeout(frameRetryId);\n      this.frameRetryId = null;\n    }\n  }\n\n  messageListener = e => {\n    if (e.data === 'appLoaded') {\n      LOG.info(\"app loaded message received.\")\n      this.clearRefreshTimout();\n    }\n  }\n\n  getAppDiv() {\n    return document.getElementById(APP_DIV_ID);\n  }\n\n  getAppIframe() {\n    return document.getElementById(APP_FRAME_ID);\n  }\n\n  getStatusDiv() {\n    return document.getElementById(this.STATUS_DIV_ID);\n  }\n\n  componentDidMount() {\n    const { MAX_LOAD_TIME } = this;\n\n    window.addEventListener(\"message\", this.messageListener);\n\n    this.frameRetryId = setTimeout(() => {\n      const iframe = this.getAppIframe();\n      if (iframe && !isDev()) {\n        LOG.info(\"attempting to reload frame, exceeded wait timeout: \" + MAX_LOAD_TIME);\n        iframe.contentDocument.location.reload();\n      }\n    }, MAX_LOAD_TIME);\n  }\n\n  componentWillUnmount() {\n    const { app, exitCallback } = this.props;\n    const reg = AppRegistry.instance;\n    const appDiv = this.getAppDiv();\n\n    if (!reg.isDelayedExit(app)) {\n      if (appDiv) {\n        appDiv.parentNode.removeChild(appDiv);\n        if (exitCallback) {\n          exitCallback();\n        }\n      }\n    } else {\n      const statusDiv = this.getStatusDiv();\n      if (statusDiv) {\n        statusDiv.style.display = 'block';\n        setTimeout(() => {\n          statusDiv.style.opacity = '1.0';\n        }, 100);\n      }\n\n      // This is a total hack to try to get browsers to free up\n      // the memory used by emscripten in the iframe\n      let count = 0;\n      const appDiv = this.getAppDiv();\n      if (appDiv) {\n        const iframe = appDiv.children[0];\n        iframe.style.height = '20px';\n        iframe.style.opacity = '0';\n        let intervalId = setInterval(() => {\n          if (count === 20) { // 20 worked\n            clearInterval(intervalId);\n            appDiv.parentNode.removeChild(appDiv);\n            if (exitCallback) {\n              exitCallback();\n            }\n          }\n          iframe.src = \"about:blank\";\n          count++;\n        }, 100);\n      }\n    }\n\n    window.removeEventListener(\"message\", this.messageListener);\n\n    this.clearRefreshTimout();\n  }\n\n  render() {\n    const { app, context, feedProps } = this.props;\n    const reg = AppRegistry.instance;\n\n    let location = reg.getLocation(app, context, feedProps);\n    if (!isDev() && context && context === AppProps.RV_CONTEXT_EDITOR) {\n      location = \"../../\" + location;\n    }\n\n    let appDiv = this.getAppDiv();\n    if (!appDiv) {\n      appDiv = document.createElement(\"div\");\n      appDiv.className = APP_DIV_ID;\n      appDiv.id = APP_DIV_ID;\n\n      const iframe = document.createElement(\"iframe\");\n      if (!isDev()) {\n        iframe.style.display = 'none';\n      }\n      iframe.id = APP_FRAME_ID;\n      iframe.setAttribute(\"width\", \"100%\");\n      iframe.setAttribute(\"height\", \"100%\");\n      iframe.setAttribute(\"frameBorder\", \"0\");\n      iframe.setAttribute(\"src\", location);\n      iframe.setAttribute(\"allow\", \"autoplay; gamepad\");\n      appDiv.appendChild(iframe);\n\n      const statusDiv = document.createElement(\"div\");\n      statusDiv.id = this.STATUS_DIV_ID;\n      statusDiv.innerHTML = \"Exiting...\";\n      statusDiv.style.position = \"absolute\";\n      statusDiv.style.left = \"50%\";\n      statusDiv.style.top = \"50%\";\n      statusDiv.style.marginRight = \"-50%\";\n      statusDiv.style.transform = \"translate(-50%, -50%)\";\n      statusDiv.style.fontSize = \"2.75vw\";\n      statusDiv.style.zIndex = \"5\";\n      statusDiv.style.fontFamily = \"Quicksand\";\n      statusDiv.style.transition = \"opacity 1s\";\n      statusDiv.style.display = 'none';\n      statusDiv.style.cursor = 'none';\n      statusDiv.style.opacity = '0';\n      appDiv.appendChild(statusDiv);\n\n      document.body.appendChild(appDiv);\n    }\n\n    return (<div></div>);\n  }\n};\n","import React from \"react\";\nimport { Component } from \"react\";\n\nimport { EditorTab } from '../'\n\nimport styles from './fields-style.scss'\n\nexport class FieldRow extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className={styles['fields-screen-row']}>\n        {children}\n      </div>\n    )\n  }\n}\n\nexport class FieldLabel extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className={styles['fields-screen-label']}>\n        {children}\n      </div>\n    )\n  }\n}\n\nexport class FieldControl extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className={styles['fields-screen-control']}>\n        {children}\n      </div>\n    )\n  }\n}\n\nexport class FieldsTab extends EditorTab {\n}\n","import {\r\n  addDebugDiv,\r\n  registerAudioResume,\r\n  AppWrapper,\r\n  Controller,\r\n  Controllers,\r\n  LOG,\r\n  CIDS\r\n} from \"@webrcade/app-common\"\r\n\r\nexport class Boom extends AppWrapper {\r\n  constructor(app, debug = false) {\r\n    super(app, debug);\r\n\r\n    this.key = null;\r\n\r\n    if (this.debug) {\r\n      this.debugDiv = addDebugDiv();\r\n    }\r\n  }\r\n\r\n  SAVE_COUNT = 8;\r\n  FS_PREFIX = \"/save\";\r\n  CFG_FILE = \"prboom.cfg\";\r\n  SAV_PREFIX = \"prbmsav\";\r\n  SAV_EXT = \".dsg\";\r\n\r\n  createControllers() {\r\n    return new Controllers([\r\n      new Controller()\r\n    ]);\r\n  }\r\n\r\n  createTouchListener() {\r\n    // No touch listener\r\n    return null;\r\n  }\r\n\r\n  createVisibilityMonitor() {\r\n    // No visibility monitor\r\n    return null;\r\n  }\r\n\r\n  createAudioProcessor() {\r\n    // No audio processor\r\n    return null;\r\n  }\r\n\r\n  async populateFiles() {\r\n    const {\r\n      app,\r\n      key,\r\n      storage,\r\n      CFG_FILE,\r\n      FS,\r\n      FS_PREFIX,\r\n      SAV_EXT,\r\n      SAV_PREFIX,\r\n      SAVE_COUNT\r\n    } = this;\r\n\r\n    // Create the save path (MEM FS)\r\n    FS.mkdir(FS_PREFIX);\r\n\r\n    for (let i = -1; i < SAVE_COUNT; i++) {\r\n      const fileName = (i === -1 ? CFG_FILE : SAV_PREFIX + i + SAV_EXT);\r\n      const path = FS_PREFIX + \"/\" + fileName;\r\n      const storagePath = app.getStoragePath(`${key}/${fileName}`);\r\n      try {\r\n        const res = FS.analyzePath(path, true);\r\n        if (!res.exists) {\r\n          const s = await storage.get(storagePath);\r\n          if (s) {\r\n            FS.writeFile(path, s);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        LOG.error(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  async storeFiles() {\r\n    const {\r\n      app,\r\n      key,\r\n      storage,\r\n      CFG_FILE,\r\n      FS,\r\n      FS_PREFIX,\r\n      SAV_EXT,\r\n      SAV_PREFIX,\r\n      SAVE_COUNT\r\n    } = this;\r\n\r\n    for (let i = -1; i < SAVE_COUNT; i++) {\r\n      const fileName = (i === -1 ? CFG_FILE : SAV_PREFIX + i + SAV_EXT);\r\n      const path = FS_PREFIX + \"/\" + fileName;\r\n      const storagePath = app.getStoragePath(`${key}/${fileName}`);\r\n      try {\r\n        const res = FS.analyzePath(path, true);\r\n        if (res.exists) {\r\n          const s = FS.readFile(path);              \r\n          if (s) {\r\n            await storage.put(storagePath, s);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        LOG.error(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  loadBoom(key, canvas, loadingCb) {\r\n    const { app, controllers } = this;\r\n\r\n    this.key = key;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      window.Module = {\r\n        canvas: canvas,\r\n        elementPointerLock: true,\r\n        prSyncFs: async () => { \r\n          try {\r\n            await this.storeFiles();\r\n          } catch (e) {\r\n            LOG.error(e);\r\n          }\r\n        },\r\n        onAbort: (msg) => { app.exit(msg); },\r\n        onExit: () => { \r\n          controllers.waitUntilControlReleased(0, CIDS.A)\r\n            .then(() => app.exit())\r\n            .catch((e) => LOG.error(e))\r\n        },\r\n        setWindowTitle: () => { return window.title; },\r\n        //locateFile: (path, prefix) => { return 'js/' + key + \"/\" + path; },\r\n        //locateFile: (path, prefix) => { return 'https://archive.org/download/webrcade-default-feed/default-feed.zip/default-feed%2Fcontent%2Fdoom%2f' + key + \"%2f\" + path; },\r\n        locateFile: (path, prefix) => { return 'https://raw.githubusercontent.com/webrcade/webrcade-app-prboom/master/public/js/' + key + \"%2f\" + path; },        \r\n        onRuntimeInitialized: () => {\r\n          const f = () => {            \r\n            if (window.SDL && window.SDL.audioContext) {\r\n              if (window.SDL.audioContext.state !== 'running') {\r\n                app.setShowOverlay(true);\r\n                registerAudioResume(\r\n                  window.SDL.audioContext,\r\n                  (running) => { setTimeout(() => app.setShowOverlay(!running), 50); },\r\n                  500\r\n                );\r\n              }\r\n            } else {\r\n              setTimeout(f, 1000);\r\n            }\r\n          }          \r\n          setTimeout(f, 1000);          \r\n          resolve();\r\n        },\r\n        setStatus: (status) => {\r\n          let loading = status.match(/([^(]+)\\((\\d+(\\.\\d+)?)\\/(\\d+)\\)/);\r\n          if (loading) {\r\n            let progress = loading[2] / loading[4] * 100;\r\n            if (loadingCb) loadingCb(progress);\r\n          }\r\n        },\r\n        preRun: [async () => { \r\n          const { Module } = window;\r\n          Module.addRunDependency();\r\n          this.FS = window.FS;\r\n          try {\r\n            await this.populateFiles();\r\n          } catch (e) {\r\n            LOG.error(e);\r\n          } finally {\r\n            Module.removeRunDependency();\r\n          }\r\n        }]\r\n      }\r\n\r\n      const script = document.createElement('script');\r\n      document.body.appendChild(script);\r\n      script.src = 'js/' + key + '/' + key + '.js';\r\n    });\r\n  }\r\n}\r\n","import { \n  Resources, \n  WebrcadeApp, \n  LOG,\n  TEXT_IDS \n} from '@webrcade/app-common'\nimport { Boom } from './boom'\n\nimport './App.scss';\n\nclass App extends WebrcadeApp {\n  boom = null;\n  GAMES = ['doom1', 'freedoom1', 'freedoom2'];\n\n  componentDidMount() {\n    super.componentDidMount();\n\n    if (this.boom === null) {\n      this.boom = new Boom(this, this.isDebug());\n    }\n\n    const { appProps, boom, ModeEnum, GAMES } = this;\n\n    try {\n      // Get the game that was specified\n      let game = appProps.game;\n\n      if (!game) throw new Error(\"A game was not specified.\");\n      game = game.toLowerCase();\n      let found = false;\n      for (let i = 0; !found && i < GAMES.length; i++) {\n        found = GAMES[i] === game;\n      }\n      if (!found) throw new Error(\"Unknown game: \" + game);\n\n      boom.loadBoom(game, this.canvas,\n        (percent) => { this.setState({ loadingPercent: percent | 0 }) })\n        .then(() => this.setState({ mode: ModeEnum.LOADED }))\n        .catch(msg => {\n          LOG.error(msg);\n          this.exit(this.isDebug() ? msg : Resources.getText(TEXT_IDS.ERROR_RETRIEVING_GAME));\n        })\n    } catch (e) {\n      this.exit(e);\n    }\n  }\n\n  componentDidUpdate() {\n    const { mode } = this.state;\n    const { canvas, ModeEnum } = this;\n\n    if (mode === ModeEnum.LOADED) {\n      canvas.style.display = 'block';\n      window.focus();\n    }\n  }\n\n  renderCanvas() {\n    return (\n      <canvas ref={canvas => { this.canvas = canvas; }} id=\"GameCanvas\"></canvas>\n    );\n  }\n\n  render() {\n    const { mode } = this.state;\n    const { ModeEnum } = this;\n\n    return (\n      <>\n        { super.render()}\n        { mode === ModeEnum.LOADING ? this.renderLoading() : null}\n        { this.renderCanvas()}\n      </>\n    );\n  }\n\n  async onPreExit() {\n    try {\n      await super.onPreExit();\n      await this.boom.storeFiles();\n    } catch (e) {\n      LOG.error(e);\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '@webrcade/app-common/dist/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}